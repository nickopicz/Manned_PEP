SymbolName,Index,SubIndex,ObjectType,DataType,Visibility,AccessType,MinimumValue,MaximumValue,DefaultValue,Factor,Unit,Description
DeviceType,0x1000,0,VAR,UNSIGNED32,Operator,ro,0,4294967295,,1,-,"<p>Contains information about the device type. The object at index 1000h describes the type of device

          and its functionality. It is composed of a 16-bit field which describes the device profile that is

          used and a second 16-bit field which gives additional information about optional functionality of

          the device. The Additional Information parameter is device profile specific. Its specification does

          not fall within the scope of this document, it is defined in the appropriate device profile. The

          value 0000h indicates a device that does not follow a standardised device profile.

       </p>

       <ul> 

        <li>01000000h: Traction (ACS, ACD)</li>

        <li>02000000h: Lift Pump (ACS,ACD)</li>

        <li>03000000h: Steering (APS, ACS, ACD)</li>

        <li>04000000h: Master unit (CANION)</li>

        <li>05000000h: I/O unit (CANION)</li>

        <li>06000000h: Display</li>

        <li>07000000h: Joystick</li>

        <li>08000000h: Wire Guidance Unit (WGU)</li>

        <li>10000000h: Steering pump</li>

       </ul>"
ErrorRegister,0x1001,0,VAR,UNSIGNED8,Operator,ro,0,255,-,1,-,"<p>This is an error register for the device.</p>

        <ul>

         <li>Bit 0 (GENERIC): Always 1 in case of an error.</li>

         <li>Bit 1-7: Always zeros. </li>

        </ul>"
LastSubIndex,0x1003,0,VAR,UNSIGNED8,Service,rw,0,255,0,1,-,"<p>The entry at sub-index 0 contains the number of actual errors that are recorded starting at subindex 1.</p>

        <p>Writing a zero to sub-index 0 clears the error log.</p>

        <p>Subindex 0 must be read before any other subindex is read. Reading any other subindex before reading subindex

        will result in corrupt information since error list is not generated before Subindex 0 is read. </p>

        <p>Read this subindex only once before traversing the Indices related to the ErrorLog. DO NOT read this subindex during the traversal

        as this will regenerate the sorted list presented via these Indices. If an error occurs during the traversal an inconsistent view will

        result. </p>"
CanOpenErrorLog,0x1003,1,ARRAY,UNSIGNED32,Service,ro,0,4294967295,-,1,-,"<p>Every new error is stored at sub-index 1, the older ones move down the list.</p>

        <p>Subindex 0 must be read before any other subindex is read. Reading any other subindex before reading subindex

        will result in corrupt information since error list is not generated before Subindex 0 is read. </p>

        <p> If an event is configured as a warning and to be stored in the error log, there might be warnings in the error log. </p>"
CobIdSyncMessage,0x1005,0,VAR,UNSIGNED32,Operator,ro,0,4294967295,128,1,-,"COB-ID SYNC Message. <br/>

        Defines the COB-ID of the SYNC object. Further, it defines whether the device generates the SYNC."
ManufacturerDeviceName,0x1008,0,VAR,VISIBLE_STRING,Operator,ro,-,-,PLASMA3 STD,1,-,"Inmotion internal device family name, application dependent. Returns

        typically ""ACS gen 6""."
LastSubIndex,0x1010,0,VAR,UNSIGNED8,Operator,ro,0,255,0,1,-,Numbers of entries.
StoreAllParameters,0x1010,1,VAR,UNSIGNED32,Operator,rw,0,4294967295,0,1,-,"<p>Store All Parameters.</p>

        <p>All = Plasma, Communication and Application Parameters.</p>

        <p>Store Parameters in E2prom (copy from RAM to EEPROM) by writing value = 65766173h.

           The signature is ""evas"", i.e. save backwards.</p>

        <p>Read returns value 1 if no storing is in progress (IDLE STATE). Read returns value 0

           if any storing is in progress (BUSY STATE). If busy when storing, commando is queued.

           (ACCESS_CODE is returned if value is wrong).</p>"
StoreCommunicationParameters,0x1010,2,VAR,UNSIGNED32,Operator,rw,0,4294967295,0,1,-,"<p>Store Communication Parameters.</p>

        See description above."
StorePlasmaParameters,0x1010,3,VAR,UNSIGNED32,Operator,rw,0,4294967295,0,1,-,"<p>Store Plasma Parameters.</p>

        See description above."
StoreApplicationParameters,0x1010,4,VAR,UNSIGNED32,Operator,rw,0,4294967295,0,1,-,"<p>Store Application Parameters.</p>

        See description above."
LastSubIndex,0x1011,0,VAR,UNSIGNED8,Operator,ro,0,255,0,1,-,Numbers of entries.
RestoreAllParameters,0x1011,1,VAR,UNSIGNED32,Operator,rw,0,4294967295,0,1,-,"<p>Restore All Parameters.</p>

        <p>All = Plasma, Communication ans Application Parameters.</p>

        <p>Restore Default Values From ROM (Flash Memory) to RAM by writing value = 64616F6Ch.

        The signature is ""daol"", i.e. load backwards. Does NOT store default vales to EEPROM

        from RAM.</p>



        <p>Can't restore if drive is enabled. Read returns value 1 if no storing is in progress

        (IDLE STATE). Read returns value 0 if any storing to EEPROM is in progress (BUSY STATE).

        If busy when storing, commando is queued. (ACCESS_CODE is returned if value is wrong and

        DEVICE_STATE_CODE if drive is enabled).</p>"
RestoreCommunicationParameters,0x1011,2,VAR,UNSIGNED32,Operator,rw,0,4294967295,0,1,-,"<p>Restore Communication Parameters.</p>

        See description above."
RestorePlasmaParameters,0x1011,3,VAR,UNSIGNED32,Operator,rw,0,4294967295,0,1,-,"<p>Restore Plasma Parameters.</p>

        See description above."
RestoreApplicationParameters,0x1011,4,VAR,UNSIGNED32,Operator,rw,0,4294967295,0,1,-,"<p>Restore Application Parameters.</p>

        See description above."
CobIdEmcyMessage,0x1014,0,VAR,UNSIGNED32,Operator,ro,0,4294967295,,1,-,"Defines the COB-ID of the EMCY object. <br/>

       Default: 80h + Node Id"
InhibitTime,0x1015,0,VAR,UNSIGNED16,OEM,rw,0,65535,100U,1,ms,Minimum time between two EMCY messages.
ProducerHeartbeatTime,0x1017,0,VAR,UNSIGNED16,OEM,rw,0,65535,0U,1,ms,The time between when two heartbeats will be sent.
LastSubIndex,0x1018,0,VAR,UNSIGNED8,Operator,ro,0,255,0,1,-,Numbers of entries.
VendorId,0x1018,1,VAR,UNSIGNED32,Operator,ro,0,4294967295,99,1,-,Returns the Vendor Id for Inmotion = 99h.
LastSubIndex,0x1200,0,VAR,UNSIGNED8,Operator,ro,0,255,0,1,-,Numbers of entries.
CobIdSDO1rx,0x1200,1,VAR,UNSIGNED32,Operator,ro,0,4294967295,0,1,-,"COB-ID used by SDO1rx. <br/>

        Default: 600h + Node Id."
CobIdSDO1tx,0x1200,2,VAR,UNSIGNED32,Operator,ro,0,4294967295,0,1,-,"COB-ID used by SDO1tx. <br/>

        Default: 580h + Node Id."
LastSubIndex,0x1201,0,VAR,UNSIGNED8,Operator,ro,0,255,0,1,-,Numbers of entries.
CobIdSDO2rx,0x1201,1,VAR,UNSIGNED32,Operator,ro,0,4294967295,0,1,-,"COB-ID used by SDO2rx. <br/>

        Default: 620h + Node Id."
CobIdSDO2tx,0x1201,2,VAR,UNSIGNED32,Operator,ro,0,4294967295,0,1,-,"COB-ID used by SDO2tx. <br/>

        Default: 5A0h + Node Id."
LastSubIndex,0x1400,0,VAR,UNSIGNED8,Operator,ro,0,255,0,1,-,Numbers of entries.
CobIdPDO1rx,0x1400,1,VAR,UNSIGNED32,OEM,rw,0,4294967295,0,1,-,"<p>Cob id.</p>

        <p>The PDO can be disabled by setting the PDO_NOT_VALID bit in it's id field. i.e. write 0x80000000 to the CobId for the PDO.</p>

        <p>Changing the not valid bit is only possible in state CO_PRE_OPERATIONAL.</p>"
TransTypePDO1rx,0x1400,2,VAR,UNSIGNED8,OEM,rw,1,254,254U,1,-,"<ul>

        <li>1-240: Unpack the last received data at next SYNC.</li>

        <li> 254: Unpack the received data immediately</li>

        </ul>"
LastSubIndex,0x1401,0,VAR,UNSIGNED8,Operator,ro,0,255,0,1,-,Numbers of entries.
CobIdPDO2rx,0x1401,1,VAR,UNSIGNED32,OEM,rw,0,4294967295,0,1,-,"<p>Cob id.</p>

        <p>The PDO can be disabled by setting the PDO_NOT_VALID bit in it's id field. i.e. write 0x80000000 to the CobId for the PDO.</p>

        <p>Changing the not valid bit is only possible in state CO_PRE_OPERATIONAL.</p>"
TransTypePDO2rx,0x1401,2,VAR,UNSIGNED8,OEM,rw,1,254,254U,1,-,"<ul>

        <li>1-240: Unpack the last received data at next SYNC.</li>

        <li> 254: Unpack the received data immediately</li>

        </ul>"
LastSubIndex,0x1402,0,VAR,UNSIGNED8,Operator,ro,0,255,0,1,-,Numbers of entries.
CobIdPDO3rx,0x1402,1,VAR,UNSIGNED32,OEM,rw,0,4294967295,0,1,-,"<p>Cob id.</p>

        <p>The PDO can be disabled by setting the PDO_NOT_VALID bit in it's id field. i.e. write 0x80000000 to the CobId for the PDO.</p>

        <p>Changing the not valid bit is only possible in state CO_PRE_OPERATIONAL.</p>"
TransTypePDO3rx,0x1402,2,VAR,UNSIGNED8,OEM,rw,1,254,254U,1,-,"<ul>

        <li>1-240: Unpack the last received data at next SYNC.</li>

        <li> 254: Unpack the received data immediately</li>

        </ul>"
LastSubIndex,0x1403,0,VAR,UNSIGNED8,Operator,ro,0,255,0,1,-,Numbers of entries.
CobIdPDO4rx,0x1403,1,VAR,UNSIGNED32,OEM,rw,0,4294967295,0,1,-,"<p>Cob id.</p>

        <p>The PDO can be disabled by setting the PDO_NOT_VALID bit in it's id field. i.e. write 0x80000000 to the CobId for the PDO.</p>

        <p>Changing the not valid bit is only possible in state CO_PRE_OPERATIONAL.</p>"
TransTypePDO4rx,0x1403,2,VAR,UNSIGNED8,OEM,rw,1,254,254U,1,-,"<ul>

        <li>1-240: Unpack the last received data at next SYNC.</li>

        <li> 254: Unpack the received data immediately</li>

        </ul>"
LastSubIndex,0x1600,0,VAR,UNSIGNED8,OEM,rw,0,255,0,1,-,Number of Mapped Applications Objects in PDO1Rx.
Mapping,0x1600,1,ARRAY,UNSIGNED32,OEM,rw,0,4294967295,0,1,-,"<p>Mapping for the n:th Application Object to be Mapped.</p>

        <p>Example: 2001h:2 (16-bit variable) gives value=20010210h

           where index=2001h subindex=2h datatype=10h (->U16).</p>

        <p>When a PDO is disabled it is possible to set new values in the its map, The number of parameter 

        can be changed by writing the required number in the LastSubIndex field.</p>

        <p>Changing the map is only possible in state CO_PRE_OPERATIONAL.</p>"
LastSubIndex,0x1601,0,VAR,UNSIGNED8,OEM,rw,0,255,0,1,-,Number of Mapped Applications Objects in PDO2Rx.
Mapping,0x1601,1,ARRAY,UNSIGNED32,OEM,rw,0,4294967295,0,1,-,"<p>Mapping for the n:th Application Object to be Mapped.</p>

        <p>Example: 2001h:2 (16-bit variable) gives value=20010210h

           where index=2001h subindex=2h datatype=10h (->U16).</p>

        <p>When a PDO is disabled it is possible to set new values in the its map, The number of parameter 

        can be changed by writing the required number in the LastSubIndex field.</p>

        <p>Changing the map is only possible in state CO_PRE_OPERATIONAL.</p>"
LastSubIndex,0x1602,0,VAR,UNSIGNED8,OEM,rw,0,255,0,1,-,Number of Mapped Applications Objects in PDO3Rx.
Mapping,0x1602,1,ARRAY,UNSIGNED32,OEM,rw,0,4294967295,0,1,-,"<p>Mapping for the n:th Application Object to be Mapped.</p>

        <p>Example: 2001h:2 (16-bit variable) gives value=20010210h

           where index=2001h subindex=2h datatype=10h (->U16).</p>

        <p>When a PDO is disabled it is possible to set new values in the its map, The number of parameter 

        can be changed by writing the required number in the LastSubIndex field.</p>

        <p>Changing the map is only possible in state CO_PRE_OPERATIONAL.</p>"
LastSubIndex,0x1603,0,VAR,UNSIGNED8,OEM,rw,0,255,0,1,-,Number of Mapped Applications Objects in PDO4Rx.
Mapping,0x1603,1,ARRAY,UNSIGNED32,OEM,rw,0,4294967295,0,1,-,"<p>Mapping for the n:th Application Object to be Mapped.</p>

        <p>Example: 2001h:2 (16-bit variable) gives value=20010210h

           where index=2001h subindex=2h datatype=10h (->U16).</p>

        <p>When a PDO is disabled it is possible to set new values in the its map, The number of parameter 

        can be changed by writing the required number in the LastSubIndex field.</p>

        <p>Changing the map is only possible in state CO_PRE_OPERATIONAL.</p>"
LastSubIndex,0x1800,0,VAR,UNSIGNED8,Operator,ro,0,255,0,1,-,Numbers of entries.
CobIdPDO1Tx,0x1800,1,VAR,UNSIGNED32,OEM,rw,0,4294967295,0,1,-,"<p>Cob id.</p>

        <p>The PDO can be disabled by setting the PDO_NOT_VALID bit in it's id field. i.e. write 0x80000000 to the CobId for the PDO.</p>

        <p>Changing the not valid bit is only possible in state CO_PRE_OPERATIONAL.</p>"
TransmissionTypePDO1Tx,0x1800,2,VAR,UNSIGNED8,OEM,rw,1,254,10U ,1,-,"<ul>

         <li>1-240: Transmit data after the n:th SYNC.</li>

         <li>254: Transmit data immediately after receiving PDO1rx.</li>

        </ul>

        <p> PDO1Tx is by default only transmitted if PDO1Rx is used. <br/>

         It can however be transmitted also without the use of PDO1Rx if transmission 

         type is changed to 1-240 and SYNC is used. <br/>

         It is also possible to transmit PDO1Tx if SYNC is not used (i.e. if SYNC 

         Timeout is zero) when transmission type is equal to 2-240 (note, 2 is min 

         value in this transmission mode). Transmission type then defines the 

         transmission rate in milliseconds*2.</p>"
LastSubIndex,0x1801,0,VAR,UNSIGNED8,Operator,ro,0,255,0,1,-,Numbers of entries.
CobIdPDO2Tx,0x1801,1,VAR,UNSIGNED32,OEM,rw,0,4294967295,0,1,-,"Cob id. <br/>

        The PDO can be disabled by setting the PDO_NOT_VALID bit in it's id field. i.e. write 0x80000000 to the CobId for the PDO. <br/>

        Changing the not valid bit is only possible in state CO_PRE_OPERATIONAL."
TransmissionTypePDO2Tx,0x1801,2,VAR,UNSIGNED8,OEM,rw,1,254,10U ,1,-,"<ul>

        <li>1-240: Transmit data after the n:th SYNC.</li>

        <li>254: Transmit data immediately after receiving PDO2rx.</li>

        </ul>

        <p> PDO2Tx is by default only transmitted if PDO2Rx is used. <br/>

         It can however be transmitted also without the use of PDO2Rx if transmission 

         type is changed to 1-240 and SYNC is used. <br/>

         It is also possible to transmit PDO2Tx if SYNC is not used (i.e. if SYNC 

         Timeout is zero) when transmission type is equal to 2-240 (note, 2 is min 

         value in this transmission mode). Transmission type then defines the 

         transmission rate in milliseconds*2.</p>"
LastSubIndex,0x1802,0,VAR,UNSIGNED8,Operator,ro,0,255,0,1,-,Numbers of entries.
CobIdPDO3Tx,0x1802,1,VAR,UNSIGNED32,OEM,rw,0,4294967295,0,1,-,"<p>Cob id.</p>

        <p>The PDO can be disabled by setting the PDO_NOT_VALID bit in it's id field. i.e. write 0x80000000 to the CobId for the PDO.</p>

        <p>Changing the not valid bit is only possible in state CO_PRE_OPERATIONAL.</p>"
TransmissionTypePDO3Tx,0x1802,2,VAR,UNSIGNED8,OEM,rw,1,254,10U ,1,-,"<ul>

        <li>1-240: Transmit data after the n:th SYNC.</li>

        <li>254: Transmit data immediately after receiving PDO3rx.</li>

        </ul>

        <p> PDO3Tx is by default only transmitted if PDO3Rx is used. <br/>

         It can however be transmitted also without the use of PDO3Rx if transmission 

         type is changed to 1-240 and SYNC is used. <br/>

         It is also possible to transmit PDO3Tx if SYNC is not used (i.e. if SYNC 

         Timeout is zero) when transmission type is equal to 2-240 (note, 2 is min 

         value in this transmission mode). Transmission type then defines the 

         transmission rate in milliseconds*2.</p>"
LastSubIndex,0x1803,0,VAR,UNSIGNED8,Operator,ro,0,255,0,1,-,Numbers of entries.
CobIdPDO4Tx,0x1803,1,VAR,UNSIGNED32,OEM,rw,0,4294967295,0,1,-,"<p>Cob id.</p>

        <p>The PDO can be disabled by setting the PDO_NOT_VALID bit in it's id field. i.e. write 0x80000000 to the CobId for the PDO.</p>

        <p>Changing the not valid bit is only possible in state CO_PRE_OPERATIONAL.</p>"
TransmissionTypePDO4Tx,0x1803,2,VAR,UNSIGNED8,OEM,rw,1,254,10U ,1,-,"<ul>

        <li>1-240: Transmit data after the n:th SYNC.</li>

        <li>254: Transmit data immediately after receiving PDO3rx.</li>

        </ul>

        <p> PDO4Tx is by default only transmitted if PDO4Rx is used. <br/>

         It can however be transmitted also without the use of PDO4Rx if transmission 

         type is changed to 1-240 and SYNC is used. <br/>

         It is also possible to transmit PDO4Tx if SYNC is not used (i.e. if SYNC 

         Timeout is zero) when transmission type is equal to 2-240 (note, 2 is min 

         value in this transmission mode). Transmission type then defines the 

         transmission rate in milliseconds*2.</p>"
LastSubIndex,0x1A00,0,VAR,UNSIGNED8,OEM,rw,0,255,0,1,-,Number of Mapped Applications Objects in PDO1Tx.
PDO1TxMapVar,0x1A00,1,ARRAY,UNSIGNED32,OEM,rw,0,4294967295,0,1,-,"<p>Mapping for the n:th Application Object to be Mapped.</p>

        <p>Example: 2001h:2 (16-bit variable) gives value=20010210h

           where index=2001h subindex=2h datatype=10h (->U16).</p>

        <p>When a PDO is disabled it is possible to set new values in the its map, The number of parameter 

        can be changed by writing the required number in the LastSubIndex field.</p>

        <p>Changing the map is only possible in state CO_PRE_OPERATIONAL.</p>"
LastSubIndex,0x1A01,0,VAR,UNSIGNED8,OEM,rw,0,255,0,1,-,Number of Mapped Applications Objects in PDO2Tx.
PDO2TxMapVar,0x1A01,1,ARRAY,UNSIGNED32,OEM,rw,0,4294967295,0,1,-,"<p>Mapping for the n:th Application Object to be Mapped.</p>

        <p>Example: 2001h:2 (16-bit variable) gives value=20010210h

           where index=2001h subindex=2h datatype=10h (->U16).</p>

        <p>When a PDO is disabled it is possible to set new values in the its map, The number of parameter 

        can be changed by writing the required number in the LastSubIndex field.</p>

        <p>Changing the map is only possible in state CO_PRE_OPERATIONAL.</p>"
LastSubIndex,0x1A02,0,VAR,UNSIGNED8,OEM,rw,0,255,0,1,-,Number of Mapped Applications Objects in PDO3Tx.
PDO3TxMapVar,0x1A02,1,ARRAY,UNSIGNED32,OEM,rw,0,4294967295,0,1,-,"<p>Mapping for the n:th Application Object to be Mapped.</p>

        <p>Example: 2001h:2 (16-bit variable) gives value=20010210h

           where index=2001h subindex=2h datatype=10h (->U16).</p>

        <p>When a PDO is disabled it is possible to set new values in the its map, The number of parameter 

        can be changed by writing the required number in the LastSubIndex field.</p>

        <p>Changing the map is only possible in state CO_PRE_OPERATIONAL.</p>"
LastSubIndex,0x1A03,0,VAR,UNSIGNED8,OEM,rw,0,255,0,1,-,Number of Mapped Applications Objects in PDO4Tx.
PDO4TxMapVar,0x1A03,1,ARRAY,UNSIGNED32,OEM,rw,0,4294967295,0,1,-,"<p>Mapping for the n:th Application Object to be Mapped.</p>

        <p>Example: 2001h:2 (16-bit variable) gives value=20010210h

           where index=2001h subindex=2h datatype=10h (->U16).</p>

        <p>When a PDO is disabled it is possible to set new values in the its map, The number of parameter 

        can be changed by writing the required number in the LastSubIndex field.</p>

        <p>Changing the map is only possible in state CO_PRE_OPERATIONAL.</p>"
LastSubIndex,0x2000,0,VAR,UNSIGNED8,Operator,ro,0,255,0,1,-,Numbers of entries.
CommandAll,0x2000,1,VAR,UNSIGNED16,Operator,rw,0,65535,0,1,-,"<p>This is the default setting for the command bits. Can be changed by application (i.e. appl_setup.h). </p>

       <table id=""ET"">

        <tr id=""ETHead""><th>Bit</th><th id=""ETHead"">Description</th></tr>

        <tr id=""ETRow""><td>0</td>  <td id=""ETData"">Switch On (Close main contactor, if used)</td></tr>

        <tr id=""ETRow""><td>1</td>  <td id=""ETData"">Speed Neutral Brake Ramp Parameter Set LSB</td></tr>

        <tr id=""ETRow""><td>2</td>  <td id=""ETData"">Speed Neutral Brake Ramp Parameter Set MSB</td></tr>

        <tr id=""ETRow""><td>3</td>  <td id=""ETData"">Enable power stage</td></tr>

        <tr id=""ETRow""><td>4</td>  <td id=""ETData"">Speed PI Controller Parameter Set LSB</td></tr>

        <tr id=""ETRow""><td>5</td>  <td id=""ETData"">Activate Current Boost</td></tr>

        <tr id=""ETRow""><td>6</td>  <td id=""ETData"">Open Drain Output 1 On</td></tr>

        <tr id=""ETRow""><td>7</td>  <td id=""ETData"">Open Drain Output 2 On</td></tr>

        <tr id=""ETRow""><td>8</td>  <td id=""ETData"">IgnoreLowDcbus</td></tr>

        <tr id=""ETRow""><td>9</td>  <td id=""ETData"">Rollback Disable</td></tr>

        <tr id=""ETRow""><td>10</td> <td id=""ETData"">Not Used</td></tr>

        <tr id=""ETRow""><td>11</td> <td id=""ETData"">Speed Ramp Parameter Set LSB</td></tr>

        <tr id=""ETRow""><td>12</td> <td id=""ETData"">Speed Ramp Parameter Set MSB</td></tr>

        <tr id=""ETRow""><td>13</td> <td id=""ETData"">Foot Brake On</td></tr>

        <tr id=""ETRow""><td>14</td> <td id=""ETData"">Zero Magnetisation On</td></tr>

        <tr id=""ETRow""><td>15</td> <td id=""ETData"">Not Used</td></tr>

       </table>

        See comments at <a href=""#OpenDrainOutputGeneral"" >OpenDrainOutputGeneral, CommandAllControlled</a> on restrictions on setting bits 6 &amp; 7."
CommandSpeed,0x2000,2,VAR,INTEGER16,Operator,rw,see Description,see Description,0,1,Rpm,"Used in Speed Control.<br/><br/>

        CommandSpeed Min/Max limit is defined in <a href=""#ApplicationSetupParameters"" >ApplicationSetupParameters, MaxCommandSpeed</a>"
CommandTorque,0x2000,3,VAR,INTEGER16,Operator,rw,-32768,32767,0,0.1,Nm,Used in Torque Mode control (Speed Control disabled).
CommandAcCurrent,0x2000,4,VAR,INTEGER16,Operator,rw,-2317,2316,0,1,Arms,Used in Ac Current Mode control (Speed Control disabled).
CommandAccelerationChange,0x2000,5,VAR,UNSIGNED8,Operator,rw,0,255,10U,1,Rpm/2ms/SpeedChangeFactor (see Description),"Used in Speed Control with PDO Controlled Ramp.<br/><br/>

       Unit depends on <a href=""#SpeedRamp"">SpeedRamp, SpeedChangeFactor</a>

       Used to ramp FrequencyWhenNoSpeedFeedback"
CommandDecelerationChange,0x2000,6,VAR,UNSIGNED8,Operator,rw,0,255,2U,1,Rpm/2ms/SpeedChangeFactor,"Used in Speed Control with PDO Controlled Ramp.<br/><br/>

       Unit depends on <a href=""#SpeedRamp"">SpeedRamp, SpeedChangeFactor</a>"
AccelerationReductionFactor,0x2000,7,VAR,UNSIGNED8,Operator,rw,0,255,128,1,See Description,"<p>Used in Speed Control with Parameter Controlled Ramp.</p>

        <p>UsedAcceleration = Acceleration * AccelerationReductionFactor / 128</p>

        <p>AccelerationReductionFactor = 128 means no reduction.</p>"
MaxSpeedInRpmReductionFactor,0x2000,8,VAR,UNSIGNED8,Operator,rw,0,255,255,1,See Description,"<p>Used in Speed Control with Parameter Controlled Ramp. Reduction of Max Speed that is used during Reverse Brake. </p>

        <p>UsedMaxSpeed = MaxSpeed * (MaxSpeedReductionFactor+1)/256</p>

        <p>MaxSpeedReductionFactor = 255 means no reduction.</p>"
FootBrakePercentageReductionFactor,0x2000,9,VAR,UNSIGNED8,Operator,rw,0,100,100,1,%,"<p>Used in Speed Control with Parameter Controlled Ramp when foot brake is active.</p>

        <p>UsedDeceleration = Deceleration* FootBrakePercentageReductionFactor / 100</p>"
CommandVoltage,0x2000,10,VAR,INTEGER16,Operator,rw,0,32767,0,0.01,Vdc,"Interface to set a commanded voltage. This is only useful when REG_MODE

        is in DC_VOLTAGE_MODE."
CommandPosition,0x2000,12,VAR,INTEGER16,Operator,rw,-1800,1800,-,0.1,Deg,Used in Position Mode.
CommandPosInSteerWheelMode,0x2000,13,VAR,INTEGER16,Operator,rw,-1800,1800,-,0.1,Deg,"Requested Position when RequestedControlMode equals Steer wheel mode and ActualControlMode equals Position mode. <br/><br/>

        Note: If position calibration is done when RequestedControlMode equals Steer wheel mode then also write calibrated position to this parameter."
LastSubIndex,0x2001,0,VAR,UNSIGNED8,Operator,ro,0,255,0,1,-,Numbers of entries.
StatusAll,0x2001,1,VAR,UNSIGNED16,Operator,ro,0,65535,0,1,-,"<p>This is the default setting for the status bits. Can be changed by application (i.e. appl_setup.h). </p>

       <table id=""ET"">

        <tr id=""ETHead""><th>Bit</th><th>Description</th></tr>

        <tr id=""ETRow""><td>0</td>  <td id=""ETData"">Ready To Switch On (Dc bus is charged)</td></tr>

        <tr id=""ETRow""><td>1</td>  <td id=""ETData"">Switched On, drive is ready to enable (Main contactor is on, if used)</td></tr>

        <tr id=""ETRow""><td>2</td>  <td id=""ETData"">Power stage enabled</td></tr>

        <tr id=""ETRow""><td>3</td>  <td id=""ETData"">Power stage tripped</td></tr>

        <tr id=""ETRow""><td>4</td>  <td id=""ETData"">Not Used</td></tr>

        <tr id=""ETRow""><td>5</td>  <td id=""ETData"">Current Boost Activated</td></tr>

        <tr id=""ETRow""><td>6</td>  <td id=""ETData"">Error Active (If any error is active) </td></tr>

        <tr id=""ETRow""><td>7</td>  <td id=""ETData"">Warning Active (If any warning is active) </td></tr>

        <tr id=""ETRow""><td>8</td>  <td id=""ETData"">Regeneration (Power is from the drive to the battery)</td></tr>

        <tr id=""ETRow""><td>9</td>  <td id=""ETData"">Standby</td></tr>

        <tr id=""ETRow""><td>10</td> <td id=""ETData"">Sleep</td></tr>

        <tr id=""ETRow""><td>11</td> <td id=""ETData"">Current Ability Reduced</td></tr>

        <tr id=""ETRow""><td>12</td> <td id=""ETData"">Open Drain Output 1 On</td></tr>

        <tr id=""ETRow""><td>13</td> <td id=""ETData"">Open Drain Output 2 On</td></tr>

        <tr id=""ETRow""><td>14</td> <td id=""ETData"">Zero Traction Speed Requested</td></tr>

        <tr id=""ETRow""><td>15</td> <td id=""ETData"">Not Used</td></tr>

       </table>"
ActualSpeed,0x2001,2,VAR,INTEGER16,Operator,ro,-32768,32767,-,1,Rpm,"The actual speed. <br/><br/>

       Error indicator value of -32768 will be reported if failure on speed feedback sensor, that results in inability to measure speed, is detected."
SystemManagerState,0x2001,4,VAR,UNSIGNED16,Operator,ro,0,65535,-,1,-,"<table id=""ET"">

        <tr id=""ETHead""><th>U16</th><th>State</th></tr>

        <tr id=""ETRow""><td>0</td>  <td id=""ETData"">SYS_RESET</td></tr>

        <tr id=""ETRow""><td>1</td>  <td id=""ETData"">INIT_DONE</td></tr>

        <tr id=""ETRow""><td>2</td>  <td id=""ETData"">SUPPLY_CHECK</td></tr>

        <tr id=""ETRow""><td>3</td>  <td id=""ETData"">PARAMETER_UPLOAD</td></tr>

        <tr id=""ETRow""><td>4</td>  <td id=""ETData"">PARAMETERS_NOT_OK</td></tr>

        <tr id=""ETRow""><td>5</td>  <td id=""ETData"">PARAMETERS_OK</td></tr>

        <tr id=""ETRow""><td>6</td>  <td id=""ETData"">CALIBRATE</td></tr>

        <tr id=""ETRow""><td>7</td>  <td id=""ETData"">CHARGING</td></tr>

        <tr id=""ETRow""><td>8</td>  <td id=""ETData"">SLEEP</td></tr>

        <tr id=""ETRow""><td>9</td>  <td id=""ETData"">STANDBY</td></tr>

        <tr id=""ETRow""><td>10</td> <td id=""ETData"">MAIN_CONTACTOR_RELEASED</td></tr>

        <tr id=""ETRow""><td>11</td> <td id=""ETData"">READY_TO_ENABLE</td></tr>

        <tr id=""ETRow""><td>12</td> <td id=""ETData"">ENABLED</td></tr>

        <tr id=""ETRow""><td>13</td> <td id=""ETData"">TRIP</td></tr>

        <tr id=""ETRow""><td>14</td> <td id=""ETData"">AFTERRUN</td></tr>

       </table>"
DigitalInStatus,0x2001,5,VAR,UNSIGNED16,Operator,ro,0,65535,-,1,-,"Status on all digital inputs.<br/>

        <table id=""ET"">

        <tr id=""ETHead""><th>Bit</th><th>Description</th></tr>

        <tr id=""ETRow""><td>0</td>  <td id=""ETData"">DIGITAL_IN_1</td></tr>

        <tr id=""ETRow""><td>1</td>  <td id=""ETData"">DIGITAL_IN_2</td></tr>

        <tr id=""ETRow""><td>2</td>  <td id=""ETData"">DIGITAL_IN_3</td></tr>

        <tr id=""ETRow""><td>3</td>  <td id=""ETData"">DIGITAL_IN_4</td></tr>

        <tr id=""ETRow""><td>4</td>  <td id=""ETData"">DIGITAL_IN_5 (ACS_ID_1)</td></tr>

        <tr id=""ETRow""><td>5</td>  <td id=""ETData"">DIGITAL_IN_6 (ACS_ID_2)</td></tr>

        <tr id=""ETRow""><td>6</td>  <td id=""ETData"">DIGITAL_IN_7</td></tr>

        <tr id=""ETRow""><td>7</td>  <td id=""ETData"">DIGITAL_IN_8</td></tr>

        <tr id=""ETRow""><td>8</td>  <td id=""ETData"">DIGITAL_IN_9</td></tr>

        <tr id=""ETRow""><td>9</td>  <td id=""ETData"">DIGITAL_IN_10</td></tr>

        <tr id=""ETRow""><td>10</td> <td id=""ETData"">DIGITAL_IN_11</td></tr>

        <tr id=""ETRow""><td>11</td> <td id=""ETData"">DIGITAL_IN_12</td></tr>

        <tr id=""ETRow""><td>12</td> <td id=""ETData"">DIGITAL_IN_13</td></tr>

        <tr id=""ETRow""><td>13</td> <td id=""ETData"">DIGITAL_IN_14</td></tr>

        <tr id=""ETRow""><td>14</td> <td id=""ETData"">ENCODER_IN_1 (Ch A)</td></tr>

        <tr id=""ETRow""><td>15</td> <td id=""ETData"">ENCODER_IN_2 (Ch B)</td></tr>

       </table><br/>

        Not all digital inputs exists in all products.<br/>"
ActualPosition,0x2001,6,VAR,INTEGER16,Operator,ro,-1800,1800,-,0.1,Deg,Geared position.
LastSubIndex,0x2002,0,VAR,UNSIGNED8,Operator,ro,0,255,0,1,-,Numbers of entries.
TotalTimeSeconds,0x2002,1,VAR,UNSIGNED32,Service,rw,0,4294967295,-,1,s,Total time that KEY voltage is on. Writing to this sub-index clears/sets the Total Time.
TotalTimeHours,0x2002,2,VAR,UNSIGNED32,Service,rw,0,4294967295,-,1,h,Total time that KEY voltage is on and not in sleep or standby mode. Writing to this sub-index sets the TotalTimeHours.
TotalTimeEnabledSeconds,0x2002,3,VAR,UNSIGNED32,Service,rw,0,4294967295,-,1,s,Total time that the drive is enabled. Writing to this sub-index clears/sets the Total Time.
TotalTimeEnabledHours,0x2002,4,VAR,UNSIGNED32,Service,rw,0,4294967295,-,1,h,Total time that the drive is enabled. Writing to this sub-index clears/sets the Total Time.
SaveOperatingTimes,0x2002,5,VAR,UNSIGNED16,Operator,wo,0,65535,-,1,-,"<p>Wwriting '1' to this index stores all operating times, motor temperature log and power stage temperature log to EEPROM.</p>

        <p>Min allowed intervall for saving is 120 sec. This is to secure that the max no of rewrite cycle of the EEPROM is not exceeded.</p>"
TotalNumberOfPowerOn,0x2002,6,VAR,UNSIGNED32,Service,rw,0,4294967295,-,1,-,Total Number of times the drive has been powered on. Writing to this sub-index clears/sets the counter.
LastSubIndex,0x2005,0,VAR,UNSIGNED8,Operator,ro,0,255,0,1,-,Numbers of entries.
AdcResults,0x2005,1,ARRAY,UNSIGNED16,Internal,rw,0,4095,-,1,-,"Witing to a ADCx stops update of that channel and channel can be controlled manually. see <a href=""#ADConverterControl"">ADConverterControl</a> 

       for instructions on how to set channel back into normal automatic mode. Writing to ADC Shall ONLY be used for SW verification. Warranty voided if used!<br/><br/> 

       This is for HW 80G21501EC02<br/>    

       <table id=""ET"">

        <tr id=""ETRow""><th>Sub index</th>  <th>Channel</th>  <th id=""ETData"">Description</th></tr>

        <tr id=""ETRow""><td>1</td>          <td>ADC0</td>     <td id=""ETData"">Open Drain Out 1 Current</td></tr>

        <tr id=""ETRow""><td>2</td>          <td>ADC1</td>     <td id=""ETData"">MUX 1 IN</td></tr>

        <tr id=""ETRow""><td>3</td>          <td>ADC2</td>     <td id=""ETData"">Current in phase V</td></tr>

        <tr id=""ETRow""><td>4</td>          <td>ADC3</td>     <td id=""ETData"">Current in phase W</td></tr>

        <tr id=""ETRow""><td>5</td>          <td>ADC4</td>     <td id=""ETData"">Encoder CH 1</td></tr>

        <tr id=""ETRow""><td>6</td>          <td>ADC5</td>     <td id=""ETData"">Encoder CH 2</td></tr>

        <tr id=""ETRow""><td>7</td>          <td>ADC6</td>     <td id=""ETData"">MUX 2 IN</td></tr>

        <tr id=""ETRow""><td>8</td>          <td>ADC7</td>     <td id=""ETData"">Analog Supply Voltage</td></tr>

        <tr id=""ETRow""><td>9</td>          <td>ADC8</td>     <td id=""ETData"">Analog In 1</td></tr>

        <tr id=""ETRow""><td>10</td>         <td>ADC9</td>     <td id=""ETData"">Analog In 2</td></tr>

        <tr id=""ETRow""><td>11</td>         <td>ADC10</td>    <td id=""ETData"">Sensor Supply Current</td></tr>

        <tr id=""ETRow""><td>12</td>         <td>ADC11</td>    <td id=""ETData"">Sensor Supply Current Ref</td></tr>

        <tr id=""ETRow""><td>13</td>         <td>ADC12</td>    <td id=""ETData"">DC Bus Voltage</td></tr>

        <tr id=""ETRow""><td>14</td>         <td>ADC13</td>    <td id=""ETData"">Key Input Voltage</td></tr>

        <tr id=""ETRow""><td>15</td>         <td>ADC14</td>    <td id=""ETData"">VRef Int (MCU internal)</td></tr>

        <tr id=""ETRow""><td>16</td>         <td>ADC15</td>    <td id=""ETData"">High Side Switch Voltage</td></tr>

        <tr id=""ETRow""><td>17</td>         <td>ADC16</td>    <td id=""ETData"">CPU Temp (MCU internal)</td></tr>

        <tr id=""ETRow""><td>18</td>         <td>ADC17</td>    <td id=""ETData"">Encoder CH 3</td></tr>

        <tr id=""ETRow""><td>19</td>         <td>ADC18</td>    <td id=""ETData"">PCB Temp</td></tr>

        <tr id=""ETRow""><td>20</td>         <td>ADC19</td>    <td id=""ETData"">Motor Temp</td></tr>

        <tr id=""ETRow""><td>21</td>         <td>ADC20</td>    <td id=""ETData"">Power Board Temp</td></tr>

        <tr id=""ETRow""><td>22</td>         <td>ADC21</td>    <td id=""ETData"">Analog Supply Current</td></tr>

        <tr id=""ETRow""><td>23</td>         <td>ADC22</td>    <td id=""ETData"">5V Measurement</td></tr>

        <tr id=""ETRow""><td>24</td>         <td>ADC23</td>    <td id=""ETData"">15V Measurement</td></tr>

        <tr id=""ETRow""><td>25</td>         <td>ADC24</td>    <td id=""ETData"">Digital In 8</td></tr>

        <tr id=""ETRow""><td>26</td>         <td>ADC25</td>    <td id=""ETData"">Power ID</td></tr>

        <tr id=""ETRow""><td>27</td>         <td>ADC26</td>    <td id=""ETData"">Open Drain Out 6 Current</td></tr>

        <tr id=""ETRow""><td>28</td>         <td>ADC27</td>    <td id=""ETData"">Open Drain Out 5 Current</td></tr>

        <tr id=""ETRow""><td>29</td>         <td>ADC28</td>    <td id=""ETData"">Open Drain Out 4 Current</td></tr>

        <tr id=""ETRow""><td>30</td>         <td>ADC29</td>    <td id=""ETData"">Open Drain Out 3 Current</td></tr>

        <tr id=""ETRow""><td>31</td>         <td>ADC30</td>    <td id=""ETData"">Open Drain Out 2 Current</td></tr>

        <tr id=""ETRow""><td>32</td>         <td>ADC31</td>    <td id=""ETData"">MUX 1 GND 1</td></tr>

        <tr id=""ETRow""><td>33</td>         <td>ADC32</td>    <td id=""ETData"">MUX 1 GND 2</td></tr>

        <tr id=""ETRow""><td>34</td>         <td>ADC33</td>    <td id=""ETData"">MUX 1 GND 3</td></tr>

       </table>"
LastSubIndex,0x2006,0,VAR,UNSIGNED8,Operator,ro,0,255,0,1,-,Numbers of entries.
AdcWriteEnableLow32,0x2006,1,VAR,UNSIGNED32,Internal,rw,0,4294967295,0,1,-,"<p>Writing ""1"" to bit x, stops update of AD converter value x at the same time as

          it goes into manual mode (i.e. SW stops reading the ADC hardware and ADCx, 2005h:(x+1), is frozen and is only manually controlled by writing to it) , e.g.</p>

       <p>Example: AD Channel Write Enable = 0x8200 stops update of ADC9 and ADC15 values from AD

          converter and will only be possible to change by writing to them manually (pw6 is required).</p>

       <p>Writing ""0"" to the bit again returns the ADC channel to normal automatic mode.</p>

       <p>Shall ONLY be used for SW verification. Warranty voided if used!</p>"
AdcWriteEnableHigh32,0x2006,2,VAR,UNSIGNED32,Internal,rw,0,4294967295,0,1,-,"<p>Writing ""1"" to bit x, stops update of AD converter value x + 32 at the same time as

          it goes into manual mode (i.e. SW stops reading the ADC hardware and ADCx, 2005h:(x+1+32), is frozen and is only manually controlled by writing to it) , e.g.</p>

       <p>Example: AD Channel Write Enable = 0x8200 stops update of ADC41 and ADC47 values from AD

          converter and will only be possible to change by writing to them manually (pw6 is required).</p>

       <p>Writing ""0"" to the bit again returns the ADC channel to normal automatic mode.</p>

       <p>Shall ONLY be used for SW verification. Warranty voided if used!</p>"
LastSubIndex,0x2009,0,VAR,UNSIGNED8,Operator,ro,0,255,0,1,-,Numbers of entries.
HwId,0x2009,1,VAR,UNSIGNED16,Operator,ro,0,3,-,1,-,Two bits inputted from external hardware determining the Id of the drive.
HwDetectedMaxCurrent,0x2009,3,VAR,UNSIGNED16,Operator,ro,0,65535,0,1,Arms,Maximal Drive AC Current determined from resistors on IMS-board.
SoftwareName,0x2009,4,VAR,VISIBLE_STRING,Operator,ro,-,-,-,1,-,"E.g. ""PLASMA"""
EepromPlasmaSegmentCheckSum,0x2009,5,VAR,UNSIGNED16,Operator,ro,0,65535,0,1,-,"The sum of all Plasma and application parameters checksums. <br/>

       Can be used to check if any parameter in the Eeprom has been changed."
LastSubIndex,0x2010,0,VAR,UNSIGNED8,Operator,ro,0,255,0,1,-,Numbers of entries.
RegulationMode,0x2010,1,VAR,UNSIGNED8,Operator,rw,0,255,-,,,"Setup parameter for regulation mode. 0 = Speed mode, 3 = AC Current Mode. Requires store to EEPROM and key off to take effect."
ReductionStartSpeedDelta,0x2010,2,VAR,UNSIGNED16,Operator,rw,0,65535,-,,,"Number in rpm that will be subtracted from the max speed to get the ReductionStart speed while in ACCurrent mode. This results in the speed where the current 

     will start rolling off to prevent overspeed while in ACCurrent mode."
FixedSpeedSetup,0x2010,3,VAR,UNSIGNED8,Operator,rw,0,255,-,,,"Setup parameter to enabled fixed speed mode. System will automatically spin up to either forward or reverse max speed. 

     222 = Enabled, 0 = Disabled. Requires store to EEPROM and key off to take effect."
LastSubIndex,0x2011,0,VAR,UNSIGNED8,Operator,ro,0,255,0,1,-,Numbers of entries.
MaxForwardSpeed1,0x2011,1,VAR,UNSIGNED16,Operator,rw,0,65535,-,,,Max forward speed 1 in parameter set 1.
MaxForwardSpeed2,0x2011,2,VAR,UNSIGNED16,Operator,rw,0,65535,-,,,Max forward speed 2 in parameter set 1.
MaxForwardSpeed3,0x2011,3,VAR,UNSIGNED16,Operator,rw,0,65535,-,,,Max forward speed 3 in parameter set 1.
MaxForwardSpeed4,0x2011,4,VAR,UNSIGNED16,Operator,rw,0,65535,-,,,Max forward speed 4 in parameter set 1.
MaxReverseSpeed1,0x2011,5,VAR,UNSIGNED16,Operator,rw,0,65535,-,,,Max reverse speed 1 in parameter set 1.
MaxReverseSpeed2,0x2011,6,VAR,UNSIGNED16,Operator,rw,0,65535,-,,,Max reverse speed 2 in parameter set 1.
MaxForwardAccTorqueCurrent,0x2011,7,VAR,UNSIGNED16,Operator,rw,0,65535,-,1,Arms,Max forward acceleration current limit in parameter set 1.
MaxReverseAccTorqueCurrent,0x2011,8,VAR,UNSIGNED16,Operator,rw,0,65535,-,1,Arms,Max reverse acceleration current limit in parameter set 1.
MaxForwardBrakeTorqueCurrent,0x2011,9,VAR,UNSIGNED16,Operator,rw,0,65535,-,1,Arms,Max forward brake current limit in parameter set 1.
MaxReverseBrakeTorqueCurrent,0x2011,10,VAR,UNSIGNED16,Operator,rw,0,65535,-,1,Arms,Max reverse brake current limit in parameter set 1.
ForwardAccelRamp,0x2011,11,VAR,UNSIGNED8,Operator,rw,0,255,-,,,Forward acceleration ramp in parameter set 1.
ReverseAccelRamp,0x2011,12,VAR,UNSIGNED8,Operator,rw,0,255,-,,,Reverse acceleration ramp in parameter set 1.
ForwardDecelRamp,0x2011,13,VAR,UNSIGNED8,Operator,rw,0,255,-,,,Forward deceleration ramp in parameter set 1.
ReverseDecelRamp,0x2011,14,VAR,UNSIGNED8,Operator,rw,0,255,-,,,Reverse deceleration ramp in parameter set 1.
FootBrakeRamp,0x2011,15,VAR,UNSIGNED8,Operator,rw,0,255,-,,,Ramp in parameter set 1 used when the operator gets off the operator presence switch and the system is configured to regen brake to a stop.
ReverseBrakeRamp,0x2011,16,VAR,UNSIGNED8,Operator,rw,0,255,-,,,Reverse brake ramp in parameter set 1.
NeutralBrakeRamp,0x2011,17,VAR,UNSIGNED8,Operator,rw,0,255,-,,,Neutral brake ramp in parameter set 1.
LastSubIndex,0x2012,0,VAR,UNSIGNED8,Operator,ro,0,255,0,1,-,Numbers of entries.
MaxForwardSpeed1,0x2012,1,VAR,UNSIGNED16,Operator,rw,0,65535,-,,,Max forward speed 1 in parameter set 2.
MaxForwardSpeed2,0x2012,2,VAR,UNSIGNED16,Operator,rw,0,65535,-,,,Max forward speed 2 in parameter set 2.
MaxForwardSpeed3,0x2012,3,VAR,UNSIGNED16,Operator,rw,0,65535,-,,,Max forward speed 3 in parameter set 2.
MaxForwardSpeed4,0x2012,4,VAR,UNSIGNED16,Operator,rw,0,65535,-,,,Max forward speed 4 in parameter set 2.
MaxReverseSpeed1,0x2012,5,VAR,UNSIGNED16,Operator,rw,0,65535,-,,,Max reverse speed 1 in parameter set 2.
MaxReverseSpeed2,0x2012,6,VAR,UNSIGNED16,Operator,rw,0,65535,-,,,Max reverse speed 2 in parameter set 2.
MaxForwardAccTorqueCurrent,0x2012,7,VAR,UNSIGNED16,Operator,rw,0,65535,-,1,Arms,Max forward acceleration current limit in parameter set 2.
MaxReverseAccTorqueCurrent,0x2012,8,VAR,UNSIGNED16,Operator,rw,0,65535,-,1,Arms,Max reverse acceleration current limit in parameter set 2.
MaxForwardBrakeTorqueCurrent,0x2012,9,VAR,UNSIGNED16,Operator,rw,0,65535,-,1,Arms,Max forward brake current limit in parameter set 2.
MaxReverseBrakeTorqueCurrent,0x2012,10,VAR,UNSIGNED16,Operator,rw,0,65535,-,1,Arms,Max reverse brake current limit in parameter set 2.
ForwardAccelRamp,0x2012,11,VAR,UNSIGNED8,Operator,rw,0,255,-,,,Forward acceleration ramp in parameter set 2.
ReverseAccelRamp,0x2012,12,VAR,UNSIGNED8,Operator,rw,0,255,-,,,Reverse acceleration ramp in parameter set 2.
ForwardDecelRamp,0x2012,13,VAR,UNSIGNED8,Operator,rw,0,255,-,,,Forward deceleration ramp in parameter set 2.
ReverseDecelRamp,0x2012,14,VAR,UNSIGNED8,Operator,rw,0,255,-,,,Reverse deceleration ramp in parameter set 2.
FootBrakeRamp,0x2012,15,VAR,UNSIGNED8,Operator,rw,0,255,-,,,Ramp in parameter set 2 used when the operator gets off the operator presence switch and the system is configured to regen brake to a stop.
ReverseBrakeRamp,0x2012,16,VAR,UNSIGNED8,Operator,rw,0,255,-,,,Reverse brake ramp in parameter set 2.
NeutralBrakeRamp,0x2012,17,VAR,UNSIGNED8,Operator,rw,0,255,-,,,Neutral brake ramp in parameter set 2.
LastSubIndex,0x2013,0,VAR,UNSIGNED8,Operator,ro,0,255,0,1,-,Numbers of entries.
ThrottleSignalValue_mV,0x2013,1,VAR,INTEGER16,Operator,ro,-32768,32767,-,,,Signal in mV measured from the throttle.
ThrottleActiveHigh_mV,0x2013,2,VAR,INTEGER16,Operator,rw,-32768,32767,-,,,Level in milliVolts to indicate 100% throttle. Calibrate this value by referring to ThrottleSignalValue_mV.
ThrottleActiveLow_mV,0x2013,3,VAR,INTEGER16,Operator,rw,-32768,32767,-,,,Level in milliVolts to indicate 0% throttle. Calibrate this value by referring to ThrottleSignalValue_mV.
ThrottleErrorHigh_mV,0x2013,4,VAR,INTEGER16,Operator,rw,-32768,32767,-,,,Level in milliVolts to indicate when the potentiometer has gone high out of range and may be damaged.
ThrottleErrorLow_mV,0x2013,5,VAR,INTEGER16,Operator,rw,-32768,32767,-,,,Level in milliVolts to indicate when the potentiometer has gone low out of range and may be damaged.
RawThrottlePercent,0x2013,6,VAR,INTEGER16,Operator,ro,-32768,32767,-,,,"Throttle value converted into a percentage. This percentage does not include scaling due to the ThrottleFeel parameter and represents a linear throttle. Use this for debug purposes only as

    	ScaledThrottlePercent is the percentage used in commanded motion calculations."
ScaledThrottlePercent,0x2013,7,VAR,INTEGER16,Operator,ro,-32768,32767,-,,,Throttle value converted into a percentage including scaling from the ThrottleFeel parameter. This is the throttle value that will be used in the commanded motion calculations.
ThrottleFeel,0x2013,8,VAR,UNSIGNED8,Operator,rw,0,255,-,,,"Determines the feel of the throttle. A value of 1 creates a linear throttle feel. Larger values create a more exponential throttle feel with the maximum value being 4. 

     	See the parameter ScaledThrottlePercent for the result of this scaling."
ThrottleFilterGain,0x2013,9,VAR,INTEGER16,Operator,rw,-32768,32767,-,,,"Filter gain used in filtering the throttle input signal. Controls the speed of the filter: 1 = slowest possible, 16384 = fastest possible (no filtering), 0 = filter locked on output (Value)."
ThrottleZeroCheckSetup,0x2013,10,VAR,UNSIGNED8,Operator,rw,0,255,-,,,"Configuration for zero throttle check. 0 = No check, 1 = Check before enable and after op pres or brake has been applied."
LastSubIndex,0x2014,0,VAR,UNSIGNED8,Operator,ro,0,255,0,1,-,Numbers of entries.
BrakeSwitchSetup,0x2014,1,VAR,UNSIGNED8,Operator,rw,0,255,-,,,"Brake Switch setup. 0 = Not used, 1 = Regen to 0 speed when digital input is high, 2 = Throttle set to 0% with no regen."
OpenDrainElectricBrakeSetup,0x2014,2,VAR,UNSIGNED8,Operator,rw,0,255,-,,,"Setup parameter for the electric motor brake. 0 = Not Used, 1 = DigIn8 Control only (engages when DigIn8 is high and speed is 0), 2 = Drive controlled (always engages when speed is 0)."
ElectricBrakePullVoltage,0x2014,3,VAR,UNSIGNED16,Operator,rw,0,65535,-,,,Pull voltage for the electric brake. The brake coil will initially pull at this voltage for a short time before dropping down to the set hold voltage ElectricBrakeHoldVoltage. Units are centiVolts.
ElectricBrakeHoldVoltage,0x2014,4,VAR,UNSIGNED16,Operator,rw,0,65535,-,,,Hold voltage for the electric brake. This is the voltage used to continuiously hold the brake disengaged. Units are centiVolts.
BrakeEngageDelayTime,0x2014,5,VAR,UNSIGNED16,Operator,rw,0,65535,-,,,Delay in ms before the brake engages after all conditions have been met during normal operation (no errors or trips).
BrakeZeroSpeed,0x2014,6,VAR,UNSIGNED16,Operator,rw,0,65535,-,,,Maximum speed that the electric brake will engage at in RPM. This is the speed below which the system is considered to be stopped. This value is ignored under error or trip conditions.
BrakeEngageOnErrorSetup,0x2014,7,VAR,UNSIGNED8,Operator,rw,0,255,-,,,"Setup parameter for the electric motor brake behavior on error. 0 = Brake stays off even on error, 1 = Brake automatically engages on error or trip, 2 = Brake automatically engages on trips but vehicle tries controlled slowdown on error."
BrakeEngageSpeedCheckDelay,0x2014,8,VAR,UNSIGNED16,Operator,rw,0,65535,-,,,Delay before brake engages while waiting for the vehicle to do a controlled slowdown (if configured to do so in BrakeDropOnErrorSetup) in ms.
OperatorPresenceSwitchSetup,0x2014,9,VAR,UNSIGNED16,Operator,rw,0,255,-,,,"Setup parameter for the operator presence switch. 0 = Not Used, 1 = Idle (Motor freewheels and the drive disables), 2 = Stop (Motor regens until ActualSpeed = 0),

     3 = A Latching version of mode 1, 4 = A latching version of mode 2. 

     

     When configured to latch, the operator presence switch will stay in either idle or stop until zero speed is reached before you can resume operation."
OperatorPresenceReactionDelay,0x2014,10,VAR,UNSIGNED16,Operator,rw,0,65535,-,,,Time delay that operator switch must be off the presence switch before the configured action is taken (in ms).
LastSubIndex,0x2015,0,VAR,UNSIGNED8,Operator,ro,0,255,0,1,-,Numbers of entries.
MainContactorSetup,0x2015,1,VAR,UNSIGNED8,Operator,rw,0,255,-,,,"Setup parameter for the main contactor. 0 = Not used, 1 = Used, 2 = Used with welded contactor test. The contactor will enable when the DC Bus has fully charged."
MainContactorPullVoltage,0x2015,2,VAR,UNSIGNED16,Operator,rw,0,65535,-,,,Pull voltage for the main contactor. The contactor will initially pull at this voltage for a short time before dropping down to the set hold voltage MainContactorHoldVoltage. Units are centiVolts.
MainContactorHoldVoltage,0x2015,3,VAR,UNSIGNED16,Operator,rw,0,65535,-,,,Hold voltage for the main contactor. This is the voltage used to continuiously hold the contactor closed. Units are centiVolts.
FanAuxOD3Setup,0x2015,4,VAR,UNSIGNED8,Operator,rw,0,255,-,,,"Setup parameter for open drain 3, which can be used as an auxiliary output or drive/motor fan. 0 = Not Used, 1 = Use as Fan, 2 = Use as Aux Open Drain."
FanTempType,0x2015,5,VAR,UNSIGNED8,Operator,rw,0,255,-,,,"When FanAuxOD3Setup = 1 (Use as Fan), choose which temperature to monitor to enable the fan. 0 = Monitor drive temp, 1 = Monitor Motor temp."
FanEnableMotorTemp,0x2015,6,VAR,INTEGER16,Operator,rw,-32768,32767,-,1,degC,"When FanAuxOD3Setup = 1 (Use as Fan) and FanTempType = 1 (Monitor Motor Temp), choose what motor temp to enable the fan at."
LED1Setup,0x2015,7,VAR,UNSIGNED8,Operator,rw,0,255,-,,,"LED1 setup parameter. 0 = Not used, 1 = Used."
LED2Setup,0x2015,8,VAR,UNSIGNED8,Operator,rw,0,255,-,,,"LED2 setup parameter. 0 = Not used, 1 = Used."
LED3Setup,0x2015,9,VAR,UNSIGNED8,Operator,rw,0,255,-,,,"LED3 setup parameter. 0 = Not used, 1 = Used."
LED1WarningBlinkRate,0x2015,10,VAR,UNSIGNED16,Operator,rw,0,65535,-,,,LED1 warning blink rate in ms.
LED1ErrorBlinkRate,0x2015,11,VAR,UNSIGNED16,Operator,rw,0,65535,-,,,LED1 error blink rate in ms.
LED2CurrentReducedBlinkRate,0x2015,12,VAR,UNSIGNED16,Operator,rw,0,65535,-,,,LED2 current ability reduced blink rate in ms.
LastSubIndex,0x2017,0,VAR,UNSIGNED8,Operator,ro,0,255,0,1,-,Numbers of entries.
MainState,0x2017,1,VAR,UNSIGNED8,Operator,ro,0,255,-,,,Debug parameter displaying the state of the main application state machine.
MotionState,0x2017,2,VAR,UNSIGNED8,Operator,ro,0,255,-,,,Debug parameter displaying the state of the motion control state machine.
DigitalInStatus,0x2017,3,VAR,UNSIGNED16,Operator,ro,0,65535,-,,,Status of all digital inputs in a bitword.
MaxForwardSpeedActual,0x2017,4,VAR,UNSIGNED16,Operator,ro,0,65535,-,,,The active max forward command speed based off the chosen parameter set values.
MaxReverseSpeedActual,0x2017,5,VAR,UNSIGNED16,Operator,ro,0,65535,-,,,The active max reverse command speed based off the chosen parameter set values.
MaxForwardAccCurrentActual,0x2017,6,VAR,UNSIGNED16,Operator,ro,0,65535,-,1,Arms,The active max forward acceleration current based off the chosen parameter set values.
MaxReverseAccCurrentActual,0x2017,7,VAR,UNSIGNED16,Operator,ro,0,65535,-,1,Arms,The active max reverse acceleration current based off the chosen parameter set values.
MaxForwardBrakeCurrentActual,0x2017,8,VAR,UNSIGNED16,Operator,ro,0,65535,-,1,Arms,The active max forward braking current based off the chosen parameter set values.
MaxReverseBrakeCurrentActual,0x2017,9,VAR,UNSIGNED16,Operator,ro,0,65535,-,1,Arms,The active max reverse braking current based off the chosen parameter set values.
LastSubIndex,0x2018,0,VAR,UNSIGNED8,Service,ro,0,255,0,1,-,Numbers of entries.
MyIntDebug,0x2018,1,ARRAY,UNSIGNED16,Service,rw,0,65535,0,,,
LastSubIndex,0x2020,0,VAR,UNSIGNED8,Operator,ro,0,255,0,1,-,Numbers of entries.
SpeedRampMode,0x2020,1,VAR,UNSIGNED8,Operator,rw,0,255,,1,-,"<ul>

        <li>1 = Speed Control with No Ramp</li> 

        <li>2 = Not valid</li> 

        <li>3 = Not Valid</li> 

        <li>4 = Speed Control with PDO Controlled Ramp </li> 

        <li>5 = Speed Control with Parameter Controlled ramp</li>

       </ul>

       <br/>

       Note: if <a href=""#ApplicationSetupParameters.RequestedControlMode"">RequestedControlMode</a> equals 

       Steer Wheel Mode or Tiller Mode then this setting will be bypassed and speed controller will use no

       ramps (i.e. act a if this parameter is set to Speed Control with No Ramp)."
BestPerformanceCurveMode,0x2020,6,VAR,UNSIGNED8,Operator,rw,0,255,,1,-,"<ul>

        <li>0 = No BPC Mode</li>

        <li>1 = BPC Mode </li>

        <li>2 = BPC PDO Mode </li>

        <li>3 = BPC Reduction Mode</li>

       </ul>"
RollBackSpeed,0x2020,7,VAR,INTEGER16,Operator,rw,0,32767,,1,Rpm,"Controls if the truck stands still or starts rolling when slowing down to zero

        speed in a slope. RollBackSpeed is max rolling speed in slope. Set RollBack Speed to zero 

        for standing (hillhold). The RollBackSpeed value is ramped if it is changed. The rate of 

        change is the used ForwardDeceleration value if actual speed is 0 or positive or the used

        ReverseDeceleration value if the actual speed is negative. If any rate of change is zero,

        a value of 1 is used (i.e. always allow a small ramp to reach the rollback speed 

        parameter). 

        Only used in Speed Control Modes with ramps (Speed Control Mode = 4 or 5)."
ApplicationSetupWord,0x2020,10,VAR,UNSIGNED16,OEM,rw,0,65535,,1,-,"<table id=""ET"">

        <tr id=""ETRow""><th>Bit</th><th>Description</th></tr>

        <tr id=""ETRow""><td>0</td>  <td id=""ETData""><b>Adjust Speed During Acceleration</b><br/>

                            If set to true, the truck may accelerate faster than the ramp

                            says, if accelerating in an steep downhill slope.</td></tr>

        <tr id=""ETRow""><td>1</td>  <td id=""ETData""><b>Adjust Speed During Deceleration</b><br/>

                            If set to true, the truck may decelerate faster than the ramp

                            says, if decelerating in an steep uphill slope.</td></tr>

        <tr id=""ETRow""><td>2</td>  <td id=""ETData""><b>EnterRollback Mode At Zero Speed</b><br/>

                            If set to true, the truck stops before it eventaully starts to

                            roll. Only used if Rollback Speed is NOT zero </td></tr>

        <tr id=""ETRow""><td>3</td>  <td id=""ETData""><b>Inverted Rotational Direction</b><br/>

                            False or True. </td></tr>

        <tr id=""ETRow""><td>4</td>  <td id=""ETData""><b>Freeze Speed Reference When Saturated</b><br/>

                            If set to true, the internal speed reference will freeze while

                            the speed controller is saturated (max current used). </td></tr>

        <tr id=""ETRow""><td>8</td>  <td id=""ETData""><b>Torque Limits Enabled</b><br/>

                            False or True. Set to True to enable torque limitation via parameters: <br/> 

                            - 0x2099:6 - AccTorqueLimit <br/>

                            - 0x2099:7 - BrakeTorqueLimit <br/>

                            Set to False to disable torque limitation </td></tr>

        <tr id=""ETRow""><td>9</td>  <td id=""ETData""><b>DC Power Limits Enabled</b><br/>

                            False or True. Set to True to enable DC power limitation via parameters: <br/> 

                            - 2094h:1 - AccDcPowerLimit <br/>

                            - 2094h:2 - BrakeDcPowerLimit <br/>

                            Set to False to disable DC power limitation </td></tr>

        <tr id=""ETRow""><td>15</td>  <td id=""ETData""><b>Product Application Enabled</b><br/>

                            False or True. Set to TRUE to enable product application. If FALSE no

                            calls what so ever will be made to the product application.</td></tr>

       </table>"
MaxCommandSpeed,0x2020,11,VAR,UNSIGNED16,OEM,rw,0,65535,,1,Rpm,Sets the absolute limit for the Command Speed.
RequestedControlMode,0x2020,12,VAR,UNSIGNED8,Operator,rw,0,255,,1,-,"Depends on the hardware id.<br/><br/>

       <table id=""ET"">

        <tr id=""ETRow""><th>Value</th>

                       <th>Control Mode</th>

                       <th>Description</th></tr>

        <tr id=""ETRow""><td>0</td> 

                       <td><b>Speed Mode</b></td>  

                       <td id=""ETData"">ActualControlMode equals SpeedMode, speed reference from <a href=""#ApplicationCommands"">ApplicationCommands, CommandSpeed</a> </td></tr>

        <tr id=""ETRow""><td>1</td> 

                       <td><b>Steer Wheel Mode</b></td>  

                       <td id=""ETData"">ActualControlMode equals Speed Mode or PositionMode depending on steer wheel input level. <br/> 

                       Speed reference equals <a href=""#SpeedAndPositionReferenceCalculation"">SpeedAndPositionReferenceCalculation, SensorCommandSpeed</a> when ActualControlMode is Speed Mode. <br/>

                       Position reference equals <a href=""#ApplicationCommands"">ApplicationCommands, CommandPosInSteerWheelMode</a> when ActualControlMode is Position Mode. <br/><br/>

                       In this mode the speed controller will use no ramps no matter the value of <a href=""#ApplicationSetupParameters.SpeedRampMode"">SpeedRampMode</a>.</td></tr>

        <tr id=""ETRow""><td>2</td> 

                       <td><b>Tiller Mode</b></td>  

                       <td id=""ETData"">ActualControlMode equals Position Mode. <br/> 

                       Position reference equals <a href=""#SpeedAndPositionReferenceCalculation"">SpeedAndPositionReferenceCalculation, SensorCommandPosition</a> <br/><br/>

                       In this mode the speed controller will use no ramps no matter the value of <a href=""#ApplicationSetupParameters.SpeedRampMode"">SpeedRampMode</a>. </td></tr>

        <tr id=""ETRow""><td>3</td> 

                       <td><b>AC Current Mode</b></td>  

                       <td id=""ETData"">ActualControlMode equals AC Current Mode, current reference from <a href=""#ApplicationCommands"">ApplicationCommands, CommandAcCurrent</a> </td></tr>        

        <tr id=""ETRow""><td>4</td> 

                       <td><b>Position Mode</b></td>  

                       <td id=""ETData"">ActualControlMode equals Position Mode, position reference from <a href=""#ApplicationCommands"">ApplicationCommands, CommandPosition</a> </td></tr>

        <tr id=""ETRow""><td>5</td> 

                       <td><b>Torque Mode</b></td>  

                       <td id=""ETData"">ActualControlMode equals Torque Mode, torque reference from <a href=""#ApplicationCommands"">ApplicationCommands, CommandTorque</a> </td></tr>

        <tr id=""ETRow""><td>8</td> 

                       <td><b>DC Voltage Mode</b></td>  

                       <td id=""ETData"">ActualControlMode equals DC Voltage Mode, voltage reference from <a href=""#ApplicationCommands"">ApplicationCommands, CommandVoltage</a> </td></tr>

        <tr id=""ETRow""><td>12</td> 

                       <td><b>Cranking Mode</b></td>  

                       <td id=""ETData"">ActualControlMode equals Cranking Mode, speed reference from application (API) </td></tr>

                       

        <tr id=""ETRow""><td>15</td> 

                       <td><b>Electric Motor Brake Mode</b></td>  

                       <td id=""ETData"">ActualControlMode equals Electric Motor Brake Mode, brake torque generated by short circuit of motor phases </td></tr>                      

       </table>"
ActualControlMode,0x2020,13,VAR,UNSIGNED8,Operator,ro,0,255,-,1,-,"Depends on the hardware id.

       <ul>

        <li>0 = Speed Mode</li>

        <li>3 = AC Current Mode</li>

        <li>4 = Position Mode</li>

        <li>5 = Torque Mode</li>

        <li>8 = DC Voltage Mode</li>

        <li>9 = Forced Reverse Mode</li>

        <li>10 = After Forced Reverse Mode</li>

        <li>11 = Parking Mode</li>

        <li>12 = Cranking Mode</li>

        

        <li>15 = Electric Motor Brake Mode</li>

       </ul>"
MaxCommandPosition,0x2020,14,VAR,INTEGER16,OEM,rw,0,1800,,0.1,Deg,"Sets the maximum allowed command position. <br/> 

        Limits only the command position received EXTERNALLY (ex. CANopen or API) or when in 

        <a href=""#ApplicationSetupParameters.ActualControlMode"">ActualControlMode</a> equal to Position Mode (4)

        when <a href=""#ApplicationSetupParameters.RequestedControlMode"">RequestedControlMode</a> equals Steer Wheel Mode (1). <br/> 

        Limitation will be disabled if this parameter or <a href=""#ApplicationSetupParameters.MinCommandPosition"">MinCommandPosition</a> is set to Zero. <br/>

        This parameter should be zero when <a href=""#ApplicationSetupParameters.RequestedControlMode"">RequestedControlMode</a> equals Tiller Mode (2)."
MinCommandPosition,0x2020,15,VAR,INTEGER16,OEM,rw,-1800,0,,0.1,Deg,"Sets the minimum allowed command position. <br/> 

        Limits only the command position received EXTERNALLY (ex. CANopen or API) or when in 

        <a href=""#ApplicationSetupParameters.ActualControlMode"">ActualControlMode</a> equal to Position Mode (4)

        when <a href=""#ApplicationSetupParameters.RequestedControlMode"">RequestedControlMode</a> equals Steer Wheel Mode (1). <br/> 

        Limitation will be disabled if this parameter or <a href=""#ApplicationSetupParameters.MaxCommandPosition"">MaxCommandPosition</a> is set to Zero. <br/>

        This parameter should be Zero when <a href=""#ApplicationSetupParameters.RequestedControlMode"">RequestedControlMode</a> equals Tiller Mode (2)."
SteerWheelModeThreshold,0x2020,16,VAR,INTEGER16,OEM,rw,0,32767,50,1,Rpm,"Threshold on <a href=""#SpeedAndPositionReferenceCalculation"">SensorCommandSpeed, SensorCommandSpeed</a> for transition between 

        <a href=""#ApplicationSetupParameters"">ActualControlMode</a> Speed Mode (0) and Position Mode (4) when 

        <a href=""#ApplicationSetupParameters"">RequestedControlMode</a> equals Steer Wheel Mode (1)."
LastSubIndex,0x2030,0,VAR,UNSIGNED8,Operator,ro,0,255,0,1,-,Numbers of entries.
Voltage,0x2030,2,VAR,INTEGER16,Operator,ro,0,32767,-,0.01,Vdc,Measured non-filtered DC bus voltage value.
MaxMeasuredVoltage,0x2030,3,VAR,INTEGER16,Operator,ro,0,32767,-,0.01,Vdc,Max Measured Voltage for A/D.
ModeratelyHighLevel,0x2030,4,VAR,INTEGER16,OEM,rw,0,32767,4000,0.01,Vdc,"If Dc Voltage exceeds this level, a warning is set, and currents

        starts to linearily reduce to 0. When Dc Voltage Reaches ReductionEndHighLevel

        currents is reduced to 0."
HighLevel,0x2030,5,VAR,INTEGER16,Internal,rw,0,32767,95% of 67.21      * 100  ,0.01,Vdc,"If DC Voltage exceeds this level, the application trips."
ModeratelyLowLevel,0x2030,6,VAR,INTEGER16,OEM,rw,0,32767,2800,0.01,Vdc,"If DC Voltage goes below this level, a warning is set, and currents starts

        to linearily reduce to 0. When Dc Voltage Reaches ReductionEndLowLevel

        currents is reduced to 0."
LowLevel,0x2030,7,VAR,INTEGER16,OEM,rw,0,32767,2400,0.01,Vdc,"If DC Voltage goes below this level, the application trips."
ReductionEndHighLevel,0x2030,8,VAR,INTEGER16,OEM,rw,0,32767,0,0.01,Vdc,"If DC Voltage exceeds this level, current is reduced to 0. Set

        to 0, to disable reduction function."
ReductionEndLowLevel,0x2030,9,VAR,INTEGER16,OEM,rw,0,32767,0,0.01,Vdc,"If DC Voltage goes below this level, current is reduced to 0. Set

       to 0, to disable reduction function."
FilterGain,0x2030,10,VAR,INTEGER16,Service,rw,0,16384,320,,,"First order filtering coefficient for the Dc Bus Voltage.<br/><br/>

        

        FilteredValue = FilteredValue - FilterGain / 16384 * (RawValue - FilteredValue) <br/>

        <i>f<sub>c</sub></i> = (FilterGain * 4000) / ((16384 - FilterGain) * 2 * &pi;) <br/>

        &tau; = (16384 - FilterGain) / (FilterGain * 4000)

        

        <ul>

         <li>FilterGain = 1, means slowest possible filter</li>

         <li>FilterGain = 16384, means no filtering</li>

         <li>FilterGain = 0, means filter froze on last output</li>

        </ul>

        Note: The filtered Dc Bus Voltage is used by the supervision and the Brake Reduction Curve."
NominalVoltage,0x2030,15,VAR,INTEGER16,Operator,ro,0,32767,48     * 100  ,0.01,Vdc,"12, 24, 36, 48, 72, 80, 600 or 650V"
FilteredVoltage,0x2030,16,VAR,INTEGER16,Operator,ro,0,32767,-,0.01,Vdc,Used by Dc Bus Voltage supervision.
ChargingLevel,0x2030,17,VAR,INTEGER16,OEM,rw,0,32767,85% of 2800    ,0.01,Vdc,"The voltage level when charging is said to be finished and ""switch on"" becomes allowed."
MaxChargeTime,0x2030,18,VAR,UNSIGNED16,OEM,rw,0,65535,10000U,1,ms,"Max time to charge dc bus in in ms from key on. If set to 0, a timeout will never be set."
DcBusCalValueGain,0x2030,19,VAR,INTEGER16,Service,rw,0,32767,-,1,-,Calibrated gain value for DC Bus.
DcBusCalValueOffset,0x2030,20,VAR,INTEGER16,Service,rw,-32768,32767,-,1,-,Calibrated offset value for DC Bus.
SetDcBusCalValuesDefault,0x2030,21,VAR,UNSIGNED8,Service,wo,0,1,-,1,-,"Writing a 1 to this index loads the default values for dc bus calibration.

        The warning bit DefaultCalValues will also be set."
DcBusOffset,0x2030,22,VAR,INTEGER16,Operator,rw,-32768,32767,0,0.01,Vdc,"Run time offset value. Can be used to adapting the measured value to same 

       value as other drives in the sustem."
CanSignalFilteredVoltage,0x2030,23,VAR,INTEGER16,Operator,ro,0,32767,-,0.01,Vdc,CAN signal filtered voltage.
CanSignalFilterGain,0x2030,24,VAR,INTEGER16,OEM,rw,0,16384,320,1,-,"First order filtering coefficient for the separately filtered DC voltage signal for CAN.<br/><br/>

        

        FilteredValue = FilteredValue - FilterGain / 16384 * (RawValue - FilteredValue) <br/>

        <i>f<sub>c</sub></i> = (FilterGain * 4000) / ((16384 - FilterGain) * 2 * &pi;) <br/>

        &tau; = (16384 - FilterGain) / (FilterGain * 4000)

        

        <ul>

         <li>FilterGain = 1, means slowest possible filter</li>

         <li>FilterGain = 16384, means no filtering</li>

         <li>FilterGain = 0, means filter froze on last output</li>

        </ul>"
AdaptedRawVoltage,0x2030,25,VAR,INTEGER16,Service,ro,0,32767,-,,,0x2030:2 + 0x2030:22
AdaptedFilteredVoltage,0x2030,26,VAR,INTEGER16,Service,ro,0,32767,-,,,0x2030:23 + 0x2030:22
LastSubIndex,0x2039,0,VAR,UNSIGNED8,Operator,ro,0,255,0,1,-,Numbers of entries.
KeyVoltage,0x2039,1,VAR,INTEGER16,Operator,ro,0,32767,-,0.01,V,Key voltage level.
5V,0x2039,2,VAR,INTEGER16,Operator,ro,0,32767,-,0.01,V,"Internal 5V supply voltage level.<br/>

        Related events: 1701 - 5VOutOfRange"
15V,0x2039,3,VAR,INTEGER16,Operator,ro,0,32767,-,0.01,V,"Internal 15V supply voltage level.<br/>

        Related events: 1700 - 15VOutOfRange"
AnalogSupply1Voltage,0x2039,4,VAR,INTEGER16,Operator,ro,0,32767,0,0.01,V,"Analog supply 1 voltage level.<br/>

        Related events: 1710 - AnalogSup1Range"
AnalogSupply1Current,0x2039,5,VAR,INTEGER16,Operator,ro,0,32767,0,1,mA,"Analog supply current consumption.<br/>

        Related events: 1711 - AnalogSup1SHC"
SensorSupplyRefVoltage,0x2039,6,VAR,INTEGER16,Operator,ro,0,32767,-,0.01,V,"Internal Sensor Supply voltage reference level.<br/>

        Related events: 810 - SensSupRefRange"
SensorSupplyVoltage,0x2039,7,VAR,INTEGER16,Operator,ro,0,32767,-,0.01,V,"Sensor Supply voltage level.<br/>

        Related events: 811 - SensorSupRange"
SensorSupplyCurrent,0x2039,8,VAR,INTEGER16,Operator,ro,0,32767,-,1,mA,"Sensor Supply current consumption. <br/>

        SensorSupplyCurrent = (SensorSupplyRefVoltage - SensorSupplyVoltage) / 10 <br/>

        Related events: <br/>

        800 - SensorSupNotCon <br/>

        801 - SensorSupSHC"
SensorSupplyRefGain,0x2039,9,VAR,INTEGER16,OEM,rw,0,32767,-,0.001,mV/bit,Gain for Internal Sensor Supply Reference voltage measurement.
SensorSupplyGain,0x2039,10,VAR,INTEGER16,OEM,rw,0,32767,-,0.001,mV/bit,Gain for Sensor Supply voltage measurement.
SensorSupplySetGainDefault,0x2039,11,VAR,INTEGER16,OEM,wo,1,1,-,1,-,Write 1 to set default calibrated gain values for SensorSupplyRefGain and SensorSupplyGain.
LastSubIndex,0x2040,0,VAR,UNSIGNED8,Operator,ro,0,255,0,1,-,Numbers of entries.
Temperature,0x2040,2,VAR,INTEGER16,Operator,ro,-50,210,-,1,degC,Motor Temperature.
ModeratelyLowLevel,0x2040,3,VAR,INTEGER16,OEM,rw,-32768,32767,-35,1,degC,Level at which a Low Temp Status will become active.
ReductionEndLowLevel,0x2040,4,VAR,INTEGER16,OEM,rw,-32768,32767,0,1,degC,"Temperature level at which the linear current reduction will be at full reduction (no current) due to low temperature.<br/>

        Only accelerating current is reduced. Optionally also braking current can be reduced.<br/>

        Reduction starts from Moderately Low Level. Set to 0, to disable reduction function.<br/>"
ModeratelyHighLevel,0x2040,5,VAR,INTEGER16,OEM,rw,-32768,32767,145,1,degC,Level at which a Moderately High Temp Status will become active.
ReductionEndHighLevel,0x2040,6,VAR,INTEGER16,OEM,rw,-32768,32767,165,1,degC,"Temperature level at which the linear current reduction will be at full reduction (no current) due to high temperature.<br/>

        Only accelerating current is reduced. Optionally also braking current can be reduced.<br/>

        Reduction starts from Moderately High Level. Set to 0, to disable reduction function.<br/>"
HighLevel,0x2040,7,VAR,INTEGER16,OEM,rw,-32768,32767,180,1,degC,Level at which a High Temp Status will become active.
CanSignalMotorTemp,0x2040,10,VAR,INTEGER16,Operator,ro,-50,210,-,1,degC,Motor Temperature.
CanSignalMotorTempFilterGain,0x2040,11,VAR,INTEGER16,Operator,rw,0,16384,2000,1,,"Filter gain for separately filtered motor temperature signal for CAN.<br/><br/>

    

        FilteredValue = FilteredValue - FilterGain / 16384 * (RawValue - FilteredValue) <br/>

        <i>f<sub>c</sub></i> = (FilterGain * 50) / ((16384 - FilterGain) * 2 * &pi;) <br/>

        &tau; = (16384 - FilterGain) / (FilterGain * 50)

        

        <ul>

         <li>FilterGain = 1, means slowest possible filter</li>

         <li>FilterGain = 16384, means no filtering</li>

         <li>FilterGain = 0, means filter froze on last output</li>

        </ul>"
ShortCircuitLevel,0x2040,13,VAR,INTEGER16,Internal,rw,-3276,3276,-50,1,degC,Level at which a Short Circuit Status will become active.
NotConnectedLevel,0x2040,14,VAR,INTEGER16,Internal,rw,-3276,3276,210,1,degC,Level at which a Not Connected Status will become active.
LastSubIndex,0x2041,0,VAR,UNSIGNED8,Operator,ro,0,255,0,1,-,Numbers of entries.
Temperature,0x2041,2,VAR,INTEGER16,Operator,ro,-50,130,-,1,degC,Heatsink Temperature.
CanSignalInverterTemp,0x2041,3,VAR,INTEGER16,Operator,ro,-50,130,-,1,degC,Separately filtered heat sink temperature.
CanSignalInverterTempFilterGain,0x2041,4,VAR,INTEGER16,Operator,rw,0,16384,350,1,,"Filter gain for separately filtered heat sink temperature signal for CAN<br/><br/>

    

        FilteredValue = FilteredValue - FilterGain / 16384 * (RawValue - FilteredValue) <br/>

        <i>f<sub>c</sub></i> = (FilterGain * 50) / ((16384 - FilterGain) * 2 * &pi;) <br/>

        &tau; = (16384 - FilterGain) / (FilterGain * 50)

        

        <ul>

         <li>FilterGain = 1, means slowest possible filter</li>

         <li>FilterGain = 16384, means no filtering</li>

         <li>FilterGain = 0, means filter froze on last output</li>

        </ul>"
LastSubIndex,0x2044,0,VAR,UNSIGNED8,Operator,ro,0,255,0,1,-,Numbers of entries.
Temperature1,0x2044,2,VAR,INTEGER16,Operator,ro,-50,120,-,1,degC,Pcb Temperature.
LastSubIndex,0x2045,0,VAR,UNSIGNED8,OEM,rw,2,15,10u,1,-,Size of look-up table.
TemperatureTableAD,0x2045,1,ARRAY,UNSIGNED16,OEM,rw,0,65535,-,1,-,AD-value (16-bit) for the corresponding temperature.
LastSubIndex,0x2046,0,VAR,UNSIGNED8,OEM,rw,2,15,10u,1,-,Size of look-up table.
TemperatureTableDeg,0x2046,1,ARRAY,INTEGER16,OEM,rw,-200,300,-,1,degC,Temperature for the corresponding AD-value.
LastSubIndex,0x2050,0,VAR,UNSIGNED8,Operator,ro,0,255,0,1,-,Numbers of entries.
ConstantCurrentLimit,0x2050,1,VAR,INTEGER16,Operator,rw,0,32767,,1,Arms,Current below this limit will not create energy limitation.<br/>
ReductionPgain,0x2050,2,VAR,INTEGER16,Operator,rw,0,32767,,1,,"This gain multipied with energy gives the reduction.<br/>

        Setting gain to 0 disables the energy limit reduction function.<br/>"
EnergyFilterGain,0x2050,3,VAR,UNSIGNED16,Service,rw,0,16384,,1,,"First order filtering coefficient to estimate energy.</br></br>

        FilteredValue = FilteredValue - FilterGain / 16384 * (RawValue - FilteredValue) </br>

        <ul>

         <li>FilterGain = 1, means slowest possible filter</li>

         <li>FilterGain = 16384, means no filtering</li>

         <li>FilterGain = 0, means filter froze on last output</li>

        </ul>"
Reduction,0x2050,4,VAR,INTEGER16,Service,ro,0,256,,1,,"The resulting reduction due to estimated power stage energy.</br></br>

        <ul>

         <li>0, means full reduction</li>

         <li>256, means no reduction</li>

        </ul>"
LastSubIndex,0x2051,0,VAR,UNSIGNED8,Operator,ro,0,255,0,1,-,Numbers of entries.
State,0x2051,1,VAR,UNSIGNED8,Operator,rw,0,255,0,1,,"<p>

        Write 1 to start the calibration routine.

        Drive has to be enabled, motor should be able to spin freely in both directions.

        </p>

        

        <p>

        <strong>It highly recommended to set <a href=""#CANParameters.SdoTimeout"">SDO Timeout</a>!</strong><br/>

        If regenerative braking is not allowed (a power supply is used), set

        <a href=""#CurrentLimit.MaxBrakeCurrent"">max brake current</a> to 0.

        </p>

        

        <ol start=""0"">

          <li>Idle</li>

          <li>Start</li>

          <li>Pull rotor in position</li>

          <li>Accelerating to low speed</li>

          <li>Wait for steady state</li>

          <li>Calculate rough offset</li>

          <li>Prepare for acceleration</li>

          <li>Accelerate in forward direction</li>

          <li>Decelerate in forward direction</li>

          <li>Accelerate in reverse direction</li>

          <li>Decelerate in reverse direction</li>

          <li>Calculate final offset</li>

          <li value=""254"">Success</li>

          <li value=""255"">Error</li>

        </ol>

        

        <p>

        At end of calibration, the drive is left in AC current control.

        It is recommended to reset the drive after completion to make sure the drive is in

        a well defined state before continuing.

        </p>"
OpenLoopSpeed,0x2051,2,VAR,INTEGER16,Operator,rw,-32768,32767,300,1,Rpm,The speed to rotate with open loop feedback.
OpenLoopCurrent,0x2051,3,VAR,INTEGER16,Operator,rw,0,32767,(425) / 2,1,Arms,The d-axis current to apply when pulling motor without angle feedback.
AccAndBrakeCurrent,0x2051,4,VAR,INTEGER16,Operator,rw,0,32767,(425) / 10,1,Arms,The AC current to apply when accelerating and decelerating motor.
AccelerationTimeout,0x2051,5,VAR,UNSIGNED16,Operator,rw,0,65535,10000,1,ms,The maximum allowed time when accelerating motor.
MinUpeak,0x2051,6,VAR,INTEGER16,Operator,rw,0,32767,2500,1,-,Minimum AC voltage required for measuring voltage angle.
MaxUpeak,0x2051,7,VAR,INTEGER16,Operator,rw,0,32767,7000,1,-,Target AC voltage required for measuring voltage angle.
LastSubIndex,0x2052,0,VAR,UNSIGNED8,Operator,ro,0,255,0,1,-,Numbers of entries.
RotorSpeedInRpm,0x2052,1,VAR,INTEGER16,Operator,ro,-32768,32767,-,1,Rpm,"Shows value from the active feedback.  <br/>

        If FeedbackMode is 0 the physical sensor speed is shown.  <br/>

        If FeedbackMode is 1 the parameter FrequencyWhenNoSpeedFeedback speed is shown.  <br/>

        If FeedbackMode is 2 the CommandSpeeed is shown.  <br/>        

        If FeedbackMode is 3 sensorless closed loop feedback speed is shown."
SensorAngleAligned,0x2052,2,VAR,INTEGER16,Operator,rw,-1800,1800,-,1,Deg,"Sensorangle in deciDegrees. Does not take into account number of sensor poles. <br/>

        Can be written to if FeedbackMode is 1."
SensorAngleOffset,0x2052,3,VAR,INTEGER16,Operator,rw,-1800,1800,0,0.1,Deg,"Sensorangle offset in deciDegrees. Added to SensorAngle before number of sensor poles is handled. <br/>

        Used by PM motor to align rotor and posistion sensor. Calibration parameter."
DeltaSensorLowResAngle,0x2052,4,VAR,INTEGER16,Operator,ro,-32768,32767,-,1,incs/timeunit,Change of Sensorangle per 250 us in Q15 format.
SensorLowResAngleAligned,0x2052,5,VAR,INTEGER16,Operator,ro,-32768,32767,-,1,incs,Sensorangle in Q15.
DeltaSensorAngle,0x2052,6,VAR,INTEGER32,Operator,ro,-2147483648,2147483647,-,1,incs/timeunit,Change of Sensorangle per 250 us in Q31 format.
SensorAngleAlignedInternal,0x2052,7,VAR,INTEGER32,Operator,ro,-2147483648,2147483647,-,1,incs,Sensorangle in Q31.
Acceleration,0x2052,8,VAR,INTEGER16,Operator,ro,-32768,32767,-,1,incs,Rotor accleration in Rpm/20ms.
SensorPolePairs,0x2052,9,VAR,INTEGER16,OEM,rw,1,32767,1,1,no,Number of sensor pole pairs. Normally 1 except for resolver and analog hall sensors.
FeedbackMode,0x2052,10,VAR,UNSIGNED16,Internal,rw,0,3,SFIFMG_PHYSICAL_FEEDBACK_CLOSED_LOOP,1,-,"The rotor position and speed used for commutation and speed control can be taken from difference

        sources.  </br></br>

        If FeedbackMode is 0 the commutation angle and speed is taken from the physical sensor. 

        To be used for closed loop control with physical sensor. </br></br>

        If FeedbackMode is 1 the commutation angle and speed is taken from the parameter FrequencyWhenNoSpeedFeedback.

        To be used for open loop control with stator commutuation explicitly controlled whitout 

        considering MotorPoles or SensorPolePaires. </br></br>

        If FeedbackMode is 2 the commutation angle and speed is taken from CommandSpeeed.  

        To be used for open loop control when the commutation speed shall result in that the shaft speed gets close to CommandSpeed. 

        Set the ControlMode to SpeedMode and limit the speed change with CommandAccelerationChange and CommandDeccelerationChange</br></br>        

        If FeedbackMode is 3 the commutation angle and speed is taken from what the sensorless algorithm calculate.

        Only applicable for induction machine.

        To be used for closed loop control when physical sensor do not exsist or has failed."
FrequencyWhenNoSpeedFeedback,0x2052,11,VAR,INTEGER16,Internal,rw,-32768,32767,0,1,see Description,"<p>Set value for sensor speed (i.e. frequency) when FeedbackMode is 1. </p>

       <p>The value 65536 corresponds to 4000 Hz sensor frequency. The rotor (mechanical) frequency is sensor frequency divided with number of sensor pole pairs. </p>"
SensorSpeedInRpm,0x2052,12,VAR,INTEGER16,Internal,ro,-32768,32767,0,1,Rpm,"Shows value from the physical feedback sensor, even when FeedbackMode is different from 0."
SpeedFilterGain,0x2052,13,VAR,INTEGER16,OEM,rw,0,16384,,1,-,"First order filtering coefficient for the speed used in the speed control.<br/><br/>

        

        FilteredValue = FilteredValue - FilterGain / 16384 * (RawValue - FilteredValue) <br/>

        <i>f<sub>c</sub></i> = (FilterGain * 4000) / ((16384 - FilterGain) * 2 * &pi;) <br/>

        &tau; = (16384 - FilterGain) / (FilterGain * 4000)

        

        <ul>

         <li>FilterGain = 1, means slowest possible filter</li>

         <li>FilterGain = 16384, means no filtering</li>

         <li>FilterGain = 0, means filter froze on last output</li>

        </ul>"
AccelerationFilterGain,0x2052,14,VAR,INTEGER16,OEM,rw,0,16384,1280,1,-,"First order filtering coefficient for the Acceleration.<br/><br/>

        

        FilteredValue = FilteredValue - FilterGain / 16384 * (RawValue - FilteredValue) <br/>

        <i>f<sub>c</sub></i> = (FilterGain * 50) / ((16384 - FilterGain) * 2 * &pi;) <br/>

        &tau; = (16384 - FilterGain) / (FilterGain * 50)

        <ul>

         <li>FilterGain = 1, means slowest possible filter</li>

         <li>FilterGain = 16384, means no filtering</li>

         <li>FilterGain = 0, means filter froze on last output</li>

        </ul>"
SensorLowResAngle,0x2052,15,VAR,INTEGER16,Internal,ro,-32768,32767,-,1,incs,Shows value from the active feedback sensor even when SpeedFeedbackSensorDisabled is set in Q15.
SensorAngle,0x2052,16,VAR,INTEGER16,Internal,ro,-32768,32767,-,0.1,Deg,Shows value from the active feedback sensor even when SpeedFeedbackSensorDisabled is set in deciDegrees.
SpeedCalculationCounter,0x2052,17,VAR,UNSIGNED8,Internal,ro,0,255,-,1,-,"Can be used by an external controller to verify that the speed calculation function has been executed. <br/>

        For example, an APS (steer controller) can be set up to monitor the speed calculation in the vehicle controller as

        as part of the traction speed supervision.  <br/> <br/>

        When communicated via PDO, make sure that transmission period is less than 64ms to avoid wrap around issue. <br/>

        i.e. Overflow = 256 [8bits] / 4000 [speed calc rate] * 1000 [ms] = 64ms."
SensorDirectionInverted,0x2052,18,VAR,UNSIGNED16,OEM,rw,0,1,0U,1,-,"False (0) = The two sensor channels not shifted<br/>

        True (1) = The two sensor channels shifted<br/>

        This setting shall be set according to the definition of the two feedback sensor channels."
CanSignalRotorSpeedInRpm,0x2052,19,VAR,INTEGER16,Operator,ro,-32768,32767,-,1,Rpm,"Shows value from the separately filtered feedback.  <br/>

        If FeedbackMode is 0 the physical sensor speed is shown.  <br/>

        If FeedbackMode is 1 the parameter FrequencyWhenNoSpeedFeedback speed is shown.  <br/>

        If FeedbackMode is 2 the CommandSpeeed is shown.  <br/>        

        If FeedbackMode is 3 sensorless closed loop feedback speed is shown."
CanSignalSpeedFilterGain,0x2052,20,VAR,INTEGER16,OEM,rw,0,16384,320,1,-,"First order filtering coefficient for the separately filtered CAN signal speed.<br/><br/>

        

        FilteredValue = FilteredValue - FilterGain / 16384 * (RawValue - FilteredValue) <br/>

        <i>f<sub>c</sub></i> = (FilterGain * 4000) / ((16384 - FilterGain) * 2 * &pi;) <br/>

        &tau; = (16384 - FilterGain) / (FilterGain * 4000)

        <ul>

         <li>FilterGain = 1, means slowest possible filter</li>

         <li>FilterGain = 16384, means no filtering</li>

         <li>FilterGain = 0, means filter froze on last output</li>

        </ul>"
LastSubIndex,0x2053,0,VAR,UNSIGNED8,Operator,ro,0,255,0,1,-,Numbers of entries.
Sensor1mVSignal,0x2053,1,VAR,INTEGER16,Internal,ro,0,32767,-,1,mV,Signal1 level in mV.
Sensor2mVSignal,0x2053,2,VAR,INTEGER16,Internal,ro,0,32767,-,1,mV,Signal2 level in mV.
Sensor1mVOffsetAdjusted,0x2053,3,VAR,INTEGER16,Internal,ro,0,32767,-,1,mV,"The automatically adjusted Signal1 offset in millvolt. <br/>

        At startup this parameter will be initiated to the value of <a href=""#SinCosSensor"">Sensor1mVOffset</a>. <br/> 

        This is the offset that is actually used to calculate sensor angle. <br/>"
Sensor2mVOffsetAdjusted,0x2053,4,VAR,INTEGER16,Internal,ro,0,32767,-,1,mV,"The automatically adjusted Signal2 offset in millvolt. <br/>

        At startup this parameter will be initiated to the value of <a href=""#SinCosSensor"">Sensor2mVOffset</a>. <br/>

        This is the offset that is actually used to calculate sensor angle. <br/>"
Sensor1mVAmplitudeAdjusted,0x2053,5,VAR,INTEGER16,Internal,ro,0,32767,-,1,mV,"The automatically adjusted Signal1 amplitude in millvolt. <br/>

        At startup this parameter will be initiated to the value of <a href=""#SinCosSensor"">Sensor1mVAmplitude</a>. <br/>

        This is the amplitude that is actually used to calculate sensor angle. <br/>"
Sensor2mVAmplitudeAdjusted,0x2053,6,VAR,INTEGER16,Internal,ro,0,32767,-,1,mV,"The automatically adjusted Signal2 amplitude in millvolt. <br/>

        At startup this parameter will be initiated to the value of <a href=""#SinCosSensor"">Sensor2mVAmplitude</a>. <br/>

        This is the amplitude that is actually used to calculate sensor angle. <br/>"
NormaliseSensorInputs,0x2053,22,VAR,UNSIGNED8,Internal,wo,3,3,-,1,-,"Use unfiltered window to calculate gain and offset. Can be used if default gain or offset is wrong and the drive does not see that the sensor is turning.

        After drive reset rotate the sensor a little over one turn but not more than two turns before using this function. Write the value 3 to use this function. 

        Then manually store the new offsets and gains to EEPROM if successful."
Sensor1NormalisedSignal,0x2053,23,VAR,INTEGER16,Internal,ro,0,8192,0,1,see Description,Normalized level for signal 1 in Base 2000h.
Sensor2NormalisedSignal,0x2053,24,VAR,INTEGER16,Internal,ro,0,8192,0,1,see Description,Normalized level for signal 2 in Base 2000h.
Sensor1NormalisedOffsetAdjusted,0x2053,25,VAR,INTEGER16,Internal,ro,0,32767,16380,1,-,"Offset for signal 1. Normalised to internal scaling. <br/>

        At startup the intitial value will be calculated from the parameter <a href=""#SinCosSensor"">Sensor1mVOffset</a>."
Sensor1NormalisedGainAdjusted,0x2053,26,VAR,INTEGER16,Internal,ro,0,32767,0,1,-,"Gain for signal 1. Normalised to internal scaling. <br/>

        At startup the intitial value will be calculated from the parameter <a href=""#SinCosSensor"">Sensor1mVAmplitude</a>."
Sensor2NormalisedOffsetAdjusted,0x2053,27,VAR,INTEGER16,Internal,ro,0,32767,16380,1,-,"Offset for signal 2. Normalised to internal scaling. <br/>

        At startup the intitial value will be calculated from the parameter <a href=""#SinCosSensor"">Sensor2mVOffset</a>."
Sensor2NormalisedGainAdjusted,0x2053,28,VAR,INTEGER16,Internal,ro,0,32767,0,1,-,"Gain for signal 2. Normalised to internal scaling. <br/>

        At startup the intitial value will be calculated from the parameter <a href=""#SinCosSensor"">Sensor2mVAmplitude</a>."
Sensor1WindowMin,0x2053,29,VAR,INTEGER16,Internal,ro,0,32767,0,1,see Description,Min AD value for signal 1 (AD value shifted down 1). Filtered window updated every 2 turns of the sensor.
Sensor1WindowMax,0x2053,30,VAR,INTEGER16,Internal,ro,0,32767,0,1,see Description,Max AD value for signal 1 (AD value shifted down 1). Filtered window updated every 2 turns of the sensor.
Sensor2WindowMin,0x2053,31,VAR,INTEGER16,Internal,ro,0,32767,0,1,see Description,Min AD value for signal 2 (AD value shifted down 1). Filtered window updated every 2 turns of the sensor.
Sensor2WindowMax,0x2053,32,VAR,INTEGER16,Internal,ro,0,32767,0,1,see Description,Max AD value for signal 2 (AD value shifted down 1). Filtered window updated every 2 turns of the sensor.
NormalisedSin2Cos2,0x2053,33,VAR,INTEGER32,Internal,ro,0,2147483647,0,1,-,Unit circle value calculated as (Sensor1NormalisedSignal^2 + Sensor2NormalisedSignal^2).<br/>
MaxNormalisedSin2Cos2,0x2053,34,VAR,INTEGER32,Internal,ro,0,2147483647,0,1,-,The maximum allowed Sin2Cos2 value for the configured sensor before unit circle error.
MinNormalisedSin2Cos2,0x2053,35,VAR,INTEGER32,Internal,ro,0,2147483647,0,1,-,The minimum allowed Sin2Cos2 value for the configured sensor before unit circle error.
Sensor1mVOffset,0x2053,36,VAR,INTEGER16,Internal,rw,0,32767,3000L,1,mV,"Signal1 offset default value in millvolt. <br/>

        The <a href=""#SinCosSensor"">Sensor1mVOffsetAdjusted</a> will be initiated to this value at startup. <br/> 

        When changing this parameter you must save it to eeprom and then restart the unit."
Sensor2mVOffset,0x2053,37,VAR,INTEGER16,Internal,rw,0,32767,3000L,1,mV,"Signal2 offset default value in millvolt. <br/>

        The <a href=""#SinCosSensor"">Sensor2mVOffsetAdjusted</a> will be initiated to this value at startup. <br/> 

        When changing this parameter you must save it to eeprom and then restart the unit."
Sensor1mVAmplitude,0x2053,38,VAR,INTEGER16,Internal,rw,0,32767,900L,1,mV,"Signal1 amplitude default value in millvolt. The peak to peak value is 2 * Sensor1mVAmplitude. <br/>

        The <a href=""#SinCosSensor"">Sensor1mVAmplitudeAdjusted</a> will be initiated to this value at startup. <br/> 

        When changing this parameter you must save it to eeprom and then restart the unit."
Sensor2mVAmplitude,0x2053,39,VAR,INTEGER16,Internal,rw,0,32767,900L,1,mV,"Signal1 amplitude default value in millvolt. The peak to peak value is 2 * Sensor2mVAmplitude. <br/>

        The <a href=""#SinCosSensor"">Sensor2mVAmplitudeAdjusted</a> will be initiated to this value at startup. <br/> 

        When changing this parameter you must save it to eeprom and then restart the unit."
ActivateCalibration,0x2053,40,VAR,UNSIGNED8,Internal,rw,0,1,1U,1,-,"Activate or deactivate the automatic offset and amplitude adjustment of

        sine and cosine signals."
LastSubIndex,0x2060,0,VAR,UNSIGNED8,Operator,ro,0,255,0,1,-,Numbers of entries.
Frequency,0x2060,1,VAR,UNSIGNED16,OEM,rw,1,16,16u,1,kHz,"Open Drain Output Switching Frequency 

       

        (1, 2, 4, 8 or 16 kHz)."
Period,0x2060,2,VAR,UNSIGNED16,Operator,ro,,,-,1,-,PWM timer period. It is dependent on the Switching Frequency.
OpenDrainOutputControlWord,0x2060,3,VAR,UNSIGNED16,Operator,rw,0,65535,0,1,-,"Bitmask Enable/Disable (1/0) open drain outputs:

        <ul>

         <li>Open drain output 1 -> bit 0</li>

         <li>Open drain output n -> bit n-1</li>

        </ul>

        See comment on CommandAllControlled on restrictions on setting the outputs.<br/>

        If an Open Drain output has tripped due to a short circuit, for example, the Open Drain output has to be disabled

        and re-enabled to be activated again after the fault condition has been removed."
CommandAllControlled,0x2060,4,VAR,UNSIGNED16,Operator,ro,0,65535,0,1,-,"Bitmask:

       <ul>

        <li>

         1 = Open drain output n is set based on command bit in CommandAll. Open drain

             output n setting based on OpenDrainOutputControlWord is ignored.

        </li>

        <li>

         0 = Open drain output n is set based on control word bit set in OpenDrainOutputControlWord. Command

             bit n set in CommandAll is ignored

        </li>

       </ul>



       <p>Open drain output 1 -> bit 0<br/>

          Open drain output n -> bit n-1</p>"
MainContactor,0x2060,6,VAR,UNSIGNED16,OEM,rw,0,9,ODRNCO_DIGITAL_OUT_NONE,1,-,Set which Open Drain Output to use as main contactor. 0=none or 1..n where n=maximum number of open drains used.
OpenDrainOutputStatusWord,0x2060,7,VAR,UNSIGNED16,Operator,ro,0,65535,0,1,-,"Bitmask showing actual Enable/Disable (1/0) status of open drain outputs:

        <ul>

         <li>Open drain output 1 -> bit 0</li>

         <li>Open drain output n -> bit n-1</li>

        </ul>"
LastSubIndex,0x2061,0,VAR,UNSIGNED8,Operator,ro,0,255,0,1,-,Numbers of entries.
OutputMode,0x2061,1,ARRAY,UNSIGNED16,Operator,rw,0,4,1,1,-,"<table id=""ET"">

        <tr id=""ETHead""><th>Value</th><th id=""ETHead"">Description</th></tr>

        <tr id=""ETRow""><td>0</td>  <td id=""ETData"">Output Not Used. Output is disabled</td></tr>

        <tr id=""ETRow""><td>1</td>  <td id=""ETData"">General output. Open Drain is on/off controlled only</td></tr>

        <tr id=""ETRow""><td>2</td>  <td id=""ETData"">Voltage Control.<br/>

                                                   <b>Related control parameters:</b><br/>

                                                   OpenDrainOutputPullTime.PullTime<br/>

                                                   OpenDrainOutputPullVoltage.PullVoltage<br/>

                                                   OpenDrainOutputHoldVoltage.HoldVoltage</td></tr>

        <tr id=""ETRow""><td>3</td>  <td id=""ETData"">Current Control.<br/>

                                                   <b>Related control parameters:</b><br/>

                                                   OpenDrainOutputCurrentReference.CurrentReference<br/>

                                                   OpenDrainOutputDitheringCurrentFrequency.DitherFrequency<br/>

                                                   OpenDrainOutputDitheringCurrentAmplitude.DitherAmplitude</td></tr>

        <tr id=""ETRow""><td>4</td>  <td id=""ETData"">Manual PWM Control.<br/>

                                                   <b>Related control parameters:</b><br/>

                                                   OpenDrainOutputPWMLevel.PWMLevel<br/>

                                                   OpenDrainOutputGeneral.Period</td></tr>

       </table>







        For mode 2 and 3 the DC Bus voltage must be above 1/8th of the nominal voltage for the open drain to be activated.

        In manual mode it is possible to set the pwm level manually."
LastSubIndex,0x2062,0,VAR,UNSIGNED8,Operator,ro,0,255,0,1,-,Numbers of entries.
PullTime,0x2062,1,ARRAY,UNSIGNED16,Operator,rw,0,65535,,1,ms,"During this time the Pull Voltage or Pull Current is generated. <br/>

        Pull time for Open Drain Output 1...N."
LastSubIndex,0x2063,0,VAR,UNSIGNED8,Operator,ro,0,255,0,1,-,Numbers of entries.
PullVoltage,0x2063,1,ARRAY,UNSIGNED16,Operator,rw,0,65535,,0.01,Vdc,"Initial (during pull time) voltage between B+ and output when output is enabled. <br/>

        Pull voltage for Open Drain Output 1...N."
LastSubIndex,0x2064,0,VAR,UNSIGNED8,Operator,ro,0,255,0,1,-,Numbers of entries.
HoldVoltage,0x2064,1,ARRAY,UNSIGNED16,Operator,rw,0,65535,,0.01,Vdc,"Voltage that follows upon the Pull Voltage. <br/>

        Hold voltage for Open Drain Output 1...N."
LastSubIndex,0x2065,0,VAR,UNSIGNED8,Operator,ro,0,255,0,1,-,Numbers of entries.
CurrentReference,0x2065,1,ARRAY,INTEGER16,Operator,rw,0,32767,,1,mA,Current Reference for Open Drain Output 1..N. This also acts as the Hold Current when using the output in Current mode with PullTime > 0.
LastSubIndex,0x2066,0,VAR,UNSIGNED8,Operator,ro,0,255,0,1,-,Numbers of entries.
Pgain,0x2066,1,ARRAY,UNSIGNED16,Operator,rw,0,65535,100,1,-,Pgain for Open Drain Output 1..N.
LastSubIndex,0x2067,0,VAR,UNSIGNED8,Operator,ro,0,255,0,1,-,Numbers of entries.
Igain,0x2067,1,ARRAY,UNSIGNED16,Operator,rw,0,65535,100,1,-,Igain for Open Drain Output 1..N.
LastSubIndex,0x2068,0,VAR,UNSIGNED8,Operator,ro,0,255,0,1,-,Numbers of entries.
DitherFrequency,0x2068,1,ARRAY,UNSIGNED16,Operator,rw,0,200,0,1,Hz,"Dithering Frequency for Open Drain Output 1..N.<br/>

        Frequency with which the Dithering Amplitude will be added to and alternately subtracted from the Current Reference. 

        Duty cycle 50%. Setting DitherFrequency to 0 turns dithering off."
LastSubIndex,0x2069,0,VAR,UNSIGNED8,Operator,ro,0,255,0,1,-,Numbers of entries.
DitheringCurrentAmplitude,0x2069,1,ARRAY,UNSIGNED16,Operator,rw,0,65535,20,1,mA,"Dithering Current Amplitude for Open Drain Output 1..N.<br/>

        Dithering Current Amplitude added and subtracted to Current Reference with Dithering Frequency."
LastSubIndex,0x206A,0,VAR,UNSIGNED8,Operator,ro,0,255,0,1,-,Numbers of entries.
Current,0x206A,1,ARRAY,INTEGER16,Operator,ro,0,32767,-,1,mA,Current through Open Drain Output 1..N.
LastSubIndex,0x206B,0,VAR,UNSIGNED8,Operator,ro,0,255,0,1,-,Numbers of entries.
PWMLevel,0x206B,1,ARRAY,UNSIGNED16,Operator,rw,0,65535,-,1,-,"PWM Level for Open Drain Output 1..N.<br/>

        Shows the compare value as set in hardware of MCU. If Open Drain is in 

        Manual PWM control mode the PWMLevel can be set by writing to this subindex. 

        Also, in Manual PWM control mode, if output is off then the desired PWM level is read

        back instead of the hardware register value (that shows 0 if the output is off).

        See OpenDrainOutputGeneral.Period for maximum level."
LastSubIndex,0x206C,0,VAR,UNSIGNED8,Operator,ro,0,255,0,1,-,Numbers of entries.
NotConnectedLevel,0x206C,1,ARRAY,UNSIGNED16,OEM,rw,0,2500,,1,mA,"Not Connected Level for Open Drain Output 1..N.<br/>

        Current limit in mA. If measured current is below this for 200ms it will set the NotConnectedCh&lt;x&gt; event. <br/> 

        Set to 0 to disable this check."
LastSubIndex,0x206D,0,VAR,UNSIGNED8,Operator,ro,0,255,0,1,-,Numbers of entries.
PeakCurrentLevel,0x206D,1,ARRAY,UNSIGNED16,OEM,rw,0,2500,,1,mA,"Peak Current Level Open Drain Output 1..N.<br/>

        Current limit in mA. If measured current is above this for 16ms it will set the HighCurrentCh&lt;x&gt; event. <br/>

        If set to 0 the hardware limit will apply."
LastSubIndex,0x206E,0,VAR,UNSIGNED8,Operator,ro,0,255,0,1,-,Numbers of entries.
OverloadCurrentLevel,0x206E,1,ARRAY,UNSIGNED16,OEM,rw,0,1500,,1,mA,"Overload Current Level Open Drain Output 1..N.<br/>

        Current limit in mA. If measured current is above this for 10s it will set the HighCurrentCh&lt;x&gt; event.<br/>

        If set to 0 the hardware limit will apply."
LastSubIndex,0x206F,0,VAR,UNSIGNED8,Operator,ro,0,255,0,1,-,Numbers of entries.
PullCurrent,0x206F,1,ARRAY,INTEGER16,Operator,rw,0,32767,,1,mA,"Current Reference for Pull Current for Open Drain Output 1..N.

        It is used as initial current reference used for a time as specified by OpenDrainOutputPullTime.PullTime from the moment it is enabled.

        When PullTime has passed the OpenDrainOutputCurrentReference.CurrentReference is used as the main current reference until disabled."
LastSubIndex,0x2070,0,VAR,UNSIGNED8,Operator,ro,0,255,0,1,-,Numbers of entries.
HighSideSwitchControl,0x2070,1,VAR,UNSIGNED16,Operator,rw,0,1,0,1,-,"<ul>

        <li>1 = Turn High Side Switch on</li>

        <li>0 = Turn High Side Switch off</li>

        </ul><br/>

        If High Side Switch has tripped due to a short circuit, for example, the High Side Switch has to be disabled

        and re-enabled to be activated again after the fault condition has been removed."
HighSideSwitchStatus,0x2070,2,VAR,UNSIGNED16,Operator,ro,0,1,-,1,-,"<ul>

        <li>1 = High Side Switch is on</li>

        <li>0 = High Side Switch is off</li>

        </ul><br/>

        This show the actual status of the High Side Switch. If the High Side Switch has tripped due to a short circuit,

        for example, the High Side Switch has to be disabled and re-enabled to be activated again after the fault condition has been removed."
HighSideOutVoltage,0x2070,3,VAR,INTEGER16,Operator,ro,0,32767,-,0.01,Vdc,High Side Out voltage level.
HighSideOutCurrent,0x2070,4,VAR,INTEGER16,Operator,ro,0,32767,0,1,mA,"High Side Output current level, calculated as the sum of the current on the open drain outputs connected to it. <br/>

        See OpenDrainsOnHighSide for info about which open drain outputs that are connected."
HighSidePeakCurrentLevel,0x2070,11,VAR,UNSIGNED16,Operator,rw,0,6000u  ,6000u  ,1,mA,"Peak current limit level for High Side Output. <br/>

        If high side current is above this level for 16ms the HighSideHighPeakCurr event will be set. <br/>

        If set to 0 the hardware limit will apply."
HighSideOverloadCurrentLevel,0x2070,12,VAR,UNSIGNED16,Operator,rw,0,5000u  ,4000u  ,1,mA,"Overload current limit level for High Side Output. <br/>

        If high side current is above this level for 10s the HighSideOverload event will be set. <br/>

        If set to 0 the hardware limit will apply."
OpenDrainsOnHighSide,0x2070,13,VAR,UNSIGNED16,Operator,ro,0,65355,-,1,-,Open Drain outputs connected to High Side Out bitfield.
LastSubIndex,0x2071,0,VAR,UNSIGNED8,Operator,ro,0,255,0,1,-,Numbers of entries.
MotorPoles,0x2071,8,VAR,UNSIGNED8,OEM,rw,2,127,,1,no,Number of motor poles from motor nameplate.
StatorAngle16,0x2071,16,VAR,INTEGER16,Service,ro,-32768,32767,0,1,see Description,"ONLY PM MOTOR: <br/> 

        Debug: Commutation angle low resolution <br/><br/>

        2^16 equals 360 electrical degrees"
DeltaStatorAngle16,0x2071,17,VAR,INTEGER16,Service,ro,-32768,32767,0,1,see Description,"ONLY PM MOTOR: <br/> 

        Debug: Commutation increment angle low resolution <br/><br/>

        Number of StatorAngle16 increment of per 4 kHz execution"
PllPGain,0x2071,18,VAR,INTEGER16,Service,rw,0,32767,,1,see Description,"Proportional gain used in the PLL (Phase Locked Loop) filtering of the stator 

        angle (4096 = 1). <br/><br/> 

        The PLL filter serves the purpose of smoothing 

        out bad feedback signals without introducing delay.<br/><br/> 

        If PllPgain is set to zero, Pll filtering of StatorAngle is disabled, 

        i.e. StatorAngle = StatorAngleUnfiltered and 

        DeltaStatorAngle  = DeltaStatorAngleUnfiltered."
PllIGain,0x2071,19,VAR,INTEGER16,Service,rw,0,32767,,1,see Description,Integral gain used in the PLL filtering of the stator angle (4096 = 1).
PllLimOutMax,0x2071,20,VAR,INTEGER16,Service,rw,0,32767,,1,see Description,"Max output from the PLL filtering of the stator angle, i.e. max value 

        of DeltaStatorAngle16 (0x2071:17)."
LastSubIndex,0x2072,0,VAR,UNSIGNED8,Operator,ro,0,255,0,1,-,Numbers of entries.
PgainDpart_CurrentController,0x2072,5,VAR,INTEGER16,OEM,rw,0,32767,,1,see Description,"Proportional gain in the PI-parts of the current controller in the d-direction of the motor.<br/>

        (256 = 1)<br/>

        The gain used internally is divided by 2 or 4 when switching at 2 and 1 kHz respectively."
IgainDpart_CurrentController,0x2072,6,VAR,INTEGER16,OEM,rw,0,32767,,1,see Description,"Integral gain in the PI-parts of the current controller in the d-direction of the motor.<br/>

        (256 = 1)<br/>

        The gain used internally is divided by 2 or 4 when switching at 2 and 1 kHz respectively."
PgainQpart_CurrentController,0x2072,7,VAR,INTEGER16,OEM,rw,0,32767,,1,see Description,"Proportional gain in the PI-parts of the current controller in the q-direction of the motor.<br/>

        (256 = 1)<br/>

        The gain used internally is divided by 2 or 4 when switching at 2 and 1 kHz respectively."
IgainQpart_CurrentController,0x2072,8,VAR,INTEGER16,OEM,rw,0,32767,,1,see Description,"Integral gain in the PI-parts of the current controller in the q-direction of the motor.<br/>

        (256 = 1)<br/>

        The gain used internally is divided by 2 or 4 when switching at 2 and 1 kHz respectively."
RegdIpart,0x2072,10,VAR,INTEGER16,Internal,ro,-32768,32767,0,1,see Description,Integral part of the current controller in the d-direction of the motor.
RegqIpart,0x2072,11,VAR,INTEGER16,Internal,ro,-32768,32767,0,1,see Description,Integral part of the current controller in the q-direction of the motor.
MaxIdRefChange,0x2072,12,VAR,INTEGER16,OEM,rw,0,1000,,1,dApeak/250us,"Maximum allowed step in IdRef from one sample to another. This is used 

        to ramp the IdRef that is used in the regulator. 

        Disable the ramp by set the value to 0."
MaxIqRefChange,0x2072,13,VAR,INTEGER16,OEM,rw,0,1000,,1,dApeak/250us,"Maximum allowed step in IqRef from one sample to another. This is used 

        to ramp the IqRef that is used in the regulator. 

        Disable the ramp by set the value to 0."
LastSubIndex,0x2073,0,VAR,UNSIGNED8,Operator,ro,0,255,0,1,-,Numbers of entries.
RmsMotorCurrent,0x2073,1,VAR,UNSIGNED16,Operator,ro,0,65535,-,1,Arms,"Scalar sum of measured current &amp; magnetisation current = &radic;<span style=""text-decoration:overline;"">

        Id&sup2; + Iq&sup2;</span>. Filtered value."
DcBusCurrent,0x2073,2,VAR,INTEGER16,Operator,ro,-32768,32767,-,1,Adc,Estimated and filtered dc bus current
DcBusPower,0x2073,3,VAR,INTEGER16,Operator,ro,-32768,32767,-,10,W,Estimated and filtered DC power.
RotorFluxFilterShiftSteps,0x2073,4,VAR,INTEGER16,Operator,rw,0,15,4,1,see Description,"Filter time constant for calculated RotorFlux. </br>

        Time constant = 2^(ShiftSteps - 12) [s] </br>

        If ShiftSteps = 0  filter is disabled </br>

        If ShiftSteps = 1  then time constant = 0.5 ms </br>

        If ShiftSteps = 15 then time constant = 8 s"
UPeak,0x2073,5,VAR,INTEGER16,Operator,ro,-32768,32767,-,1,see Description,"Calculated UPeak. </br></br> 16384 = 48.00 / &radic;<span style=""text-decoration:overline;"">3</span>"
Rmotor,0x2073,6,VAR,INTEGER16,Operator,rw,-32768,32767,,100,uOhm,"Motor resistance, i.e. Rstator + Rrotor, in phase-to-neutral."
Ld,0x2073,7,VAR,INTEGER16,Operator,rw,-32768,32767,,1,uH,Leakage inductance in d-direction.
Lq,0x2073,8,VAR,INTEGER16,Operator,rw,-32768,32767,,1,uH,Leakage inductance in q-direction.
RotorFluxCalc,0x2073,9,VAR,INTEGER16,Operator,ro,-32768,32767,0,0.1,mVs,Filtered rotor flux calculated from internal voltages and currents.
Ed,0x2073,10,VAR,INTEGER16,Service,ro,-32768,32767,0,1,see Description,Calculated back EMF in d-direction.
RmsCurrentFilterShiftSteps,0x2073,11,VAR,UNSIGNED16,Operator,rw,0,15,2,1,see Description,"Time constant for CurrentAngle filter </br>

        Time constant = 2^(ShiftSteps - 12) [s] </br>

        If ShiftSteps = 0  filter is disabled </br>

        If ShiftSteps = 1  then time constant = 0.5 ms </br>

        If ShiftSteps = 15 then time constant = 8 s"
DcBusPowerFilterShiftSteps,0x2073,12,VAR,UNSIGNED16,Operator,rw,0,15,2,1,see Description,"Time constant for DcBusPower. </br>

        Time constant = 2^(ShiftSteps - 12) [s] </br>

        If ShiftSteps = 0  filter is disabled </br>

        If ShiftSteps = 1  then time constant = 0.5 ms </br>

        If ShiftSteps = 15 then time constant = 8 s"
Ldq,0x2073,13,VAR,INTEGER16,Operator,rw,-32768,32767,,1,uH,"Inductance in both d and q-direction, if they are to be same."
wIqLd,0x2073,14,VAR,INTEGER16,Operator,ro,-32768,32767,0,1,see Description,The wIqLq part of Ed calculation
RmotorTempComp,0x2073,15,VAR,INTEGER16,Operator,ro,-32768,32767,-,100,uOhm,Winding temperature compensated motor resistance.
AutoTuneState,0x2073,16,VAR,UNSIGNED8,Operator,rw,0,255,,1,see Description,"State of the Auto tuning of inductance and resistance.  <br/><br/>

        0:  Auto tuning inactive. Always start in this state. Write 1 in this state to autotune in one sequence write 2 to do it stepwise.  <br/><br/>

        1:  One sequence autotuning.

        2:  Stepwise autotuning.

        3:  DriveTool enables powerstage. Auto tuning initialization has been done. Configure transient recorder first to see the result (for exampel Id (0x2077:2), UdRef (0x2079:2)  <br/><br/>

        4:  Sweeping of voltage is performed to measure stator resistance and verify deadband. Id shall be proportional to Ud when looking in trace.  <br/><br/>

        5:  Waiting for transient recorder to finish.  <br/><br/>

        6:  Waiting for user to write 7 to find voltage step if stepwise autotune is selected.  <br/><br/>   

        10: Waiting for user to write 11 to find parameters if stepwise autotune is selected.  <br/><br/>       

        18: Waiting for user to write 19 to proceed with current step response if stepwise autotune is selected. Tuning of inductance, resistanse current control P and I gains is ready.  <br/><br/>        

        21: Performs current step response and start the Transient recorder. Software disable powerstage after one second and return to State 0.  <br/><br/>"
VoltageStep,0x2073,17,VAR,INTEGER16,Operator,ro,-32768,32767,,1,see Description,The voltage step used for auto tuning of inductance and resistance.
TransRecTrigStart,0x2073,18,VAR,INTEGER16,Operator,rw,-32768,32767,,1,see Description,"Setting the 4kHz start point of the transient recorder when performing auto tuning.  <br/><br/>

        0:    Start sampling from beginning when finding VoltageStep.  <br/><br/>

        1000: Start sampling when extraction of inductance and resistance begins.  <br/><br/>

        1095: Start sampling five samples before extraction of inductance and resistance is finished.  <br/><br/>"
TunedResistance,0x2073,19,VAR,INTEGER16,Operator,ro,-32768,32767,,100,uOhm,The resulting resistance from auto tuning.
TunedInductance,0x2073,20,VAR,INTEGER16,Operator,ro,-32768,32767,,1,uH,The resulting inductance from auto tuning.
InstantInductance,0x2073,21,VAR,INTEGER16,Operator,ro,-32768,32767,,1,,The instant inductance each sample from auto tuning.
TunedResistanceInternalScaling,0x2073,22,VAR,INTEGER16,Operator,ro,-32768,32767,,1,see Description,
TunedInductanceInternalScaling,0x2073,23,VAR,INTEGER16,Operator,ro,-32768,32767,,1,see Description,
SaturationIndicator,0x2073,26,VAR,INTEGER16,Operator,ro,-32768,32767,,1,see Description,The instant value of inductanse anr resistande during autotuning.  <br/><br/>
StatorResistance,0x2073,29,VAR,INTEGER16,Operator,ro,-32768,32767,-,100,uOhm,The stator resistanse calculated with slow changing voltage.
RampVoltageSlope,0x2073,30,VAR,INTEGER16,Operator,rw,-32768,32767,,1,see Description,The rate of voltage increase/decrease when ramping voltage to se deadband and voltage current correlation  <br/><br/>
Eq,0x2073,31,VAR,INTEGER16,Service,ro,-32768,32767,0,1,see Description,Calculated back EMF in q-direction.
DrivingVoltage,0x2073,32,VAR,INTEGER16,Operator,ro,-32768,32767,,1,see Description,The instant value of voltage that changed current in Autotuning.  <br/><br/>
AutoTuneCurrentGradient,0x2073,36,VAR,INTEGER16,Operator,ro,-32768,32767,-,1,,The filtered current gradient.
DcBusEnergy,0x2073,37,VAR,INTEGER32,Operator,ro,-2147483647,2147483648,,1,see Description,Dc bus energy accumulated from dc bus power in Q31 format.  <br/><br/>
DcBusEnergyLowSpeed,0x2073,39,VAR,INTEGER16,Operator,rw,-32768,32767,,1,see Description,The lower speed in the speed intervall were Dc bus energy is calculated.  <br/><br/>
DcBusEnergyHighSpeed,0x2073,40,VAR,INTEGER16,Operator,rw,-32768,32767,,1,see Description,The higher speed in the speed intervall were Dc bus energy is calculated.  <br/><br/>
DcBusEnergyTimer,0x2073,41,VAR,INTEGER32,Operator,rw,-2147483647,2147483648,,1,see Description,"The countdown time in the speed intervall were Dc bus energy is calculated.  <br/><br/>

        If the timer is set different from 0 the measurement is armed.  <br/><br/>"
EdFilterShiftSteps,0x2073,51,VAR,INTEGER16,Operator,rw,0,15,2,1,see Description,"Filter time constant for calculated ac voltage in d-direction. </br>

        Time constant = 2^(ShiftSteps - 12) [s] </br>

        If ShiftSteps = 0  filter is disabled </br>

        If ShiftSteps = 1  then time constant = 0.5 ms </br>

        If ShiftSteps = 15 then time constant = 8 s"
MinDeltaStatorAngleForFluxCalc,0x2073,53,VAR,INTEGER16,OEM,rw,0,32767,,1,see Description,Only calculate a rotor flux value above this stator frequency. 819 = 50 Hz.
CanSignalDcCurrentFilterGain,0x2073,54,VAR,INTEGER16,OEM,rw,0,16384,300,1,-,"First order filtering coefficient for the separately filtered DC current signal for CAN.<br/><br/>

        

        FilteredValue = FilteredValue - FilterGain / 16384 * (RawValue - FilteredValue) <br/>

        <i>f<sub>c</sub></i> = (FilterGain * 4000) / ((16384 - FilterGain) * 2 * &pi;) <br/>

        &tau; = (16384 - FilterGain) / (FilterGain * 4000)

        

        <ul>

         <li>FilterGain = 1, means slowest possible filter</li>

         <li>FilterGain = 16384, means no filtering</li>

         <li>FilterGain = 0, means filter froze on last output</li>

        </ul>"
CanSignalRmsMotorCurrentFilterGain,0x2073,55,VAR,INTEGER16,OEM,rw,0,16384,300,1,-,"First order filtering coefficient for the separately filtered AC current signal for CAN.<br/><br/>

        

        FilteredValue = FilteredValue - FilterGain / 16384 * (RawValue - FilteredValue) <br/>

        <i>f<sub>c</sub></i> = (FilterGain * 4000) / ((16384 - FilterGain) * 2 * &pi;) <br/>

        &tau; = (16384 - FilterGain) / (FilterGain * 4000)

        

        <ul>

         <li>FilterGain = 1, means slowest possible filter</li>

         <li>FilterGain = 16384, means no filtering</li>

         <li>FilterGain = 0, means filter froze on last output</li>

        </ul>"
CanSignalRmsMotorCurrent,0x2073,56,VAR,UNSIGNED16,Operator,ro,0,65535,-,1,Arms,"Scalar sum of measured current &amp; magnetisation current = &radic;<span style=""text-decoration:overline;"">

        Id&sup2; + Iq&sup2;</span>. Filtered value."
OverCurrentLimit,0x2073,57,VAR,INTEGER16,OEM,rw,0,32767,,1,Arms,"Custom over current trip level. <br/>

       Set to 0 to disable."
OverCurrentSampleLimit,0x2073,58,VAR,UNSIGNED16,OEM,rw,0,65535,4,1,-,Number of consecutive over current samples in 4 kHz allowed before event is set.
LastSubIndex,0x2074,0,VAR,UNSIGNED8,Operator,ro,0,255,0,1,-,Numbers of entries.
ActualPwmFrequency,0x2074,1,VAR,UNSIGNED16,Internal,ro,0,20,-,1,kHz,"Actual SPWM Switching Frequency<br/>

        1, 2, 4, 8, 12, 16 or 20 kHz"
PwmFrequencyAtLowSpeed,0x2074,2,VAR,UNSIGNED16,Internal,rw,0,20,8,1,kHz,"Switching frequency when speed becomes lower than (LowSpeedLevelForAutSwitchFreqChange -

        HysteresisSpeedLevelForAutSwitchFreqChange). When speed is higher than LowSpeedLevelForAutSwitchFreqChange,

        the switching frequency is changing to PwmFrequencyAtMidSpeed.<br/>

        1, 2, 4, 8, 12, 16 or 20 kHz."
PwmFrequencyAtMidSpeed,0x2074,3,VAR,UNSIGNED16,Internal,rw,0,20,8,1,kHz,"Switching frequency when speed becomes higher than LowSpeedLevelForAutSwitchFreqChange but speed is lower than

        (HighSpeedLevelForAutSwitchFreqChange - HysteresisSpeedLevelForAutSwitchFreqChange). When speed is higher than

        HighSpeedLevelForAutSwitchFreqChange, the switching frequency is changing to PwmFrequencyAtHighSpeed.<br/>

        1, 2, 4, 8, 12, 16 or 20 kHz."
PwmFrequencyAtHighSpeed,0x2074,4,VAR,UNSIGNED16,Internal,rw,0,20,8,1,kHz,"Switching frequency when speed becomes higher than HighSpeedLevelForAutSwitchFreqChange.<br/>

        1, 2, 4, 8, 12, 16 or 20 kHz."
LowSpeedLevelForAutSwitchFreqChange,0x2074,5,VAR,INTEGER16,Internal,rw,-32768,32767,0,1,Rpm,See PwmFrequencyAtLowSpeed and PwmFrequencyAtMidSpeed.
HighSpeedLevelForAutSwitchFreqChange,0x2074,6,VAR,INTEGER16,Internal,rw,-32768,32767,0,1,Rpm,See PwmFrequencyAtMidSpeed and PwmFrequencyAtHighSpeed.
HysteresisSpeedLevelForAutSwitchFreqChange,0x2074,7,VAR,INTEGER16,Internal,rw,-32768,32767,30,1,Rpm,See PwmFrequencyAtLowSpeed and PwmFrequencyAtMidSpeed.
DeadBandCompensationTime,0x2074,8,VAR,INTEGER16,Internal,rw,-32768,32767,1000u,1,ns,Compensation time that is actually used in hardware during switching.
AdjustedDeadBandCompTime,0x2074,9,VAR,INTEGER16,Internal,ro,-32768,32767,0,1,ns,Compensation time that is actually used in hardware during switching.
LastSubIndex,0x2075,0,VAR,UNSIGNED8,Operator,ro,0,255,0,1,-,Numbers of entries.
TorqueError,0x2075,1,VAR,INTEGER16,Operator,ro,-32768,32767,-,0.1,Nm,"Input to the PM Field Weakening Controller. It takes the difference 

        between ActTorque and RefTorque."
RegulatorStatus,0x2075,2,VAR,UNSIGNED8,Operator,ro,0,255,-,1,-,"Signals if any limiter is active. <br/>

          0 = FIELD_WEAKNING_CONTROL_NOT_ACTIVE <br/>

          1 = FIELD_WEAKNING_CONTROL_ACTIVE_WITH_NO_LIMITATION <br/>

          2 = FIELD_WEAKNING_CONTROL_ACTIVE_WITH_CURRENT_LIMITATION <br/>

          3 = FIELD_WEAKNING_CONTROL_ACTIVE_WITH_ANGLE_LIMITATION <br/>"
LimitedRefTorque,0x2075,3,VAR,INTEGER16,Operator,ro,-32768,32767,-,0.1,Nm,Reference torque limited by over current.
IgainVoltageAngle,0x2075,4,VAR,INTEGER16,Operator,rw,-32768,32767,,1,-,Proportional Gain used to compute Delta Voltage Angle.
VoltageAngle,0x2075,7,VAR,INTEGER16,Operator,ro,-32768,32767,-,0.1,Deg,"Phase angle of the applied motor voltage. <br/><br/>

        Angle = arcsin(ud/sqrt(ud^2+uq^2))<!--<br/><br/>

        32767 = 180 deg <br/>

        -32768 = -180 deg-->"
VoltageAngleIPart,0x2075,8,VAR,INTEGER16,Operator,ro,-32768,32767,-,1,see Description,"4kHz increment of the VoltageAngle. Output from the PM Field Weakening Controller <br/>

        32767 = 180 deg <br/>

        -32768 = -180 deg"
PgainVoltageAngle,0x2075,9,VAR,INTEGER16,Operator,rw,-32768,32767,,1,see Description,"Proportional Gain used to compute Voltage Angle. <br/>

        value 2^10 => gain = 1.0000"
VoltageAnglePPart,0x2075,10,VAR,INTEGER16,Operator,ro,-32768,32767,0,0.1,Deg,"Proportional part of the Voltage Angle regulator. <!--<br/>

        32767 = 180 deg <br/>

        -32768 = -180 deg-->"
MaxVoltageAngle,0x2075,11,VAR,INTEGER16,Operator,rw,-32768,32767,,0.1,Deg,"Maximum allowed voltage angle. <!--<br/>

        32767 = 180 deg <br/>

        -32768 = -180 deg-->"
MoreRefTorqueFactor,0x2075,12,VAR,INTEGER16,Operator,rw,-32768,32767,,1,see Description,"When in field weakening this factor can increase or decrease the max actual current <br/>

        by increasing the torque reference in field weakening. <br/>

        Higher max current will normally mean higher max torque although it can result <br/>

        in lower efficiency. No effect in current control mode or if MoreRefTorqueFactor is zero. <br/>  

        RefTorqueIncreased = RefTorque * (1 + MoreRefTorqueFactor/1024 * (RefCurrent/MotorCurrent - 1)) <br/>

        1024 => 100% increased if RefCurrent is 100% more than MotorCurrent <br/>

        -1024 => 100% decreased if RefCurrent is 100% more than MotorCurrent  <br/>

        1024 => 50% increased if RefCurrent is 50% more than MotorCurrent <br/>

        -1024 => 50% decreased if RefCurrent is 50% more than MotorCurrent  <br/>"
LastSubIndex,0x2076,0,VAR,UNSIGNED8,Operator,ro,0,255,0,1,-,Numbers of entries.
RefTorque,0x2076,1,VAR,INTEGER16,Operator,ro,-32768,32767,-,0.1,Nm,"Reference torque input to the PM Fiels Weakening Controller. It is computed from the RotorFlux and the inductance parameters (0x2076:4-5).</br></br>

        Torque = 3/2*MotorPoles*iq*RotorFlux + id*iq(Ld-Lq)"
ActTorque,0x2076,2,VAR,INTEGER16,Operator,ro,-32768,32767,-,0.1,Nm,"Actual torque input to the PM Fiels Weakening Controller. It is computed from the RotorFlux and the inductance parameters (0x2076:4-5).</br></br>

        Torque = 3/2*MotorPoles*iq*RotorFlux + id*iq(Ld-Lq)"
NominalRotorFlux,0x2076,3,VAR,INTEGER16,Operator,rw,0,32767,,0.1,mVs,"Magnetic rotor flux used as pre-load and feed-forward to the current controller.

        It is also used to as a starting value for RotorFluxCalc."
TorqueFilterShiftSteps,0x2076,7,VAR,INTEGER16,OEM,rw,0,15,,1,see Description,"Filter constant for actual and reference torque filter </br>

        Time constant = 2^(ShiftSteps - 12) [s] </br>

        If ShiftSteps = 0  filter is disabled </br>

        If ShiftSteps = 1  then time constant = 0.5 ms </br>

        If ShiftSteps = 15 then time constant = 8 s"
CanSignalActTorque,0x2076,8,VAR,INTEGER16,Operator,ro,-32768,32767,-,0.1,Nm,"Separately filtered torque signal . It is computed from the RotorFlux and the inductance parameters (0x2076:4-5).</br></br>

      Torque = 3/2*MotorPoles*iq*RotorFlux + id*iq(Ld-Lq)"
CanSignalTorqueFilterGain,0x2076,9,VAR,INTEGER16,OEM,rw,0,16384,320,1,-,"First order filtering coefficient for the separately filtered CAN torque signal.<br/><br/>

        

        FilteredValue = FilteredValue - FilterGain / 16384 * (RawValue - FilteredValue) <br/>

        <i>f<sub>c</sub></i> = (FilterGain * 4000) / ((16384 - FilterGain) * 2 * &pi;) <br/>

        &tau; = (16384 - FilterGain) / (FilterGain * 4000)

        

        <ul>

         <li>FilterGain = 1, means slowest possible filter</li>

         <li>FilterGain = 16384, means no filtering</li>

         <li>FilterGain = 0, means filter froze on last output</li>

        </ul>"
LastSubIndex,0x2077,0,VAR,UNSIGNED8,Operator,ro,0,255,0,1,-,Numbers of entries.
Iq,0x2077,1,VAR,INTEGER16,Operator,ro,-32768,32767,-,1,Apk,Measured instantaneous q-current. Iq is sampled every 0.250 ms (4 kHz).
Id,0x2077,2,VAR,INTEGER16,Operator,ro,-32768,32767,-,1,Apk,Measured instantaneous d-current. Id is sampled every 0.250 msec (4 kHz)
ActualCurrentAngle,0x2077,5,VAR,INTEGER16,Operator,ro,-32768,32767,-,0.1,Deg,Actual current angle.
CurrentAngleFilterShiftSteps,0x2077,6,VAR,INTEGER16,Operator,rw,0,15,,1,-,"Time constant for CurrentAngle filter </br>

        Time constant = 2^(ShiftSteps - 12) [s] </br>

        If ShiftSteps = 0  filter is disabled </br>

        If ShiftSteps = 1  then time constant = 0.5 ms </br>

        If ShiftSteps = 15 then time constant = 8 s"
LastSubIndex,0x2078,0,VAR,UNSIGNED8,Operator,ro,0,255,0,1,-,Numbers of entries.
IdRef,0x2078,1,VAR,INTEGER16,OEM,ro,-32768,32767,-,1,Apk,Reference current in motor d-direction that is input to the current controller.
IqRef,0x2078,2,VAR,INTEGER16,Operator,ro,-32768,32767,-,1,Apk,Reference current in motor q-direction that is input to the current controller.
CurrentAngleOffset,0x2078,3,VAR,INTEGER16,Operator,rw,-32768,32767,,0.1,Deg,"<p>Current Angle Control parameter. Used to determine the current in d and q direction.</p>

        

        <p>

        Angle = CurrentAngleOffset + CurrentAngleGain * abs(CurrentReference) <br/>

        IdRef = -sin(Angle) * abs(CurrentReference) <br/>

        IqRef = cos(Angle) * CurrentReference

        </p>"
CurrentAngleGain,0x2078,4,VAR,INTEGER16,Operator,rw,-32768,32767,,1,see Description,"<p>Current Angle Control parameter. Used to determine the current in d and q direction.</p>

        

        <p>

        Angle = CurrentAngleOffset + CurrentAngleGain * abs(CurrentReference) <br/>

        IdRef = -sin(Angle) * abs(CurrentReference) <br/>

        IqRef = cos(Angle) * CurrentReference

        </p>

        

        <p>To convert from SI-units <i>x</i> in deg/Arms to parameter: <br/>

        CurrentAngleGain = <i>x</i> / 360 * 1638.4

        / &radic;<span style=""text-decoration:overline;"">2</span> * 1024

        </p>"
MaxCurrentAngle,0x2078,5,VAR,INTEGER16,Operator,rw,-32768,32767,,0.1,Deg,"Determine the max current angle. <br/>        

        The optimal MaxCurrentAngle is individual for each motor type 

        although 45 deg is theoretical max optimal for any motor."
IdRefMinimum,0x2078,8,VAR,INTEGER16,Operator,rw,-32768,32767,,1,Arms,The magnetization current used when low magnitezation current is commanded externaly.
RotorFluxMinimum,0x2078,9,VAR,INTEGER16,Operator,rw,0,32767,,0.1,mVs,"IdRef will be internally controlled to achieve this minimum rotor flux. <br/><br/>

        If CalculatedRotorFlux is above RotorFluxMinimum IdRef will not be affected. <br/><br/>

        Set to zero to disable this functionallity."
ReferenceCurrentAngle,0x2078,10,VAR,INTEGER16,Operator,ro,-32768,32767,-,0.1,Deg,"Reference current angle as calculated from reference current, offset and gain."
ExternalIdRef,0x2078,11,VAR,INTEGER16,OEM,rw,-32768,32767,-,1,Arms,External reference current in motor d-direction that is input to the current controller.
ExternalIqRef,0x2078,12,VAR,INTEGER16,OEM,rw,-32768,32767,-,1,Arms,External reference current in motor q-direction that is input to the current controller.
ExternalIdRefActive,0x2078,13,VAR,UNSIGNED8,OEM,rw,0,1,-,,,Enable setting of external IdRef.
ExternalIqRefActive,0x2078,14,VAR,UNSIGNED8,OEM,rw,0,1,-,,,Enable setting of external IqRef.
RotorFluxMinimumControlGain,0x2078,15,VAR,INTEGER16,OEM,rw,-32768,32767,,1,,"Gain that multiply the missing rotor flux to get the additional IdRef current. <br/><br/>

        RotorFluxMinimumControlGain = 256 equals Gain = 1 in the expression below. <br/><br/>

        Additional IdRef = Gain * MAX(0,(MinimumRotorFlux - CalculatedRotorFlux))"
LastSubIndex,0x2079,0,VAR,UNSIGNED8,Operator,ro,0,255,0,1,-,Numbers of entries.
UqReference,0x2079,1,VAR,INTEGER16,Internal,rw,-32768,32767,0,1,see Description,"Reference of the PWM generated motor voltage in the q-direction. Output from the current

        controller.<br/>

        16384 = Udc/&radic;<span style=""text-decoration:overline;"">2</span> VRMS (hsp) where

        Udc = 36, 48 or 80 V"
UdReference,0x2079,2,VAR,INTEGER16,Internal,rw,-32768,32767,0,1,see Description,"Reference of the PWM generated motor voltage in the d-direction. Output from the current

        controller.<br/>

        16384 = Udc/&radic;<span style=""text-decoration:overline;"">2</span> VRMS (hsp) where

        Udc = 36, 48 or 80 V"
UxRefMax,0x2079,3,VAR,INTEGER16,Operator,ro,-32768,32767,0,1,see Description,"Limit for Ud Reference and Uq Reference.<br/>

        16384 = Udc/&radic;<span style=""text-decoration:overline;"">2</span> VRMS (hsp) where Udc = 36, 48 or 80 V"
DisableCurrentControl,0x2079,4,VAR,INTEGER16,Internal,rw,-128,127,0,1,-,"Disables the current control and makes UdRef and UqRef writable. <br/> <br/>

        0 = current control enabled <br/>

        1 = current control disabled"
FieldWeakeningPossible,0x2079,5,VAR,UNSIGNED8,Internal,rw,0,1,,1,-,"Parameter that tells if Field Weakening shall be used on this drive. <br/> <br/>

        0 = no Field Weakening <br/>

        1 = Field Weakening used"
IdLimitFactor,0x2079,6,VAR,INTEGER16,Operator,rw,-32768,32767,,1,see Description,"Parameter used to compute Id limit for transition from PM Field Weakening 

        Control to Current Control. <br/> 

        Scaled so that 256 = 1."
IdLimitOffset,0x2079,7,VAR,INTEGER16,Operator,rw,-32768,32767,,1,Arms,Parameter used to compute Id limit for transition from PM Field Weakening.
UPeakLimit,0x2079,8,VAR,INTEGER16,Operator,rw,-32768,32767,,1,see Description,"Peak voltage limit for transition from Current Control to PM Field

       Weakening Control and then also used as applied peak voltage. <br/> <br/>

       Given as Modulation Index where 16348 means the maximum 

       possible without using over modulation."
UPeakNormalized,0x2079,9,VAR,INTEGER16,Operator,ro,-32768,32767,-,1,see Description,"Normalized UPeak used to decide if FieldWeakening shall be enabled or not. <br/>

        Unit: See UPeakLimit"
InFieldWeakeningMode,0x2079,10,VAR,UNSIGNED8,Operator,ro,0,1,-,1,-,"Show that control is in field weakening mode and not current control mode. <br/>        

        0 = In current control mode <br/>

        1 = In field weakening mode <br/>

        Note: Will always be 0 when <a href=""#ApplicationSetupParameters"">ApplicationSetupParameters, ActualControlMode</a> equals Electric Motor Brake Mode."
UqRefFiltered,0x2079,11,VAR,INTEGER16,Internal,ro,-32768,32767,0,1,see Description,Filtered UqReference.
UdRefFiltered,0x2079,12,VAR,INTEGER16,Internal,ro,-32768,32767,0,1,see Description,Filtered UdReference.
UdUqFilterShiftSteps,0x2079,13,VAR,INTEGER16,Internal,rw,0,15,,1,see Description,"Time constant for UdFilter and UqFilter. <br/>

        Time constant = 2^(ShiftSteps - 12) [s] </br>

        If ShiftSteps = 0  filter is disabled </br>

        If ShiftSteps = 1  then time constant = 0.5 ms </br>

        If ShiftSteps = 15 then time constant = 8 s"
ActualVoltageAngle,0x2079,14,VAR,INTEGER16,Operator,ro,-32768,32767,-,0.1,Deg,"Angle for Ud Reference and Uq Reference.<br/>

        <!--16384 = 90 deg,--> Angle increase from zero when only positive Uq voltage and Ud decrease,"
IdLimit,0x2079,15,VAR,INTEGER16,Internal,ro,-32768,32767,0,1,see Description,The current level in d-direction shall exceed this value to exit fieldweakening
UPeakNormalizedFilterShiftSteps,0x2079,16,VAR,INTEGER16,Internal,rw,0,15,,1,see Description,"Time constant for UPeakNormalized filter. </br>

        Time constant = 2^(ShiftSteps - 12) [s] </br>

        If ShiftSteps = 0  filter is disabled </br>

        If ShiftSteps = 1  then time constant = 0.5 ms </br>

        If ShiftSteps = 15 then time constant = 8 s"
ActualVoltageAngleFilterShiftSteps,0x2079,17,VAR,INTEGER16,Internal,rw,0,15,,1,see Description,"Time constant for ActualVoltageAngle filter. </br>

        Time constant = 2^(ShiftSteps - 12) [s] </br>

        If ShiftSteps = 0  filter is disabled </br>

        If ShiftSteps = 1  then time constant = 0.5 ms </br>

        If ShiftSteps = 15 then time constant = 8 s"
IdFiltered,0x2079,18,VAR,INTEGER16,Operator,ro,-32768,32767,-,1,Arms,Filtered Id current
IdFilterShiftSteps,0x2079,19,VAR,INTEGER16,Operator,rw,0,15,,1,-,"Time constant for IdFilter

        Time constant = 2^(ShiftSteps - 12) [s] </br>

        If ShiftSteps = 0  filter is disabled </br>

        If ShiftSteps = 1  then time constant = 0.5 ms </br>

        If ShiftSteps = 15 then time constant = 8 s"
MaxNbrOfIdSamplesAboveIdLimit,0x2079,20,VAR,INTEGER16,Operator,rw,0,32767,25,1,-,"This function works as a leaking bucket mechanism for entering current control. <br/>

        The number of samples that IdFiltered shall be above IdLimit to enter current control. <br/>

        Zero means that the function is disabled."
LastSubIndex,0x2085,0,VAR,UNSIGNED8,Operator,ro,0,255,0,1,-,Numbers of entries.
CurrentReference,0x2085,1,VAR,INTEGER16,Operator,ro,-32768,32767,-,1,Arms,The selected reference current.
IsCurrentLimited,0x2085,2,VAR,UNSIGNED8,Operator,ro,0,1,-,1,-,"Status that show if reference current is limited. <br/>

       TRUE == Limited <br/>

       FALSE == Unlimited"
CurrentPerTorque,0x2085,3,VAR,INTEGER32,Operator,ro,-,-,-,1,see Description,"<p>

       Current to torque relation used when converting from Nm/s to internal

       current change.

       </p>

       

       <p>

       <!--

       CurrentPerTorque / 16384 * 1638.4 / sqrt(2) / ((3/2 * 1638.4 * 48     / sqrt(3)) / (2 * pi * 50))

       -->

       x [Arms/Nm] = CurrentPerTorque / 16384 / sqrt(1.5) / 48     * 2 * &pi; * 50

       </p>"
LastSubIndex,0x208F,0,VAR,UNSIGNED8,Operator,ro,0,255,0,1,-,Numbers of entries.
DgainSetX,0x208F,1,ARRAY,INTEGER16,Operator,rw,0,32767,,1,-,"<table id=""ET"">

          <tr id=""ETHead""> <th>Sub index</th> <th>Name</th></tr>

          <tr id=""ETRow"">  <td>1</td>         <td>DgainSet0</td></tr>

          <tr id=""ETRow"">  <td>2</td>         <td>DgainSet1</td></tr>

          <tr id=""ETRow"">  <td>3</td>         <td>DgainSet2</td></tr>

          <tr id=""ETRow"">  <td>4</td>         <td>DgainSet3</td></tr>

        </table> <br/>

        Dgain for parameter set X<br/><br/>"
LastSubIndex,0x2090,0,VAR,UNSIGNED8,Operator,ro,0,255,0,1,-,Numbers of entries.
PgainSetX,0x2090,1,ARRAY,INTEGER16,Operator,rw,0,32767,,1,10*A/Rpm/256,"<table id=""ET"">

          <tr id=""ETHead""> <th>Sub index</th> <th>Name</th></tr>

          <tr id=""ETRow"">  <td>1</td>         <td>PgainSet0</td></tr>

          <tr id=""ETRow"">  <td>2</td>         <td>PgainSet1</td></tr>

          <tr id=""ETRow"">  <td>3</td>         <td>PgainSet2</td></tr>

          <tr id=""ETRow"">  <td>4</td>         <td>PgainSet3</td></tr>

        </table> <br/>

        Pgain for parameter set X<br/><br/>"
LastSubIndex,0x2091,0,VAR,UNSIGNED8,Operator,ro,0,255,0,1,-,Numbers of entries.
IgainSmallSetX,0x2091,1,ARRAY,INTEGER16,Operator,rw,0,32767,,1,10*A/Rpm/256,"<table id=""ET"">

          <tr id=""ETHead""> <th>Sub index</th> <th>Name</th></tr>

          <tr id=""ETRow"">  <td>1</td>         <td>IgainSmallSet0</td></tr>

          <tr id=""ETRow"">  <td>2</td>         <td>IgainSmallSet1</td></tr>

          <tr id=""ETRow"">  <td>3</td>         <td>IgainSmallSet2</td></tr>

          <tr id=""ETRow"">  <td>4</td>         <td>IgainSmallSet3</td></tr>

        </table> <br/>

        Igain small for parameter set X<br/><br/><br/>

        When Igain small is used depends on <a href=""#ApplicationSetupParameters"">ApplicationSetupParameters, SpeedRampMode</a> used as shown

        in table below. <br/><br/>

        <table id=""ET"">

          <tr id=""ETHead""> <th>SpeedRampMode</th>                                 <th>When used</th></tr>

          <tr id=""ETRow"">  <td>Speed control with no ramp</td>                    <td>Always</td></tr>

          <tr id=""ETRow"">  <td>Speed control with PDO controlled ramp</td>        <td>During hold </td></tr>

          <tr id=""ETRow"">  <td>Speed control with parameter controlled ramp</td>  <td>During hold</td></tr>

        </table>"
LastSubIndex,0x2092,0,VAR,UNSIGNED8,Operator,ro,0,255,0,1,-,Numbers of entries.
IgainMediumSetX,0x2092,1,ARRAY,INTEGER16,Operator,rw,0,32767,,1,10*A/Rpm/256,"<table id=""ET"">

          <tr id=""ETHead""> <th>Sub index</th> <th>Name</th></tr>

          <tr id=""ETRow"">  <td>1</td>         <td>IgainMediumSet0</td></tr>

          <tr id=""ETRow"">  <td>2</td>         <td>IgainMediumSet1</td></tr>

          <tr id=""ETRow"">  <td>3</td>         <td>IgainMediumSet2</td></tr>

          <tr id=""ETRow"">  <td>4</td>         <td>IgainMediumSet3</td></tr>

        </table> <br/>

        Igain medium for parameter set X<br/><br/><br/>

        When Igain medium is used depends on <a href=""#ApplicationSetupParameters"">ApplicationSetupParameters, SpeedRampMode</a> used as shown

        in table below. <br/><br/>

        <table id=""ET"">

          <tr id=""ETHead""> <th>SpeedRampMode</th>                                 <th>When used</th></tr>

          <tr id=""ETRow"">  <td>Speed control with no ramp</td>                    <td>Not used</td></tr>

          <tr id=""ETRow"">  <td>Speed control with PDO controlled ramp</td>        <td>During rollback </td></tr>

          <tr id=""ETRow"">  <td>Speed control with parameter controlled ramp</td>  <td>During rollback</td></tr>

        </table>"
LastSubIndex,0x2093,0,VAR,UNSIGNED8,Operator,ro,0,255,0,1,-,Numbers of entries.
IgainLargeSetX,0x2093,1,ARRAY,INTEGER16,Operator,rw,0,32767,,1,10*A/Rpm/256,"<table id=""ET"">

          <tr id=""ETHead""> <th>Sub index</th> <th>Name</th></tr>

          <tr id=""ETRow"">  <td>1</td>         <td>IgainLargeSet0</td></tr>

          <tr id=""ETRow"">  <td>2</td>         <td>IgainLargeSet1</td></tr>

          <tr id=""ETRow"">  <td>3</td>         <td>IgainLargeSet2</td></tr>

          <tr id=""ETRow"">  <td>4</td>         <td>IgainLargeSet3</td></tr>

        </table> <br/>

        Igain large for parameter set X<br/><br/><br/>

        When Igain large is used depends on <a href=""#ApplicationSetupParameters"">ApplicationSetupParameters, SpeedRampMode</a> used as shown

        in table below. <br/><br/>

        <table id=""ET"">

          <tr id=""ETHead""> <th>SpeedRampMode</th>                                 <th>When used</th></tr>

          <tr id=""ETRow"">  <td>Speed control with no ramp</td>                    <td>Not used</td></tr>

          <tr id=""ETRow"">  <td>Speed control with PDO controlled ramp</td>        <td>During standing and deceleration </td></tr>

          <tr id=""ETRow"">  <td>Speed control with parameter controlled ramp</td>  <td>During standing and deceleration</td></tr>

        </table>"
LastSubIndex,0x2094,0,VAR,UNSIGNED8,Operator,ro,0,255,0,1,-,Numbers of entries.
PosDcPowerLimit,0x2094,1,VAR,INTEGER16,Operator,rw,0,32767,-,10,W,"Requested positive DC power limit.

       Please note that this is NOT saved to EEPROM."
NegDcPowerLimit,0x2094,2,VAR,INTEGER16,Operator,rw,0,32767,-,10,W,"Requested negative DC power limit.

       Please note that this is NOT saved to EEPROM."
PosDcCurrentLimit,0x2094,3,VAR,INTEGER16,Operator,rw,0,32767,0,1,Adc,"Positive DC current limit. 0 = no limit.

       This can be saved to EEPROM."
NegDcCurrentLimit,0x2094,4,VAR,INTEGER16,Operator,rw,0,32767,0,1,Adc,"Negative DC current limit. 0 = no limit.

       This can be saved to EEPROM."
PowerFilterGain,0x2094,5,VAR,INTEGER16,OEM,rw,1,16384,2000,1,,Filter gain for power limit. 16384 = no filtering.
ResponseFactor,0x2094,6,VAR,UNSIGNED8,OEM,rw,0,255,220,1,,"Controls the response time when entering power limit.

       A value of 0 means fastest possible response.

       A higher value means a smoother transition in to power limit."
AccCurrentLimitFromDcPower,0x2094,7,VAR,INTEGER16,Operator,ro,0,32767,-,1,Arms,"Motoring current limit. <br/>

       Result from conversion of AccDcPowerLimit to current."
BrakeCurrentLimitFromDcPower,0x2094,8,VAR,INTEGER16,Operator,ro,0,32767,-,1,Arms,"Regenerative current limit. <br/>

       Result from conversion of BrakeDcPowerLimit to current."
CalculatedTorque,0x2094,9,VAR,INTEGER16,Operator,ro,0,32767,-,1,,
LastSubIndex,0x2095,0,VAR,UNSIGNED8,Operator,ro,0,255,0,1,-,Numbers of entries.
MaxAccCurrent,0x2095,1,VAR,INTEGER16,Operator,wo,0,32767,-,1,Arms,Sets both Forward and Reverse Max Acceleration Currents to the same value.
MaxBrakeCurrent,0x2095,2,VAR,INTEGER16,Operator,wo,0,32767,-,1,Arms,Sets both Forward and Reverse Max Brake Currents to the same value.
MaxCurrentChange,0x2095,3,VAR,INTEGER16,Operator,rw,0,32767,,1,10*Arms / ms,"The maximum allowed change during 1 ms (i.e. derivate) of the Torque 

       Current that is allowed. A too high derivate may for 

       example introduce noice in the gear.

       Due to truncation it does not get exacly requested behaviour when 

       selecting a value between 1-4. 

       If set to 0, no ramp limitation of Current."
ForwardMaxAccCurrent,0x2095,5,VAR,INTEGER16,Operator,rw,0,32767,,1,Arms,"Max acceleration current in forward direction. This limit can be reduced due to for example high temperature, low DC Bus Voltage etc. <br/>

       Instantaneously available current in 2095h:9-10."
ReverseMaxAccCurrent,0x2095,6,VAR,INTEGER16,Operator,rw,0,32767,,1,Arms,"Max acceleration current in reverse direction. This limit can be reduced due to for example high temperature, high DC Bus Voltage etc. <br/>

       Instantaneously available current in 2095h:9-10."
ForwardMaxBrakeCurrent,0x2095,7,VAR,INTEGER16,Operator,rw,0,32767,,1,Arms,"Max braking current in forward direction. This limit can be reduced due to for example high temperature, low DC Bus Voltage etc. <br/>

       Instantaneously available current in 2095h:9-10."
ReverseMaxBrakeCurrent,0x2095,8,VAR,INTEGER16,Operator,rw,0,32767,,1,Arms,"Max braking current in reverse direction. This limit can be reduced due to for example high temperature, low DC Bus Voltage etc. <br/>

       Instantaneously available current in 2095h:9-10."
AbilityAccelerationCurrent,0x2095,9,VAR,INTEGER16,Operator,ro,0,32767,-,1,Arms,"Will be lower than 2095h:5-6 if any reduction is active. <br/>

       Reductions will be active due to physical reasons, e.g. high or low voltage, 

       high or low temperature or high speed. <br/>

       Any active reduction should be signaled as a Warning in <a href=""#Diagnostic"">Diagnostic, ExtendedWarnings</a> <br/>

       Available acceleration current is always the minimum of the AbilityAccelerationCurrent and AccCurrentLimit (2095h:15)."
AbilityBrakeCurrent,0x2095,10,VAR,INTEGER16,Operator,ro,0,32767,-,1,Arms,"Will be lower than 2095h:7-8 if any reduction is active. <br/>

       Reductions will be active due to physical reasons, e.g. high or low voltage, 

       high or low temperature or high speed. <br/>

       Any active reduction should be signaled as a Warning in <a href=""#Diagnostic"">Diagnostic, ExtendedWarnings</a> <br/>

       Available brake current is always the minimum of the AbilityBrakeCurrent and BrakeCurrentLimit (2095h:16)."
ModeratelyHighSpeedStartLevel,0x2095,11,VAR,INTEGER16,Operator,rw,0,32767,3600,1,Rpm,"Linear over speed protection level. Rollback of current starts at ModeratelyHighSpeedStartLevel 

       and ends at ModeratelyHighSpeedEndLevel. Only used for accelerating current. 

       Setting the parameter to 0 disables the function."
ModeratelyHighSpeedEndLevel,0x2095,12,VAR,INTEGER16,Operator,rw,0,32767,3700,1,Rpm,SeeModeratelyHighSpeedStartLevel.
ModeratelyLowSpeedStartLevel,0x2095,13,VAR,INTEGER16,Operator,rw,0,32767,0,1,Rpm,"<p>Linear low speed protection. </p>

       <p>Braking current starts to be reduced when speed is less than

       ModeratelyLowSpeedStartLevel and 0 current is reached at ModeratelyLowSpeedEndLevel. </p>

       <p>Mainly used with combustion engines to prevent rotation of engine in wrong direction. </p> 

       <p>This will be combined with no allowed current in wrong direction to get a

       continous allowed current curve. </p>

       <p>Rotational direction must be correctly defined using Inverted Rotational Direction in

       <a href=""#ApplicationSetupParameters.ApplicationSetupWord"">ApplicationSetupWord</a>. </p>

       <p>Setting the parameter to 0 disables the function. </p>"
ModeratelyLowSpeedEndLevel,0x2095,14,VAR,INTEGER16,Operator,rw,0,32767,0,1,Rpm,See ModeratelyLowSpeedStartLevel.
AccCurrentLimit,0x2095,15,VAR,INTEGER16,Operator,rw,0,32767,-,1,Arms,"Sets accelerating current limit. <br/>

       Used for external (CAN) limitation. <br/>

       Available acceleration current is always the minimum of the AbilityAccelerationCurrent (2095h:9) and AccCurrentLimit."
BrakeCurrentLimit,0x2095,16,VAR,INTEGER16,Operator,rw,0,32767,-,1,Arms,"Sets braking Current limit. <br/>

       Used for external (CAN) limitation. <br/>

       Available brake current is always the minimum of the AbilityBrakeCurrent (2095h:10) and BrakeCurrentLimit."
ActualLimitationType,0x2095,19,VAR,UNSIGNED8,Operator,ro,0,15,-,1,-,"Type of (reason for) actual limitation.

       <OL start=""0"">

         <LI>No limitation</LI>

         <LI>Event limitation</LI>

         <LI>Motor temperature limitation</LI>

         <LI>Low Dc voltage limitation</LI>

         <LI>High Dc voltage limitation</LI>

         <LI>Low speed limitation</LI>

         <LI>High speed limitation</LI>

         <LI>Not used</LI>

         <LI>Dc power limitation</LI>

         <LI>External current limitation</LI>

         <LI>External torque limitation</LI>

         <LI>Heatsink temperature limitation</LI>

         <LI>Energy limitation</LI>

         <LI>Max current limitation</LI>

         <LI>Max voltage angle limitation</LI>

         <LI>Switching frequency limitation</LI>

       </UL>"
AccLimitationType,0x2095,20,VAR,UNSIGNED8,Operator,ro,0,15,-,1,-,"Lowest accelerating current limitation.

       <OL start=""0"">

         <LI>No limitation</LI>

         <LI>Event limitation</LI>

         <LI>Motor temperature limitation</LI>

         <LI>Low Dc voltage limitation</LI>

         <LI>High Dc voltage limitation</LI>

         <LI>Low speed limitation</LI>

         <LI>High speed limitation</LI>

         <LI>Not used</LI>

         <LI>Dc power limitation</LI>

         <LI>External current limitation</LI>

         <LI>External torque limitation</LI>

         <LI>Heatsink temperature limitation</LI>

         <LI>Energy limitation</LI>

         <LI>Max current limitation</LI>

         <LI>Not used</LI>

         <LI>Switching frequency limitation</LI>

       </UL>"
BrakeLimitationType,0x2095,21,VAR,UNSIGNED8,Operator,ro,0,15,-,1,-,"Lowest brake current limitation.

       <OL start=""0"">

         <LI>No limitation</LI>

         <LI>Event limitation</LI>

         <LI>Motor temperature limitation</LI>

         <LI>Low Dc voltage limitation</LI>

         <LI>High Dc voltage limitation</LI>

         <LI>Low speed limitation</LI>

         <LI>High speed limitation</LI>

         <LI>Not used</LI>

         <LI>Dc power limitation</LI>

         <LI>External current limitation</LI>

         <LI>External torque limitation</LI>

         <LI>Heatsink temperature limitation</LI>

         <LI>Energy limitation</LI>

         <LI>Max current limitation</LI>

         <LI>Not used</LI>

         <LI>Switching frequency limitation</LI>

       </UL>"
LimitPosCurrent,0x2095,22,VAR,INTEGER16,Operator,ro,0,32767,-,1,Arms,Show the limitited current in positive direction. <br/>
LimitNegCurrent,0x2095,23,VAR,INTEGER16,Operator,ro,-32767,0,-,1,Arms,Show the limitited current in negative direction. <br/>
MaxIncTorqueChange,0x2095,24,VAR,INTEGER32,OEM,rw,0,1000000,,1,Nm/s,"Slew rate limitation for increasing torque.<br/>

       

       Increasing torque is defined as when the absolute value of the torque increases.<br/>

       

       Set to 0 to disable function. Both increasing and decreasing limitation will be disabled."
MaxDecTorqueChange,0x2095,25,VAR,INTEGER32,OEM,rw,0,1000000,,1,Nm/s,"Slew rate limitation for decreasing torque.<br/>

       

       Decreasing torque is defined as when the absolute value of the torque decreases.<br/>

       

       Set to 0 to disable function. Both increasing and decreasing limitation will be disabled."
MaxTorqueChangeAtLowTorque,0x2095,26,VAR,INTEGER32,OEM,rw,0,1000000,,1,Nm/s,"Slew rate limitation at low torque.<br/>

       

       Low torque is defined as below LowTorqueLevel.<br/>

       

       Set to 0 to disable function."
LowTorqueLevel,0x2095,27,VAR,INTEGER16,OEM,rw,0,32767,,0.1,Nm,"Below this level, low torque slew rate limitation will be active."
MaxCurrentAt1kHz,0x2095,30,VAR,INTEGER16,Internal,rw,0,2316,,1,Arms,Max allowed current when switching frequency is 1 kHz.
MaxCurrentAt2kHz,0x2095,31,VAR,INTEGER16,Internal,rw,0,2316,,1,Arms,Max allowed current when switching frequency is 2 kHz.
MaxCurrentAt4kHz,0x2095,32,VAR,INTEGER16,Internal,rw,0,2316,,1,Arms,Max allowed current when switching frequency is 4 kHz.
MaxCurrentAt8kHz,0x2095,33,VAR,INTEGER16,Internal,rw,0,2316,,1,Arms,Max allowed current when switching frequency is 8 kHz.
MaxCurrentAt12kHz,0x2095,34,VAR,INTEGER16,Internal,rw,0,2316,,1,Arms,Max allowed current when switching frequency is 12 kHz.
MaxCurrentAt16kHz,0x2095,35,VAR,INTEGER16,Internal,rw,0,2316,,1,Arms,Max allowed current when switching frequency is 16 kHz.
MaxCurrentAt20kHz,0x2095,36,VAR,INTEGER16,Internal,rw,0,2316,,1,Arms,Max allowed current when switching frequency is 20 kHz.
LastSubIndex,0x2096,0,VAR,UNSIGNED8,Operator,ro,0,255,0,1,-,Numbers of entries.
InternalSpeedReference,0x2096,1,VAR,INTEGER16,Operator,ro,-32768,32767,-,1,Rpm,"Speed reference input to speed PI controller (internal SW variable). 

       Differs from Command Speed when ramps and/or BPC are used."
CurrentReference,0x2096,2,VAR,INTEGER16,Operator,ro,-32768,32767,-,1,Arms,Reference Current From Speed PI-controller.
SpeedRegIPart,0x2096,3,VAR,INTEGER16,Operator,ro,-32768,32767,-,1,Arms,Speed regulator I part.
SpeedRegDPart,0x2096,4,VAR,INTEGER16,Operator,ro,-32768,32767,-,1,Arms,Speed regulator D part.
SpeedRegDPartFilterFactor,0x2096,5,VAR,INTEGER16,Operator,rw,0,16384,1600,1,,"Filter constant used for high pass filter in D-regulator.

        A lower value results in lower cut-off frequency."
LastSubIndex,0x2097,0,VAR,UNSIGNED8,Operator,ro,0,255,0,1,-,Numbers of entries.
CurrentBoostTimeToStart,0x2097,1,VAR,INTEGER16,OEM,rw,0,1500,,1,see Description,"The Current has to be saturated in max limit for a time greater than

       this limit in order for automatic boost to start. <br/>

       Automatic boost will be disabled if this limit is set to Zero. <br/> <br/> 

       Unit: 500 = 1 sec"
CurrentBoostTime,0x2097,2,VAR,INTEGER16,OEM,rw,0,1500,,1,see Description,"Duration of Current Boost. Max value is 3 seconds. <br/><br/>

       Unit: 500 = 1 sec"
CurrentBoostFactor,0x2097,3,VAR,INTEGER16,OEM,rw,0,1229,,1,see Description,"The Current Boost can be 20% higher than maximum drive current, 

       i.e. max value is 120%.

       MaxAccCurrent = Factor/1024 * AbilityCurrent (0x2095:9-10) or CurrentLimit (0x2095:15-16)

       1024 = 100%

       The factor is temperature dependant which means that maximum is reduced 

       linearly from 120% to 100% when temperature climbs from 60 to 85 degrees."
CurrentBoostSpeedLimit,0x2097,4,VAR,INTEGER16,OEM,rw,0,32767,,1,Rpm,"Actual speed need to be less than this limit at the same time as the Commnade speed

       is above this limit for a period longer than CurrentBoostTimeToStart in order 

       for the automatic boost to start."
LastSubIndex,0x2098,0,VAR,UNSIGNED8,Operator,ro,0,255,0,1,-,Numbers of entries.
RampState,0x2098,1,VAR,UNSIGNED8,Operator,ro,0,9,-,1,-,"Only used in Speed Control Modes with ramps (<a href=""#ApplicationSetupParameters"">ApplicationSetupParameters, SpeedRampMode</a> = 4 or 5).

       <UL>

         <LI> 0 = Accelerate</LI>

         <LI> 1 = Decelerate Coast</LI>

         <LI> 2 = Decelerate Adjust</LI>

         <LI> 3 = Decelerate No Adjust</LI>

         <LI> 4 = Hold</LI>

         <LI> 5 = Push</LI>

         <LI> 6 = Close To Stand</LI>

         <LI> 7 = Stand</LI>

         <LI> 8 = Rollback</LI>

         <LI> 9 = Speed Decelerate Anti Clonk State</LI>

       </UL>"
SpeedChangeFactor,0x2098,2,VAR,UNSIGNED8,Operator,rw,0,100,,1,see Description,"Parameters <a href=""#ApplicationCommands"">ApplicationCommands, CommandAccelerationChange/CommandDecelerationChange</a> will be divided by the value of this parameter. <br/><br/>  

       Only used in Speed Control Modes with ramps (<a href=""#ApplicationSetupParameters"">ApplicationSetupParameters, SpeedRampMode</a> = 4 or 5). <br/><br/>

       E.g., a SpeedChangeFactor value equal to 10 will have the following effect on the unit of CommandAccelerationChange/CommandDecelerationChange:<br/>

         <UL> 

           <LI> (rpm/2ms) / 10 => rpm/20ms 

         </UL>"
AntiClonkNumberOfCounts,0x2098,3,VAR,UNSIGNED16,Operator,rw,0,65535,,1,no,"Used to adjust Command Speed Ramped to Actual Speed via a ramp within 

       Anti Clonk Number Of Counts (each count is 2 ms). This function is used 

       together with MaxCurrentChange so that the ""clonk"" in the gear becomes 

       ok. Anti Clonk Number Of Counts = 0 disables the function. Only used in 

       Speed Control Modes with ramps (<a href=""#ApplicationSetupParameters"">ApplicationSetupParameters, SpeedRampMode</a> = 4 or 5). <br/><br/>



       The deceleration in rpm/2ms becomes equal to 

       (ActualSpeed-CommandSpeedRamped)  / AntiClonkNumberOfCounts <br/><br/>



       during AntiClonkNumberOfCounts*2ms if the Actual Speed decreases below 

       Command Speed Ramped (only executed once per deceleration phase)."
AntiClonkDeltaSpeedLimit,0x2098,4,VAR,INTEGER16,Operator,rw,-32768,32767,,1,Rpm,"Used when Bit 1 Adjust Speed During Deceleration in <a href=""#ApplicationSetupParameters"">ApplicationSetupParameters, ApplicationSetupWord</a>

       is NOT set. Anti Clonk algorithm is then activated when 

       CommandSpeedRamped &lt; ABS(ActualSpeed+ AntiClonkDeltaSpeedLimit). <br/><br/>

       In order to not use this feature set Anti Clonk Delta Speed Limit equal

       to <a href=""#ApplicationSetupParameters"">ApplicationSetupParameters, MaxCommandSpeed</a>."
AntiClonkCommandSpeedLimit,0x2098,5,VAR,INTEGER16,Operator,rw,-32768,32767,,1,Rpm,"Anti Clonk algorithm is acivated if ABS(CommandSpeed) &lt; AntiClonkCommandSpeedLimit. <br/><br/>

       Used to disable Anti Clonk Algorithm at high speeds. In order to not use this 

       feature set Anti Clonk Command Speed Limit equal to <a href=""#ApplicationSetupParameters"">ApplicationSetupParameters, MaxCommandSpeed</a>."
ReverseBrakeMaxSpeedInRpm,0x2098,6,VAR,INTEGER16,Operator,rw,-32768,32767,,1,Rpm,"Define maximum speed in reverse direction to be applied when <a href=""#ApplicationSetupParameters"">ApplicationSetupParameters, SpeedRampMode</a> = 5 is selected."
RampedRollBackSpeed,0x2098,7,VAR,INTEGER16,Operator,ro,0,32767,-,1,Rpm,"Ramped rollback speed parameter (see also <a href=""#ApplicationSetupParameters"">ApplicationSetupParameters, RollBackSpeed</a>)."
PushSpeedLimit,0x2098,8,VAR,INTEGER16,Operator,rw,-32768,32767,,1,Rpm,"Below the PushSpeedLimit the integral part in the speed controller is not

        allowed to build up. <br/>

        If this parameter is set to Zero there will be no speed limitation for 

        allowing the integral part to increase. <br/><br/>

        Use case 1: <br/>

        A ""push"" problem is when a vehicle is stuck going forward but also have

        forward torque buildup due to integration. Then when the hindrance is

        suddenly removed there will be a jump in speed. The same problem exists

        in both directions. <br/><br/>

        In order to avoid the ""push"" problem it is recommended to set PushSpeedLimit

        to ""some low speed"". Recommended value is 10 rpm. <br/><br/>

        Use case 2: <br/>

        An ""uphill rolling back"" problem may occur when a vehicle (e.g. golf cart)

        is stopped uphill and the driver does not apply enough acceleration to

        circumvent the slope. Then the vehicle may start rolling backward. <br/> <br/>

        In order to avoid the ""uphill rolling back"" problem it is recommended to set

        PushSpeedLimit to Zero. This, to mimic an automatic gear box that does not

        allow negative movement when drive gear is engaged (positive movement)."
IGainMode,0x2098,9,VAR,UNSIGNED8,Operator,ro,0,5,-,1,-,"Show the different handling of speed regulator IPart.

       <UL>

         <LI> 0 = SPEED_IREG_OFF_MODE</LI>

         <LI> 1 = SPEED_IREG_NORMAL_MODE</LI>

         <LI> 2 = SPEED_IREG_INCREASE_MODE</LI>

         <LI> 3 = SPEED_IREG_ROLLBACK_MODE</LI>

         <LI> 4 = SPEED_IREG_TO_ZERO_MODE</LI>

         <LI> 5 = SPEED_IREG_DECELERATE_MODE</LI>

       </UL>"
IregAccelerationLimit,0x2098,10,VAR,INTEGER16,Operator,rw,0,32767,0,1,Rpm/20ms,"Above this acceleration level the integral part in the speed controller

        is not allowed to build up."
LastSubIndex,0x2099,0,VAR,UNSIGNED8,Operator,ro,0,255,0,1,-,Numbers of entries.
CommandCurrentFromCommand,0x2099,1,VAR,INTEGER16,Operator,ro,-32768,32767,-,1,,Command current that is recalculated from command torque.
AccCurrentLimitFromAccTorqueLimit,0x2099,2,VAR,INTEGER16,Operator,ro,-32768,32767,-,1,Arms,"Command acceleration current limit that is recalculated from acceleration

        command limit torque."
BrakeCurrentLimitFromBrakeTorqueLimit,0x2099,3,VAR,INTEGER16,Operator,ro,-32768,32767,-,1,Arms,"Command brake current limit that is recalculated from brake

        command limit torque."
AccTorqueLimit,0x2099,6,VAR,INTEGER16,Operator,rw,-32768,32767,-,0.1,Nm,The acc torque limit from CAN.
BrakeTorqueLimit,0x2099,7,VAR,INTEGER16,Operator,rw,-32768,32767,-,0.1,Nm,The brake torque limit from CAN.
MissingCommandTorque,0x2099,8,VAR,INTEGER16,Operator,ro,-32768,32767,-,0.1,Nm,"The torque that has to be addded to command torque to actually 

        get the commanded torque."
MissingAccTorqueLimit,0x2099,9,VAR,INTEGER16,Operator,ro,-32768,32767,-,0.1,Nm,"The acc torque limit torque that has to be addded to acc torque limit to actually 

        get the acc torque limit."
MissingBrakeTorqueLimit,0x2099,10,VAR,INTEGER16,Operator,ro,-32768,32767,-,0.1,Nm,"The acc torque limit torque that has to be addded to acc torque limit to actually 

        get the acc torque limit."
TorqueToCurrentConversionFactor,0x2099,11,VAR,INTEGER32,Operator,rw,0,2147483647,,1,Arms/Nm * 1024,"Factor used for converting Torque to Current in the feed forward part of the Dc power limit algorithm. <br /><br />

       NOTE: Used with FeedFwdWithPIControlLimitCalculation-algorithm.

        This conversion is used convert reference values and limits in torque."
FeedForwardTorque,0x2099,12,VAR,INTEGER16,Operator,rw,-32768,32767,0,0.1,Nm,Feed forward torque that will be recalculated to current.
FeedForwardCurrent,0x2099,13,VAR,INTEGER16,Operator,ro,-32768,32767,-,1,Arms,Feed forward current that is recalculated from torque feed forward.
LastSubIndex,0x2100,0,VAR,UNSIGNED8,Operator,ro,0,255,0,1,-,Numbers of entries.
MaxForwardAccelerationSet0,0x2100,1,ARRAY,UNSIGNED8,Operator,rw,0,255,,1,Rpm/2ms/SpeedChangeFactor (see Description),"<table id=""ET"">

          <tr id=""ETHead""> <th>Sub index</th> <th>Name</th></tr>

          <tr id=""ETRow"">  <td>1</td>         <td>MaxForwardAccelerationSet0</td></tr>

          <tr id=""ETRow"">  <td>2</td>         <td>MaxForwardAccelerationSet1</td></tr>

          <tr id=""ETRow"">  <td>3</td>         <td>MaxForwardAccelerationSet2</td></tr>

          <tr id=""ETRow"">  <td>4</td>         <td>MaxForwardAccelerationSet3</td></tr>

        </table> <br/>

        Used according to ""Speed Ramp Parameter Set"" bits in <a href=""#ApplicationCommands"">ApplicationCommands, CommandAll</a>.<br/><br/>

        Unit depends on <a href=""#SpeedRamp"">SpeedRamp, SpeedChangeFactor</a>"
LastSubIndex,0x2101,0,VAR,UNSIGNED8,Operator,ro,0,255,0,1,-,Numbers of entries.
MaxForwardDecelerationSet0,0x2101,1,ARRAY,UNSIGNED8,Operator,rw,0,255,,1,Rpm/2ms/SpeedChangeFactor (see Description),"<table id=""ET"">

          <tr id=""ETHead""> <th>Sub index</th> <th>Name</th></tr>

          <tr id=""ETRow"">  <td>1</td>         <td>MaxForwardDecelerationSet0</td></tr>

          <tr id=""ETRow"">  <td>2</td>         <td>MaxForwardDecelerationSet1</td></tr>

          <tr id=""ETRow"">  <td>3</td>         <td>MaxForwardDecelerationSet2</td></tr>

          <tr id=""ETRow"">  <td>4</td>         <td>MaxForwardDecelerationSet3</td></tr>

        </table> <br/>

        Used according to ""Speed Ramp Parameter Set"" bits in <a href=""#ApplicationCommands"">ApplicationCommands, CommandAll</a> if CommandSpeed &lt; ActualSpeed

        and CommandSpeed != 0 and has the same sign as the ActualSpeed. 

        <br/><br/>

        Unit depends on <a href=""#SpeedRamp"">SpeedRamp, SpeedChangeFactor</a>"
LastSubIndex,0x2102,0,VAR,UNSIGNED8,Operator,ro,0,255,0,1,-,Numbers of entries.
MaxReverseAccelerationSet0,0x2102,1,ARRAY,UNSIGNED8,Operator,rw,0,255,,1,Rpm/2ms/SpeedChangeFactor (see Description),"<table id=""ET"">

          <tr id=""ETHead""> <th>Sub index</th> <th>Name</th></tr>

          <tr id=""ETRow"">  <td>1</td>         <td>MaxReverseAccelerationSet0</td></tr>

          <tr id=""ETRow"">  <td>2</td>         <td>MaxReverseAccelerationSet1</td></tr>

          <tr id=""ETRow"">  <td>3</td>         <td>MaxReverseAccelerationSet2</td></tr>

          <tr id=""ETRow"">  <td>4</td>         <td>MaxReverseAccelerationSet3</td></tr>

        </table> <br/>

        Used according to ""Speed Ramp Parameter Set"" bits in <a href=""#ApplicationCommands"">ApplicationCommands, CommandAll</a>.<br/><br/>

        Unit depends on <a href=""#SpeedRamp"">SpeedRamp, SpeedChangeFactor</a>"
LastSubIndex,0x2103,0,VAR,UNSIGNED8,Operator,ro,0,255,0,1,-,Numbers of entries.
MaxReverseDecelerationSet0,0x2103,1,ARRAY,UNSIGNED8,Operator,rw,0,255,,1,Rpm/2ms/SpeedChangeFactor (see Description),"<table id=""ET"">

          <tr id=""ETHead""> <th>Sub index</th> <th>Name</th></tr>

          <tr id=""ETRow"">  <td>1</td>         <td>MaxReverseDecelerationSet0</td></tr>

          <tr id=""ETRow"">  <td>2</td>         <td>MaxReverseDecelerationSet1</td></tr>

          <tr id=""ETRow"">  <td>3</td>         <td>MaxReverseDecelerationSet2</td></tr>

          <tr id=""ETRow"">  <td>4</td>         <td>MaxReverseDecelerationSet3</td></tr>

        </table> <br/>

        Used according to ""Speed Ramp Parameter Set"" bits in <a href=""#ApplicationCommands"">ApplicationCommands, CommandAll</a> if CommandSpeed &lt; ActualSpeed

        and CommandSpeed != 0 and has the same sign as the ActualSpeed. <br/><br/>

        Unit depends on <a href=""#SpeedRamp"">SpeedRamp, SpeedChangeFactor</a>"
LastSubIndex,0x2104,0,VAR,UNSIGNED8,Operator,ro,0,255,0,1,-,Numbers of entries.
SpecialForwardDeceleration,0x2104,1,ARRAY,UNSIGNED8,Operator,rw,0,255,,1,Rpm/2ms/SpeedChangeFactor (see Description),"<table id=""ET"">

          <tr id=""ETHead""> <th>Sub index</th> <th>Name</th>               <th>Description</th></tr>

          <tr id=""ETRow"">  <td>1</td>         <td>FootBrake</td>          <td id=""ETData"">Used when ActualSpeed is positive and ""Foot Brake On"" bit in

                                                                                 CommandAll is set. However, if ReverseBrake also is detected, the highest 

                                                                                 deceleration value of FootBrake and ReverseBrake is used.</td></tr>

          <tr id=""ETRow"">  <td>2</td>         <td>ReverseBrake</td>       <td id=""ETData"">Used when ActualSpeed is positive and CommandSpeed is 

                                                                                 negative.<br/><br/>

                                                                                 UsedDeceleration = NeutralBrake + (ReverseBrake - NeutralBrake) * 

                                                                                 ABS(CommandSpeed) / ReverseBrakeMaxSpeed</td></tr>

          <tr id=""ETRow"">  <td>3</td>         <td>NeutralBrakeSet0</td>   <td id=""ETData"">Used according to ""Speed Neutral Brake Ramp Parameter Set"" bits

                                                                                 in CommandAll when ActualSpeed is positive and CommandSpeed 

                                                                                 is zero.</td></tr>

          <tr id=""ETRow"">  <td>4</td>         <td>NeutralBrakeSet1</td>   <td id=""ETData"">Used according to ""Speed Neutral Brake Ramp Parameter Set"" bits 

                                                                                 in CommandAll when ActualSpeed is positive and CommandSpeed 

                                                                                 is zero.</td></tr>

          <tr id=""ETRow"">  <td>5</td>         <td>NeutralBrakeSet2</td>   <td id=""ETData"">Used according to ""Speed Neutral Brake Ramp Parameter Set"" bits

                                                                                 in CommandAll when ActualSpeed is positive and CommandSpeed 

                                                                                 is zero.</td></tr>

          <tr id=""ETRow"">  <td>6</td>         <td>NeutralBrakeSet3</td>    <td id=""ETData"">Used according to ""Speed Neutral Brake Ramp Parameter Set"" bits

                                                                                 in CommandAll when ActualSpeed is positive and CommandSpeed 

                                                                                 is zero.</td></tr>          

        </table>

        <br/><br/>

        Unit depends on <a href=""#SpeedRamp"">SpeedRamp, SpeedChangeFactor</a>"
LastSubIndex,0x2105,0,VAR,UNSIGNED8,Operator,ro,0,255,0,1,-,Numbers of entries.
SpecialReverseDeceleration,0x2105,1,ARRAY,UNSIGNED8,Operator,rw,0,255,,1,Rpm/2ms/SpeedChangeFactor (see Description),"<table id=""ET"">

          <tr id=""ETHead""> <th>Sub index</th> <th>Name</th>               <th>Description</th></tr>

          <tr id=""ETRow"">  <td>1</td>         <td>FootBrake</td>          <td id=""ETData"">Used when ActualSpeed is negative and ""Foot Brake On"" bit in

                                                                                 CommandAll is set. However, if ReverseBrake also is detected, the highest 

                                                                                 deceleration value of FootBrake and ReverseBrake is used.</td></tr>

          <tr id=""ETRow"">  <td>2</td>         <td>ReverseBrake</td>       <td id=""ETData"">Used when ActualSpeed is negative and CommandSpeed is 

                                                                                 positive.<br/><br/>

                                                                                 UsedDeceleration = NeutralBrake + (ReverseBrake - NeutralBrake) * 

                                                                                 ABS(CommandSpeed) / ReverseBrakeMaxSpeed</td></tr>

          <tr id=""ETRow"">  <td>3</td>         <td>NeutralBrakeSet0</td>   <td id=""ETData"">Used according to ""Speed Neutral Brake Ramp Parameter Set"" bits

                                                                                 in CommandAll when ActualSpeed is negative and CommandSpeed 

                                                                                 is zero.</td></tr>

          <tr id=""ETRow"">  <td>4</td>         <td>NeutralBrakeSet1</td>   <td id=""ETData"">Used according to ""Speed Neutral Brake Ramp Parameter Set"" bits 

                                                                                 in CommandAll when ActualSpeed is negative and CommandSpeed 

                                                                                 is zero.</td></tr>

          <tr id=""ETRow"">  <td>5</td>         <td>NeutralBrakeSet2</td>   <td id=""ETData"">Used according to ""Speed Neutral Brake Ramp Parameter Set"" bits

                                                                                 in CommandAll when ActualSpeed is negative and CommandSpeed 

                                                                                 is zero.</td></tr>

          <tr id=""ETRow"">  <td>6</td>         <td>NeutralBrakeSet3</td>    <td id=""ETData"">Used according to ""Speed Neutral Brake Ramp Parameter Set"" bits

                                                                                 in CommandAll when ActualSpeed is negative and CommandSpeed 

                                                                                 is zero.</td></tr>                                                                               

        </table>

        <br/><br/>

        Unit depends on <a href=""#SpeedRamp"">SpeedRamp, SpeedChangeFactor</a>"
LastSubIndex,0x2130,0,VAR,UNSIGNED8,Operator,ro,0,255,0,1,-,Numbers of entries.
RamAddress,0x2130,1,VAR,UNSIGNED32,Internal,rw,0,4294967295,0,1,-,Set RAM address to read from or write to.
RamU8,0x2130,2,VAR,UNSIGNED8,Internal,rw,0,255,0,1,-,Read and write U8 at RAM address.
RamU16,0x2130,3,VAR,UNSIGNED16,Internal,rw,0,65535,0,1,-,Read and write U16 at RAM address.
RamU32,0x2130,4,VAR,UNSIGNED32,Internal,rw,0,4294967295,0,1,-,Read and write U32 at RAM address.
EepromWrite,0x2130,5,VAR,UNSIGNED32,Internal,wo,0,4294967295,-,1,-,"Writes a value to selected address in EEPROM:

       <UL type=""disc"">

         <LI>HighWord = Address in EEPROM (0 -> (EEPROM size-1))</LI>

         <LI>LowWord = Value</LI>

       </UL>

       <p>The EEPROM size is 8192 bytes. </p>

       <p>Data is stored in the EEPROM using segments with the following properties: </p>

       <p>The first byte of each eeprom segment is the length and the two last is the checksum. </p>

       <p>The odd checksum is stored in the last odd address and the even checksum on the last even address. </p>

       <p>The length can be between 1 and 127 bytes. Not all segments have a checksum. </p>

       <p>The highest bit in the size byte is set if the segment contains default data. </p>

       <p>The data is stored in an eeprom segment according to the following example table: </p>

        <table id=""ET"">

          <tr id=""ETHead""> <th>Type</th>          <th>Address</th>   <th>Data</th>                           <th>Description</th></tr>

          <tr id=""ETRow"">  <td>Size</td>          <td>0</td>         <td>4h</td>                             <td id=""ETData"">Noumber of bytes of data.</td></tr>

          <tr id=""ETRow"">  <td>Data_1</td>        <td>1</td>         <td>15h</td>                            <td id=""ETData"">Data</td></tr>

          <tr id=""ETRow"">  <td>Data_2</td>        <td>2</td>         <td>E0h</td>                            <td id=""ETData"">Data</td></tr>

          <tr id=""ETRow"">  <td>Data_3</td>        <td>3</td>         <td>A2h</td>                            <td id=""ETData"">Data</td></tr>

          <tr id=""ETRow"">  <td>Data_3</td>        <td>4</td>         <td>10h</td>                            <td id=""ETData"">Data</td></tr>

          <tr id=""ETRow"">  <td>Odd checksum</td>  <td>5</td>         <td>100h - (15h + A2h) = 49h </td>      <td id=""ETData"">Negated check sum of odd bytes (including size if in odd address).</td></tr>

          <tr id=""ETRow"">  <td>Even checksum</td> <td>6</td>         <td>100h - (4h + E0h + 10h) = 0Ch </td> <td id=""ETData"">Negated check sum of even bytes (including size if in even address).</td></tr>

        </table>"
SetEepromReadAddress,0x2130,6,VAR,UNSIGNED16,Internal,wo,0,0x2000U  - 1,0,1,-,Writes the EEPROM address (16 bits) to be read with EepromRead (2130h:7).
EepromRead,0x2130,7,VAR,UNSIGNED8,Internal,ro,0,255,0,1,-,Reads the value (8 bits) in the EEPROM address selected by SetEepromReadAddress (2130h:6).
RamU16IncrementPointer,0x2130,8,VAR,UNSIGNED16,Internal,ro,0,65535,0,1,-,Reads U16 at RAM address and and increase Ram address with one word.
UsedEepromBytes,0x2130,9,VAR,UNSIGNED16,Internal,ro,0,65535,0,1,-,Numbers of bytes used of eeprom data.
LastSubIndex,0x2135,0,VAR,UNSIGNED8,Operator,ro,0,255,0,1,-,Numbers of entries.
PWMLevelU,0x2135,6,VAR,UNSIGNED16,Internal,ro,0,65535,0,1,see Description,Actual PWM Level on U-phase.
PWMLevelV,0x2135,7,VAR,UNSIGNED16,Internal,ro,0,65535,0,1,see Description,Actual PWM Level on V-phase.
PWMLevelW,0x2135,8,VAR,UNSIGNED16,Internal,ro,0,65535,0,1,see Description,Actual PWM Level on W-phase.
Period,0x2135,9,VAR,UNSIGNED16,Internal,ro,0,65535,0,1,see Description,Actual PWM period.
LastSubIndex,0x2140,0,VAR,UNSIGNED8,Operator,ro,0,255,0,1,-,Numbers of entries.
Speed,0x2140,1,ARRAY,UNSIGNED16,OEM,rw,0,65535,,1,Rpm,"<table id=""ET"">

          <tr id=""ETHead""> <th>Sub index</th> <th>Name</th>               <th>Description</th></tr>

          <tr id=""ETRow"">  <td>1</td>         <td>BPC Speed 1</td>        <td id=""ETData"">Must be smaller than speed 2.</td></tr>

          <tr id=""ETRow"">  <td>2</td>         <td>BPC Speed 2</td>        <td id=""ETData"">Must be larger than speed 1 and smaller than 3.</td></tr>

          <tr id=""ETRow"">  <td>3</td>         <td>BPC Speed 3</td>        <td id=""ETData"">Must be larger than speed 2 and smaller than 4.</td></tr>

          <tr id=""ETRow"">  <td>4</td>         <td>BPC Speed 4</td>        <td id=""ETData"">Must be larger than speed 3 and smaller than 5.</td></tr>

          <tr id=""ETRow"">  <td>5</td>         <td>BPC Speed 5</td>        <td id=""ETData"">Must be larger than speed 4 and smaller than 6.</td></tr>

          <tr id=""ETRow"">  <td>6</td>         <td>BPC Speed 6</td>        <td id=""ETData"">Must be larger than speed 5 and smaller than 7.</td></tr>

          <tr id=""ETRow"">  <td>7</td>         <td>BPC Speed 7</td>        <td id=""ETData"">Must be larger than speed 6 and smaller than 8.</td></tr>

          <tr id=""ETRow"">  <td>8</td>         <td>BPC Speed 8</td>        <td id=""ETData"">Must be larger than speed 8.</td></tr>

        </table>"
LastSubIndex,0x2141,0,VAR,UNSIGNED8,Operator,ro,0,255,0,1,-,Numbers of entries.
Current,0x2141,1,ARRAY,UNSIGNED16,OEM,rw,0,65535,,1,Arms,"<table id=""ET"">

          <tr id=""ETHead""> <th>Sub index</th> <th>Name</th>               <th>Description</th></tr>

          <tr id=""ETRow"">  <td>1</td>         <td>BPC Current 1</td>        <td id=""ETData"">Current at Speed 1 and below (0x2140:1)</td></tr>

          <tr id=""ETRow"">  <td>2</td>         <td>BPC Current 2</td>        <td id=""ETData"">Current at Speed 2 (0x2140:2)</td></tr>

          <tr id=""ETRow"">  <td>3</td>         <td>BPC Current 3</td>        <td id=""ETData"">Current at Speed 3 (0x2140:3)</td></tr>

          <tr id=""ETRow"">  <td>4</td>         <td>BPC Current 4</td>        <td id=""ETData"">Current at Speed 4 (0x2140:4)</td></tr>

          <tr id=""ETRow"">  <td>5</td>         <td>BPC Current 5</td>        <td id=""ETData"">Current at Speed 5 (0x2140:5)</td></tr>

          <tr id=""ETRow"">  <td>6</td>         <td>BPC Current 6</td>        <td id=""ETData"">Current at Speed 6 (0x2140:6)</td></tr>

          <tr id=""ETRow"">  <td>7</td>         <td>BPC Current 7</td>        <td id=""ETData"">Current at Speed 7 (0x2140:7)</td></tr>

          <tr id=""ETRow"">  <td>8</td>         <td>BPC Current 8</td>        <td id=""ETData"">Current at Speed 8 and above (0x2140:8)</td></tr>

        </table>"
LastSubIndex,0x2142,0,VAR,UNSIGNED8,Operator,ro,0,255,0,1,-,Numbers of entries.
BpcIgain,0x2142,2,VAR,INTEGER16,OEM,rw,-32768,32767,,1,see Description,"Best performance curve PI-controller I-gain <br/>

       1 = 256"
InternalCurrentReference,0x2142,3,VAR,INTEGER16,OEM,rw,-32768,32767,0,1,Arms,"Internal SW variable, input current reference to the best performance 

       curve PI-controller. In BPC_PDO_MODE the absolute value of the written 

       value is used (only in this mode it is possible to write the value)."
ReductionFactor,0x2142,4,VAR,INTEGER16,OEM,rw,1,256,,1,see Description,"In BPC Reduction Mode this value is used to reduce the Current in the BPC-curve. <br/><br/>

       InternalCurrentReference = InternalCurrentReference * ReductionFactor / 256 <br/><br/>

       ReductionFactor = 256 means no reduction."
LastSubIndex,0x2150,0,VAR,UNSIGNED8,Operator,ro,0,255,0,1,-,Numbers of entries.
ForcedReverseSpeed,0x2150,1,VAR,INTEGER16,OEM,rw,-32765,32765,-250,1,Rpm,Speed that is used when ForcedReverse command is pressed.
ForcedReverseTimeout,0x2150,2,VAR,UNSIGNED16,OEM,rw,0,8191,5000u,1,ms,Maximum time that ForcedReverse is allowed to run.
ForcedReverseEnable,0x2150,3,VAR,UNSIGNED8,OEM,rw,0,1,0U,1,-,"Activate/Deactivate ForcedReverse functionality <br/>

        0 = inactive <br/>

        1 = active"
ForcedReverseAcceleration,0x2150,4,VAR,UNSIGNED8,OEM,rw,0,255,30,1,Rpm/20ms,Accelaration when ForcedReverse is active.
ForcedReverseDeceleration,0x2150,5,VAR,UNSIGNED8,OEM,rw,0,255,30u,1,Rpm/20ms,Decelaration when ForcedReverse is active.
ForcedBrakeEnable,0x2150,6,VAR,UNSIGNED8,OEM,rw,0,1,0U,1,-,"Activate/Deactivate ForcedBrake functionality <br/>

        0 = inactive <br/>

        1 = active"
LastSubIndex,0x2200,0,VAR,UNSIGNED8,Operator,ro,0,255,0,1,-,Numbers of entries.
PGain,0x2200,1,VAR,INTEGER16,Operator,rw,-32768,32767,,1,TBD,Position controller proportional gain.
IGain,0x2200,2,VAR,INTEGER16,Operator,rw,-32768,32767,,1,TBD,Position controller integral gain.
OutputMaxLimit,0x2200,3,VAR,INTEGER16,Operator,rw,-32768,32767,,1,Rpm,"Output max limit from Position controller. <br/>

       Store and restart unit needed to update value of this parameter."
CommandSpeed,0x2200,4,VAR,INTEGER16,Operator,ro,-32768,32767,0,1,Rpm,CommandSpeed output from position PI-controller.
InternalPositionReference,0x2200,5,VAR,INTEGER16,Operator,ro,-1800,1800,-,0.1,Deg,Position reference used in position controller.
PositionRegIPart,0x2200,6,VAR,INTEGER16,Operator,ro,-1800,1800,-,0.1,Deg,Position controller I part.
LastSubIndex,0x2225,0,VAR,UNSIGNED8,Operator,ro,0,255,0,1,-,Numbers of entries.
MotorGearRatio,0x2225,1,VAR,INTEGER16,Operator,rw,-32768,32767,51,1,-,"Gear box ratio of motor, i.e. gearing from motor shaft to gear box shaft. <br/>

       Used for calculating total system gear ratio (i.e. motor shaft to steered wheel ratio) as: <br/><br/>

       System gear ratio = MotorGearRatio * <a href=""#SpeedAndPositionReferenceCalculation"">WheelGearRatioDividend</a> / 

       <a href=""#SpeedAndPositionReferenceCalculation"">WheelGearRatioDivisor</a> <br/><br/>

       The sign of MotorGearRatio shall reflect the rotation direction of the motor compared to the rotation direction of the steered wheel.<br/>"
WheelGearRatioDividend,0x2225,2,VAR,INTEGER16,Operator,rw,1,32767,3725,1,-,"Wheel gear ratio dividend. I.e. the dividend of the fraction that specifies the ratio of any gearing after the gear box. <br/>

       Example: A simple two wheel gear is attached after the gear box. The small diameter wheel is driven by the gearbox output shaft. 

       Small wheel diameter is 38 and the large wheel diameter is 156. With the formula dividend/divisor, the dividend is 156 and the divisor is 38.<br/>

       Used for calculating total system gear ration (i.e. motor shaft to steered wheel ratio) as: <br/><br/>

       System gear ratio = <a href=""#SpeedAndPositionReferenceCalculation"">MotorGearRatio</a> * WheelGearRatioDividend / 

       <a href=""#SpeedAndPositionReferenceCalculation"">WheelGearRatioDivisor</a> <br/>"
WheelGearRatioDivisor,0x2225,3,VAR,INTEGER16,Operator,rw,1,32767,1000,1,-,"Wheel gear ratio of divisor.  I.e. the divisor of the fraction that specifies the ratio of any gearing after the gear box. <br/>

       Example: A simple two wheel gear is attached after the gear box. The small diameter wheel is driven by the gearbox output shaft. 

       Small wheel diameter is 38 and the large wheel diameter is 156. With the formula dividend/divisor, the dividend is 156 and the divisor is 38.<br/>

       Used for calculating total system gear ration (i.e. motor shaft to steered wheel ratio) as: <br/><br/>

       System gear ratio = <a href=""#SpeedAndPositionReferenceCalculation"">MotorGearRatio</a> * 

       <a href=""#SpeedAndPositionReferenceCalculation"">WheelGearRatioDividend</a> / WheelGearRatioDivisor <br/>"
ActualPosition,0x2225,11,VAR,INTEGER16,Operator,rw,-1800,1800,-,0.1,Deg,Actual position of steered wheel.
PositionInternalScale,0x2225,12,VAR,INTEGER16,Operator,ro,-32768,32767,-,1,see Description,"Actual position of steered wheel in internal scale. <br/><br/>

       2^16 = 2 * Pi * Rad."
LastSubIndex,0x2500,0,VAR,UNSIGNED8,Operator,ro,0,255,0,1,-,Numbers of entries.
OverSpeedLimitForward,0x2500,1,VAR,INTEGER16,Operator,rw,0,32767,8500,1,Rpm,Limit for when indepedent supervision module will set high speed event.
OverSpeedLimitReverse,0x2500,2,VAR,INTEGER16,Operator,rw,-32768,0,-8500,1,Rpm,Limit for when indepedent supervision module will set high speed event.
CurrentSpeedLimitForward,0x2500,3,VAR,INTEGER16,Operator,ro,0,32767,,1,Rpm,The limit that is used at this moment. If this limit is smaller than OverSpeedLimitForward there is either a Forced Braking in effect or a tempary speed limit has been set.
CurrentSpeedLimitReverse,0x2500,4,VAR,INTEGER16,Operator,ro,0,32767,,1,Rpm,The limit that is used at this moment. If this limit is smaller than OverSpeedLimitReverse there is either a Forced Braking in effect or a tempary speed limit has been set.
ACCurrentControlCurrentLimit,0x2500,5,VAR,UNSIGNED8,Operator,rw,0,100,0u  ,1,%,"Defines the level, in percentage of <a href=""#ApplicationSwInformation.HwDetectedMaxCurrent"">HwDetectedMaxCurrent</a>, 

       that the difference between the reference current (<a href=""#TorqueReferenceManager.CurrentReference"">CurrentReference</a>) 

       and the measured current (<a href=""#MotorMeasurements.RmsMotorCurrent"">RmsMotorCurrent</a>)  

       needs to be above in order to detect ACCurrentControlError-event. <br/>

       Setting this parameter to Zero will turn off detection of ACCurrentControlError-event.<br/>

       See event description for more information regarding event."
ACCurrentControlUpeakLimit,0x2500,6,VAR,UNSIGNED8,Operator,rw,0,100,75u,1,%,"Defines the level, in percentage of <a href=""#MotorVoltageControl.UPeakLimit"">UPeakLimit</a>, 

       that <a href=""#MotorVoltageControl.UPeakNormalized"">UPeakNormalized</a> needs to be below in order to 

       detect ACCurrentControlError-event. <br/>

       See event description for more information regarding event."
ACCurrentControlDcVoltageLimit,0x2500,7,VAR,UNSIGNED8,Operator,rw,0,100,25u,1,%,"Defines the level, in percentage of <a href=""#DcBus.NominalVoltage"">NominalVoltage</a>, 

       that <a href=""#DcBus.FilteredVoltage"">FilteredVoltage</a> needs to be above in order to 

       detect ACCurrentControlError-event. <br/>

       See event description for more information regarding event."
ACCurrentMeasSpeedLimit,0x2500,8,VAR,INTEGER16,Operator,rw,0,32767,0,1,Rpm,"Defines the speed limit used in ACCurrentMeasPlausibilityError-event detection.<br/> 

       Setting this parameter to Zero will turn off detection of ACCurrentMeasPlausibilityError-event.<br/>

       See event description for more information regarding event."
ACCurrentMeasCurrentLimit,0x2500,9,VAR,UNSIGNED8,Operator,rw,0,100,3u,1,%,"Defines the level, in percentage of <a href=""#ApplicationSwInformation.HwDetectedMaxCurrent"">HwDetectedMaxCurrent</a>, 

       that <a href=""#MotorMeasurements.RmsMotorCurrent"">RmsMotorCurrent</a> needs to be below in order to 

       detect ACCurrentMeasPlausibilityError-event. <br/>

       See event description for more information regarding event."
ACCurrentMeasUpeakLimit,0x2500,10,VAR,UNSIGNED8,Operator,rw,0,100,3u,1,%,"Defines the level, in percentage of <a href=""#MotorVoltageControl.UPeakLimit"">UPeakLimit</a>, 

       that <a href=""#MotorVoltageControl.UPeakNormalized"">UPeakNormalized</a> needs to be above in order to 

       detect ACCurrentMeasPlausibilityError-event. <br/>

       See event description for more information regarding event."
ACCurrentMeasDcVoltageLimit,0x2500,11,VAR,UNSIGNED8,Operator,rw,0,100,25u,1,%,"Defines the level, in percentage of <a href=""#DcBus.NominalVoltage"">NominalVoltage</a>, 

       that <a href=""#DcBus.FilteredVoltage"">FilteredVoltage</a> needs to be above in order to 

       detect ACCurrentMeasPlausibilityError-event. <br/>

       See event description for more information regarding event."
TestMode,0x2500,12,VAR,UNSIGNED8,Internal,rw,0,1,0,1,-,"For testability, set to 1 to set special test mode. In special test mode the events ACCurrentControlError and ACCurrentMeasPlausibilityError

       will be evaluated even if DisableCurrentControl is set to 1."
LastSubIndex,0x2640,0,VAR,UNSIGNED8,Operator,ro,0,255,0,1,-,Numbers of entries.
PGain,0x2640,1,VAR,INTEGER16,OEM,rw,-32768,32767,200,1,-,Proportional gain of the PID-controller.
IGain,0x2640,2,VAR,INTEGER16,OEM,rw,-32768,32767,10,1,-,Intergral gain of the PID-controller.
DGain,0x2640,3,VAR,INTEGER16,OEM,rw,-32768,32767,200,1,-,"Derivative gain of the PID-controller. The <a href=""#DCVoltageControl.VoltageError"">VoltageError</a> is high pass filtered 

        with the <a href=""#DCVoltageControl.DErrorFilterGain"">DErrorFilterGain</a> then multiplied with 

        <a href=""#DCVoltageControl.DGainSpeedComp"">DGainSpeedComp</a>. 

        The result is <a href=""#DCVoltageControl.DPart"">DPart</a> which is one part of the total output (<a href=""#DCVoltageControl.DcControllerOutput"">DcControllerOutput</a>)."
PIErrorFilterGain,0x2640,4,VAR,INTEGER16,OEM,rw,0,16384,16384,1,-,"The filter gain for low pass filtering of the voltage error input to the PI-controller. </br></br>

        FilteredValue = FilteredValue - FilterGain / 16384 * (RawValue - FilteredValue) </br>

        <ul>

         <li>FilterGain = 1, means slowest possible filter</li>

         <li>FilterGain = 16384, means no filtering</li>

         <li>FilterGain = 0, means filter froze on last output</li>

        </ul>"
DErrorFilterGain,0x2640,5,VAR,INTEGER16,OEM,rw,0,16384,2000,1,-,"The filter gain for high pass filtering of the <a href=""#DCVoltageControl.VoltageError"">VoltageError</a> used to created the 

        <a href=""#DCVoltageControl.DPart"">DPart</a>. <br/></br>

        FilteredValue = RawValue - (FilteredValue - FilterGain / 16384 * (RawValue - FilteredValue)) </br>

        <ul>

         <li>FilterGain = 1, means slowest possible filter</li>

         <li>FilterGain = 16384, means no filtering</li>

         <li>FilterGain = 0, means filter froze on last output</li>

        </ul>"
VoltageError,0x2640,6,VAR,INTEGER16,OEM,ro,-32768,32767,-,0.01,Vdc,"Voltage error created as measured dc voltage minus <a href=""#DCVoltageControl.CommandVoltageRamped"">CommandVoltageRamped</a>"
PPart,0x2640,7,VAR,INTEGER16,OEM,ro,-32768,32767,-,1,Arms,Proportional part of the PI-regulator.
IPart,0x2640,8,VAR,INTEGER16,OEM,ro,-32768,32767,-,1,Arms,Integrational part of the PI-regulator.
DPart,0x2640,9,VAR,INTEGER16,OEM,ro,-32768,32767,-,1,Arms,The ActualVoltage minus FiltedVoltage.<br/>
MaxCommandVoltageChange,0x2640,10,VAR,INTEGER16,OEM,rw,0,32767,0,1,see Description,"Specifies the maximum allowed ramp on Command voltage. If a bigger 

        step is requested it will work like a ramp until requested value has 

        been reached. <br/>

        Setting this parameter to Zero disables ramping.<br/><br/>

        The value is scaled like this, 1 max voltage change means: <br/>

        ((1 * 2^7 / (10 * 2^16))*4000Hz)= 0,78V/s"
CommandVoltageRamped,0x2640,11,VAR,INTEGER16,OEM,ro,-32768,32767,-,0.01,Vdc,"<a href=""#ApplicationCommands.CommandVoltage"">ApplicationCommands, CommandVoltage</a> ramped with

        <a href=""#DCVoltageControl.MaxCommandVoltageChange"">MaxCommandVoltageChange</a>."
OutputReductionSpeedLimit,0x2640,12,VAR,INTEGER16,OEM,rw,0,32767,1200,1,Rpm,"When the absolute value of the speed is above this value all controller gains are compensated (reduced) to 

        keep constant gain from dc voltage error to output torque. <br/>

        Setting this parameter to Zero disables reduction.<br/>

        Compensated gains are calculated as: <br/>

        <ul>

        CompensatedGain = UncompensatedGain * OutputReductionSpeedLimit / ActualSpeed

        </ul>"
PGainSpeedComp,0x2640,13,VAR,INTEGER16,OEM,ro,-32768,32767,-,1,-,"Speed compensated <a href=""#DCVoltageControl.PGain"">PGain</a>."
IGainSpeedComp,0x2640,14,VAR,INTEGER16,OEM,ro,-32768,32767,-,1,-,"Speed compensated <a href=""#DCVoltageControl.IGain"">IGain</a>."
DGainSpeedComp,0x2640,15,VAR,INTEGER16,OEM,ro,-32768,32767,-,1,-,"Speed compensated <a href=""#DCVoltageControl.DGain"">DGain</a>."
DCVoltageControlOutput,0x2640,16,VAR,INTEGER16,OEM,ro,-32768,32767,-,1,,"Output from DC voltage controller. 

        The DC voltage control output is the sum of Ppart, Ipart and Dpart.  </br>"
LastSubIndex,0x2800,0,VAR,UNSIGNED8,Operator,ro,0,255,0,1,-,Numbers of entries.
LogWithPeriod,0x2800,1,VAR,UNSIGNED16,Internal,rw,0,65535,0,1,see Description,"<p>Period with which interval selected variables will be logged.</p>

       When writing to this subindex logging starts. 

       When logging is finished value will return to 0. 

       All 8kwords of logged data will be stored in RAM as S16. 

       Data will be interleaved, if 3 variables are logged, each consecutive sample from each

       channel will be found at every 3:rd position in RAM. <br/><br/>

       T = LogWithPeriod * 250us"
Index0,0x2800,2,VAR,UNSIGNED16,Internal,rw,0,65535,0,1,-,"Index of first variable that should be logged. If 0 or invalid no data will be logged

       for this channel."
Subindex0,0x2800,3,VAR,UNSIGNED16,Internal,rw,0,65535,0,1,-,"Subindex of first variable that should be logged. If 0 or invalid no data will be logged

       for this channel."
Index1,0x2800,4,VAR,UNSIGNED16,Internal,rw,0,65535,0,1,-,"Index of second variable that should be logged. If 0 or invalid no data will be logged

       for this channel."
Subindex1,0x2800,5,VAR,UNSIGNED16,Internal,rw,0,65535,0,1,-,"Subindex of second variable that should be logged. If 0 or invalid no data will be logged

       for this channel."
Index2,0x2800,6,VAR,UNSIGNED16,Internal,rw,0,65535,0,1,-,"Index of third variable that should be logged. If 0 or invalid no data will be logged

       for this channel."
Subindex2,0x2800,7,VAR,UNSIGNED16,Internal,rw,0,65535,0,1,-,"Subindex of third variable that should be logged. If 0 or invalid no data will be logged

       for this channel."
Index3,0x2800,8,VAR,UNSIGNED16,Internal,rw,0,65535,0,1,-,"Index of forth variable that should be logged. If 0 or invalid no data will be logged

       for this channel."
Subindex3,0x2800,9,VAR,UNSIGNED16,Internal,rw,0,65535,0,1,-,"Subindex of forth variable that should be logged. If 0 or invalid no data will be logged

       for this channel."
TransientRecorderLength,0x2800,33,VAR,UNSIGNED16,Internal,ro,0,65535,0,1,-,Length of data stored in RAM using the transient recorder.
TransientRecorderStartAddress,0x2800,34,VAR,UNSIGNED32,Internal,ro,0,4294967295,0,1,-,Startaddress for data stored in RAM using the transient recorder.
LogFrequency,0x2800,36,VAR,UNSIGNED16,Internal,ro,0,4000,0,1,Hz,"Shows the logging frequency that was used at last transient recorder. The 

       value is calculated by taking 4000Hz/LogWithPeriod."
TriggerMode,0x2800,37,VAR,UNSIGNED16,Internal,rw,0,6,0,,,"<table id=""ET"">

       <tr id=""ETHead""><th>Value</th><th>Trigger Mode</th></tr>

       <tr id=""ETRow""><td id=""ETData"">0</td><td id=""ETData"">Normal (default)</td></tr>

       <tr id=""ETRow""><td id=""ETData"">1</td><td id=""ETData"">Greater Than (sampled value greater than TriggerValue) </td></tr>

       <tr id=""ETRow""><td id=""ETData"">2</td><td id=""ETData"">Less Than (sampled value less than TriggerValue) </td></tr>

       <tr id=""ETRow""><td id=""ETData"">3</td><td id=""ETData"">Equal To (sampled value equal to TriggerValue) </td></tr>

       <tr id=""ETRow""><td id=""ETData"">4</td><td id=""ETData"">Internal Trigger (call in SW)</td></tr>

       <tr id=""ETRow""><td id=""ETData"">5</td><td id=""ETData"">External Trigger</td></tr>

       <tr id=""ETRow""><td id=""ETData"">6</td><td id=""ETData"">Change in ErrorBitField</td></tr>

       </table><br>"
TriggerValue,0x2800,38,VAR,INTEGER32,Internal,rw,-32768,65535,0,,,"This is the value that first value of the sampled values should be compared against. If this TriggerValue

        is greater than 32767 it will treat the sampled value as an unsigned 16-bit integer else it will be treated

        as a signed 16-bit integer."
TriggerValueIsUnsigned,0x2800,39,VAR,UNSIGNED8,Internal,rw,0,1,0,,,Set this to 1 to indiciate that the TriggerValue should be treated as an unsigned value.
TriggerDelay,0x2800,40,VAR,UNSIGNED32,Internal,rw,,,200,,,This is the delay in number of samples from the trigger event until sampling stops in the transient recorder.
StoppedAt,0x2800,41,VAR,UNSIGNED32,Internal,ro,,,,,,This is the position where the recording stopped sampling.
RunAtReset,0x2800,42,VAR,UNSIGNED8,Internal,rw,0,1,0,,,Set this to 1 to start recording after reset. It will start recording after start-functions are executed.
LastLogWithPeriod,0x2800,43,VAR,UNSIGNED16,Internal,ro,0,1,0,,,Last value written to LogWithPeriod.
LastSubIndex,0x2850,0,VAR,UNSIGNED16,Service,rw,0,65535,0,1,-,By writng a 2 to this index the operational data log is cleared.
PowerStageTempLogData,0x2850,1,ARRAY,UNSIGNED32,Service,ro,0,4294967295,0,1,incs,"<p>Count for each operational point in interval specified in <a href=""#PowerStageTempLogAxis"">PowerStageTempLogAxis, PowerStageTempLogAxisValues</a>.</p>

       <p>Count is incremented every second when drive enabled and the log is stored in eeprom every ten minute.</p>"
LastSubIndex,0x2851,0,VAR,UNSIGNED16,Service,ro,0,65535,0,1,-,Number intervalls in array.
PowerStageTempLogAxisValues,0x2851,1,ARRAY,INTEGER16,Service,ro,-32768,32767,0,1,degC,"<p>Temperature range for data.</p>

       <p>Data range specified in appl_setup.h and is defined at compile time, i.e. stored in flash.</p>"
LastSubIndex,0x2860,0,VAR,UNSIGNED16,Service,rw,0,65535,0,1,-,By writitng a 2 to this index the operational data log is cleared.
MotorTempLogData,0x2860,1,ARRAY,UNSIGNED32,Service,ro,0,4294967295,0,1,incs,"<p>Count for each operational point in interval specified in <a href=""#MotorTempLogAxis"">MotorTempLogAxis, MotorTempLogAxisValues</a>.</p>

       <p>Count is incremented every second when drive enabled and the log is stored in eeprom every ten minute.</p>"
LastSubIndex,0x2861,0,VAR,UNSIGNED16,Service,ro,0,65535,0,1,-,Number intervalls in array.
MotorTempLogAxisValues,0x2861,1,ARRAY,INTEGER16,Service,ro,-32768,32767,0,1,degC,"<p>Temperature range for data.</p>

       <p>Data range specified in appl_setup.h and is defined at compile time, i.e. stored in flash.</p>"
LastSubIndex,0x2900,0,VAR,UNSIGNED8,Operator,ro,0,255,0,1,-,Numbers of entries.
ClearLog,0x2900,1,VAR,INTEGER16,Service,wo,0,2,-,1,-,Must write 2 to clear log. To avoid clearing by mistake.
LastSubIndex,0x2901,0,VAR,UNSIGNED8,Service,ro,0,255,0,1,-,Numbers of entries.
SpeedAxisValues,0x2901,1,ARRAY,INTEGER16,Service,ro,-32768,32767,0,1,Rpm,"Values of speed along the x-axis. These values are constant, based on the configuration during build."
LastSubIndex,0x2902,0,VAR,UNSIGNED8,Service,ro,0,255,0,1,-,Numbers of entries.
CurrentAxisValues,0x2902,1,ARRAY,INTEGER16,Service,ro,-32768,32767,0,1,Arms,"Values of RMS current along the y-axis. These values are constant, based on the configuration during build."
LastSubIndex,0x2910,0,VAR,UNSIGNED8,Service,ro,0,255,0,1,-,Numbers of entries.
SpeedPoint,0x2910,1,ARRAY,UNSIGNED16,Service,ro,0,65535,0,1,counts,"Number of hits for the operating point this member represent.

        See also <a href=""#OperationDataLog""> what it represents</a>."
LastSubIndex,0x2911,0,VAR,UNSIGNED8,Service,ro,0,255,0,,,Numbers of entries.
SpeedPoint,0x2911,1,ARRAY,UNSIGNED16,Service,ro,0,65535,0,1,incs,"Number of hits for the operating point this member represent.

        See also <a href=""#OperationDataLog""> what it represents</a>."
LastSubIndex,0x2912,0,VAR,UNSIGNED8,Service,ro,0,255,0,,,Numbers of entries.
SpeedPoint,0x2912,1,ARRAY,UNSIGNED16,Service,ro,0,65535,0,1,incs,"Number of hits for the operating point this member represent.

        See also <a href=""#OperationDataLog""> what it represents</a>."
LastSubIndex,0x2913,0,VAR,UNSIGNED8,Service,ro,0,255,0,,,Numbers of entries.
SpeedPoint,0x2913,1,ARRAY,UNSIGNED16,Service,ro,0,65535,0,1,incs,"Number of hits for the operating point this member represent.

        See also <a href=""#OperationDataLog""> what it represents</a>."
LastSubIndex,0x2914,0,VAR,UNSIGNED8,Service,ro,0,255,0,,,Numbers of entries.
SpeedPoint,0x2914,1,ARRAY,UNSIGNED16,Service,ro,0,65535,0,1,incs,"Number of hits for the operating point this member represent.

        See also <a href=""#OperationDataLog""> what it represents</a>."
LastSubIndex,0x2915,0,VAR,UNSIGNED8,Service,ro,0,255,0,,,Numbers of entries.
SpeedPoint,0x2915,1,ARRAY,UNSIGNED16,Service,ro,0,65535,0,1,incs,"Number of hits for the operating point this member represent.

        See also <a href=""#OperationDataLog""> what it represents</a>."
LastSubIndex,0x2916,0,VAR,UNSIGNED8,Service,ro,0,255,0,,,Numbers of entries.
SpeedPoint,0x2916,1,ARRAY,UNSIGNED16,Service,ro,0,65535,0,1,incs,"Number of hits for the operating point this member represent.

        See also <a href=""#OperationDataLog""> what it represents</a>."
LastSubIndex,0x2917,0,VAR,UNSIGNED8,Service,ro,0,255,0,,,Numbers of entries.
SpeedPoint,0x2917,1,ARRAY,UNSIGNED16,Service,ro,0,65535,0,1,incs,"Number of hits for the operating point this member represent.

        See also <a href=""#OperationDataLog""> what it represents</a>."
LastSubIndex,0x2918,0,VAR,UNSIGNED8,Service,ro,0,255,0,,,Numbers of entries.
SpeedPoint,0x2918,1,ARRAY,UNSIGNED16,Service,ro,0,65535,0,1,incs,"Number of hits for the operating point this member represent.

        See also <a href=""#OperationDataLog""> what it represents</a>."
LastSubIndex,0x2919,0,VAR,UNSIGNED8,Service,ro,0,255,0,,,Numbers of entries.
SpeedPoint,0x2919,1,ARRAY,UNSIGNED16,Service,ro,0,65535,0,1,incs,"Number of hits for the operating point this member represent.

        See also <a href=""#OperationDataLog""> what it represents</a>."
LastSubIndex,0x291A,0,VAR,UNSIGNED8,Service,ro,0,255,0,,,Numbers of entries.
SpeedPoint,0x291A,1,ARRAY,UNSIGNED16,Service,ro,0,65535,0,1,incs,"Number of hits for the operating point this member represent.

        See also <a href=""#OperationDataLog""> what it represents</a>."
LastSubIndex,0x2A00,0,VAR,UNSIGNED8,Operator,ro,0,255,0,1,-,Numbers of entries.
ClearFreezeFrames,0x2A00,1,VAR,INTEGER16,Service,wo,0,2,-,1,-,"Must write 2 to clear Freeze Frames to avoid clearing by mistake. <br/>

        <b>Description of Freeze Frames</b><br/>

        Up to 20 Freeze Frames are stored in Eeprom.<br/>

        Any event can be configured to store a Freeze Frame when detected.<br/>

        See <a href=""#FreezeFrameEventNumber"">FreezeFrameEventNumber, EventNumber</a> to <a href=""#FreezeFramePcbTemp"">FreezeFramePcbTemp, PcbTemp</a> 

        for information about and access to data stored in the Freeze Frames.<br/>

        <b>Description of Freeze Frames Filter</b><br/>

        The storing of freeze frames are filtered in order to create a longer history

        of information.<br/>

        If same event has requested freeze frames within 10 s, only the first is stored.<br/>

        If same event has requested freeze frames within 1 h, only the counter is increased, no new information

        is stored.<br/>

        <b>Priority to find frame to store in:</b><br/>

        <ul>

        <li>1 = Use empty frame</li> 

        <li>2 = If one event has 5 or more frames use oldest</li> 

        <li>3 = Use oldest of all frames</li> 

       </ul>"
NumberOfFreezeFrames,0x2A01,0,VAR,UNSIGNED8,Service,ro,0,255,0,1,-,Numbers of entries.
EventNumber,0x2A01,1,ARRAY,UNSIGNED16,Service,ro,0,65535,0,1,-,"EventNumber.<br/>

        See <a href=""#FreezeFrames"">FreezeFrames, ClearFreezeFrames</a> for a description of how freeze frames work."
NumberOfFreezeFrames,0x2A02,0,VAR,UNSIGNED8,Service,ro,0,255,0,1,-,Numbers of entries.
Counter,0x2A02,1,ARRAY,UNSIGNED16,Service,ro,0,65535,0,1,incs,"Counter.<br/>

        See <a href=""#FreezeFrames"">FreezeFrames, ClearFreezeFrames</a> for a description of how freeze frames work."
NumberOfFreezeFrames,0x2A03,0,VAR,UNSIGNED8,Service,ro,0,255,0,1,-,Numbers of entries.
TimeStamp,0x2A03,1,ARRAY,UNSIGNED32,Service,ro,0,4294967295,0,1,s,"TimeStamp.<br/>

        See <a href=""#FreezeFrames"">FreezeFrames, ClearFreezeFrames</a> for a description of how freeze frames work."
NumberOfFreezeFrames,0x2A04,0,VAR,UNSIGNED8,Service,ro,0,255,0,1,-,Numbers of entries.
RotorSpeed,0x2A04,1,ARRAY,INTEGER16,Service,ro,-32768,32767,0,1,Rpm,"RotorSpeed.<br/>

        See <a href=""#FreezeFrames"">FreezeFrames, ClearFreezeFrames</a> for a description of how freeze frames work."
NumberOfFreezeFrames,0x2A05,0,VAR,UNSIGNED8,Service,ro,0,255,0,1,-,Numbers of entries.
RmsMotorCurrent,0x2A05,1,ARRAY,INTEGER16,Service,ro,-32768,32767,0,1,Arms,"RmsMotorCurrent.<br/>

        See <a href=""#FreezeFrames"">FreezeFrames, ClearFreezeFrames</a> for a description of how freeze frames work."
NumberOfFreezeFrames,0x2A06,0,VAR,UNSIGNED8,Service,ro,0,255,0,1,-,Numbers of entries.
DcBusVoltage,0x2A06,1,ARRAY,INTEGER16,Service,ro,-32768,32767,0,0.01,Vdc,"DcBusVoltage.<br/>

        See <a href=""#FreezeFrames"">FreezeFrames, ClearFreezeFrames</a> for a description of how freeze frames work."
NumberOfFreezeFrames,0x2A07,0,VAR,UNSIGNED8,Service,ro,0,255,0,1,-,Numbers of entries.
IqRef,0x2A07,1,ARRAY,INTEGER16,Service,ro,-32768,32767,0,1,Arms,"IqRef.<br/>

        See <a href=""#FreezeFrames"">FreezeFrames, ClearFreezeFrames</a> for a description of how freeze frames work."
NumberOfFreezeFrames,0x2A08,0,VAR,UNSIGNED8,Service,ro,0,255,0,1,-,Numbers of entries.
IdRef,0x2A08,1,ARRAY,INTEGER16,Service,ro,-32768,32767,0,1,Arms,"IdRef.<br/>

        See <a href=""#FreezeFrames"">FreezeFrames, ClearFreezeFrames</a> for a description of how freeze frames work."
NumberOfFreezeFrames,0x2A09,0,VAR,UNSIGNED8,Service,ro,0,255,0,1,-,Numbers of entries.
ActIq,0x2A09,1,ARRAY,INTEGER16,Service,ro,-32768,32767,0,1,Arms,"Actual Iq.<br/>

        See <a href=""#FreezeFrames"">FreezeFrames, ClearFreezeFrames</a> for a description of how freeze frames work."
NumberOfFreezeFrames,0x2A0A,0,VAR,UNSIGNED8,Service,ro,0,255,0,1,-,Numbers of entries.
ActId,0x2A0A,1,ARRAY,INTEGER16,Service,ro,-32768,32767,0,1,Arms,"Actual Id.<br/>

        See <a href=""#FreezeFrames"">FreezeFrames, ClearFreezeFrames</a> for a description of how freeze frames work."
NumberOfFreezeFrames,0x2A0B,0,VAR,UNSIGNED8,Service,ro,0,255,0,1,-,Numbers of entries.
UqRef,0x2A0B,1,ARRAY,INTEGER16,Service,ro,-32768,32767,0,1,see Description,"UqRef.<br/>

        See <a href=""#FreezeFrames"">FreezeFrames, ClearFreezeFrames</a> for a description of how freeze frames work. <br/><br/>

        16384 = Udc/&radic;<span style=""text-decoration:overline;"">2</span> VRMS (hsp) where

        Udc = 36, 48 or 80 V."
NumberOfFreezeFrames,0x2A0C,0,VAR,UNSIGNED8,Service,ro,0,255,0,1,-,Numbers of entries.
UdRef,0x2A0C,1,ARRAY,INTEGER16,Service,ro,-32768,32767,0,1,see Description,"UdRef.<br/>

        See <a href=""#FreezeFrames"">FreezeFrames, ClearFreezeFrames</a> for a description of how freeze frames work. <br/><br/>

        16384 = Udc/&radic;<span style=""text-decoration:overline;"">2</span> VRMS (hsp) where

        Udc = 36, 48 or 80 V."
NumberOfFreezeFrames,0x2A0D,0,VAR,UNSIGNED8,Service,ro,0,255,0,1,-,Numbers of entries.
MotorTemp,0x2A0D,1,ARRAY,INTEGER16,Service,ro,-256,254,0,1,degC,"Motor Temperature.<br/>

        See <a href=""#FreezeFrames"">FreezeFrames, ClearFreezeFrames</a> for a description of how freeze frames work."
NumberOfFreezeFrames,0x2A0E,0,VAR,UNSIGNED8,Service,ro,0,255,0,1,-,Numbers of entries.
PowerStageTemp,0x2A0E,1,ARRAY,INTEGER16,Service,ro,-256,254,0,1,degC,"PowerStage Temperature.<br/>

        See <a href=""#FreezeFrames"">FreezeFrames, ClearFreezeFrames</a> for a description of how freeze frames work."
NumberOfFreezeFrames,0x2A0F,0,VAR,UNSIGNED8,Service,ro,0,255,0,1,-,Numbers of entries.
PcbTemp,0x2A0F,1,ARRAY,INTEGER16,Service,ro,-256,254,0,1,degC,"Pcb Temperature.<br/>

        See <a href=""#FreezeFrames"">FreezeFrames, ClearFreezeFrames</a> for a description of how freeze frames work."
LastSubIndex,0x3002,0,VAR,UNSIGNED8,Service,rw,0,255,0,1,-,"<p>The entry at sub-index 0 contains the number of actual errors that are recorded starting at subindex 1.</p>

       <p>Writing a zero to sub-index 0 clears the error log (and event log).</p>

       <p>Subindex 0 must be read before any other subindex is read. Reading any other subindex before reading subindex

        will result in corrupt information since the error list is not generated before Subindex 0 is read.  </p>

        <p>Read this subindex only once before traversing the Indices related to the ErrorLog. DO NOT read this subindex during the traversal

        as this will regenerate the sorted list presented via these Indices. If an error occurs during the traversal an inconsistent view will

        result. </p>"
CanOpenErrorLog,0x3002,1,ARRAY,UNSIGNED32,Service,ro,0,4294967295,-,1,-,"<p>In this log the Emergency Error code is stored. See <a href=""#ErrorLogFirstTime"">ErrorLogFirstTime, ErrorFirstTime</a> and 

       <a href=""#ErrorLogLastTime"">ErrorLogLastTime, ErrorLastTime</a> for more information about the time of error.</p> 

       <p>Newest error is stored at sub-index 1, the older ones move down the list.</p>

       <p>Up to 20 errors are stored in the log.</p>

       <p>Subindex 0 in this Index must be read before any other subindex is read. Reading any other subindex before reading subindex

        will result in corrupt information since error list is not generated before Subindex 0 is read.

       </p>

       <p> If an event is configured as a warning and to be stored in the error log, there might be warnings in the error log. </p>"
LastSubIndex,0x3003,0,VAR,UNSIGNED8,Service,rw,0,255,0,1,-,"<p>The entry at sub-index 0 contains the number of actual errors that are recorded starting at subindex 1.</p>

       <p>Writing a zero to sub-index 0 clears the error log (and event log).</p>

       <p>See <a href=""#ErrorLogCopy"">ErrorLogCopy.LastSubIndex</a> for correct procedure to read Error Log.</p>"
ErrorFirstTime,0x3003,1,ARRAY,UNSIGNED32,Service,ro,0,4294967295,0,1,s,"<p>Newest error is stored at sub-index 1, the older ones move down the list. Time is related to TotalTimeSeconds</p>

       <p>Up to 20 errors are stored in the log.</p>

       <p>See <a href=""#ErrorLogCopy"">ErrorLogCopy.LastSubIndex</a> for correct procedure to read Error Log.</p>

       <p> If an event is configured as a warning and to be stored in the error log, there might be warnings in the error log. </p>"
LastSubIndex,0x3004,0,VAR,UNSIGNED8,Service,rw,0,255,0,1,-,"<p>The entry at sub-index 0 contains the number of actual errors that are recorded starting at subindex 1.</p>

       <p>Writing a zero to sub-index 0 clears the error log (and event log).</p>

       <p>See <a href=""#ErrorLogCopy"">ErrorLogCopy.LastSubIndex</a> for correct procedure to read Error Log.</p>"
ErrorLastTime,0x3004,1,ARRAY,UNSIGNED32,Service,ro,0,4294967295,0,1,s,"<p>Newest error is stored at sub-index 1, the older ones move down the list. Time is related to TotalTimeSeconds</p>

       <p>Up to 20 errors are stored in the log.</p>

       <p>See <a href=""#ErrorLogCopy"">ErrorLogCopy.LastSubIndex</a> for correct procedure to read Error Log.</p>

       <p> If an event is configured as a warning and to be stored in the error log, there might be warnings in the error log. </p>"
LastSubIndex,0x3005,0,VAR,UNSIGNED8,Service,rw,0,255,0,1,-,"<p>The entry at sub-index 0 contains the number of actual errors that are recorded starting at subindex 1.</p>

       <p>Writing a zero to sub-index 0 clears the error log (and event log).</p>

       <p>See <a href=""#ErrorLogCopy"">ErrorLogCopy.LastSubIndex</a> for correct procedure to read Error Log.</p>"
ErrorNrOfErrors,0x3005,1,ARRAY,UNSIGNED16,Service,ro,0,65535,0,1,incs,"<p>Newest error is stored at sub-index 1, the older ones move down the list.</p>

       <p>Up to 20 errors are stored in the log.</p>

       <p>See <a href=""#ErrorLogCopy"">ErrorLogCopy.LastSubIndex</a> for correct procedure to read Error Log.</p>

       <p> If an event is configured as a warning and to be stored in the error log, there might be warnings in the error log. </p>"
LastSubIndex,0x3006,0,VAR,UNSIGNED8,Service,rw,0,255,0,1,-,"<p>The entry at sub-index 0 contains the number of actual events that are recorded starting at subindex 1.</p>

       <p>Writing a zero to sub-index 0 clears the event log (and the error log).</p>

       <p>Subindex 0 must be read before any other subindex is read as it generates the sorted view of the events currently in the log.

       Reading any other subindex before reading subindex will result in corrupt information since error list is not generated before Subindex 0 is read. </p>

       <p>Read this subindex only once before traversing the Indices related to the EventLog. DO NOT read this subindex during the traversal

        as this will regenerate the sorted list presented via these Indices. If an event occurs during the traversal an inconsistent view will

        result.</p>

        </p>"
CanOpenEventLog,0x3006,1,ARRAY,UNSIGNED32,Service,ro,0,4294967295,0,1,-,"<p>In this log the Event Id is stored. See <a href=""#EventLogFirstTime"">EventLogFirstTime, FirstTime</a> and 

       <a href=""#EventLogLastTime"">EventLogLastTime, LastTime</a> for more information about the time of event.</p> 

       <p>Newest event is stored at sub-index 1, the older ones move down the list.</p>

       <p>Up to 20 events are stored in the log.</p>

       <p>Subindex 0 must be read before any other subindex is read. Reading any other subindex before reading subindex

        will result in corrupt information since error list is not generated before Subindex 0 is read. </p>"
LastSubIndex,0x3007,0,VAR,UNSIGNED8,Service,rw,0,255,0,1,-,"<p>The entry at sub-index 0 contains the number of actual events that are recorded starting at subindex 1.</p>

       <p>Writing a zero to sub-index 0 clears the event log (and the error log).</p>

       <p>See <a href=""#EventLog"">EventLog.LastSubIndex</a> for correct procedure to read Error Log.</p>"
FirstTime,0x3007,1,ARRAY,UNSIGNED32,Service,ro,0,4294967295,0,1,s,"<p>Newest event is stored at sub-index 1, the older ones move down the list. Time is related to TotalTimeSeconds</p>

       <p>Up to 20 events are stored in the log.</p>

       <p>See <a href=""#EventLog"">EventLog.LastSubIndex</a> for correct procedure to read Error Log.</p>"
LastSubIndex,0x3008,0,VAR,UNSIGNED8,Service,rw,0,255,0,1,-,"<p>The entry at sub-index 0 contains the number of actual events that are recorded starting at subindex 1.</p>

       <p>Writing a zero to sub-index 0 clears the event log (and the error log).</p>

       <p>See <a href=""#EventLog"">EventLog.LastSubIndex</a> for correct procedure to read Error Log.</p>"
LastTime,0x3008,1,ARRAY,UNSIGNED32,Service,ro,0,4294967295,0,1,s,"<p>Newest event is stored at sub-index 1, the older ones move down the list. Time is related to TotalTimeSeconds</p>

       <p>Up to 20 events are stored in the log.</p>

       <p>See <a href=""#EventLog"">EventLog.LastSubIndex</a> for correct procedure to read Error Log.</p>"
LastSubIndex,0x3009,0,VAR,UNSIGNED8,Service,rw,0,255,0,1,-,"<p>The entry at sub-index 0 contains the number of actual events that are recorded starting at subindex 1.</p>

       <p>Writing a zero to sub-index 0 clears the event log (and the error log).</p>

       <p>See <a href=""#EventLog"">EventLog.LastSubIndex</a> for correct procedure to read Error Log.</p>"
NrOfEvents,0x3009,1,ARRAY,UNSIGNED16,Service,ro,0,65535,0,1,incs,"<p>Newest event is stored at sub-index 1, the older ones move down the list.</p>

       <p>Up to 20 events are stored in the log.</p>

       <p>See <a href=""#EventLog"">EventLog.LastSubIndex</a> for correct procedure to read Error Log.</p>"
MasterClear,0x300A,0,VAR,UNSIGNED8,Service,rw,0,255,0,1,-,"<p>The Log Eeprom area is cleared, independent of current event status, by writing Zero to this object. It is not allowed to clear event log while enabled.</p>"
LastSubIndex,0x3010,0,VAR,UNSIGNED8,Operator,ro,0,255,0,1,-,Numbers of entries.
ExtendedWarnings,0x3010,1,VAR,UNSIGNED32,Operator,ro,0,4294967295,0,1,-,See Appendix A Error Handling.
ExtendedErrors,0x3010,2,VAR,UNSIGNED32,Operator,ro,0,4294967295,0,1,-,See Appendix A Error Handling.
EventCounter,0x3010,3,VAR,UNSIGNED16,Operator,ro,0,65535,0,1,incs,"This counter increase with one on every new event. It can be used in 

     Transient recorder to see exact when an event occurs, which might make it 

     easier to understand the plot results."
TrigEvent,0x3010,4,VAR,UNSIGNED16,Internal,rw,0,65535,0,1,-,"Write the Event number in this object to test it. This can be used to force 

     an event. Only one Event can be forced at the time. When writing 0 (or an 

     other event number) it will restore the previous state of the event. Was it 

     in EVENT_STATE_PENDING it will return to EVENT_STATE_PENDING."
SequenceNumber,0x3010,5,VAR,UNSIGNED8,Operator,ro,0,255,-,1,-,Increased by One each time a change in ActiveEventList occurs.
LastSubIndex,0x3011,0,VAR,UNSIGNED8,Operator,ro,0,20,0,1,-,"Number of active events. By reading, ActiveEvents are updated with a copy of a 50Hz scheduled list (i.e. max 20ms delay)."
ActiveEvents,0x3011,1,ARRAY,UNSIGNED16,Operator,ro,0,20,0,1,-,"Currently active events (maximum 20 events, not in time order). To update this list the LastSubIndex for this object must be read. <br>

       An event that is configured to trip the drive will be latched and can only be cleared from list by toggling Enable Power Stage-bit on->off (<a href=""#ApplicationCommands"">ApplicationCommands, CommandAll)</a>."
LastSubIndex,0x4000,0,VAR,UNSIGNED8,Operator,ro,0,255,0,1,-,Numbers of entries.
Iu,0x4000,4,VAR,INTEGER16,Operator,ro,-32768,32767,-,1,Apk,Instantaneous current in phase U.
Iv,0x4000,5,VAR,INTEGER16,Operator,ro,-32768,32767,-,1,Apk,Instantaneous current in phase V.
Iw,0x4000,6,VAR,INTEGER16,Operator,ro,-32768,32767,-,1,Apk,Instantaneous current in phase W.
SetDefaultValues,0x4000,7,VAR,INTEGER16,Service,wo,-32768,32767,-,1,-,Writing value 1 to this index sets the default values.
IvGain,0x4000,8,VAR,UNSIGNED16,Service,rw,0,65535,,1,see Description,"<p>Calibration done at 25degC</p>

       <p>A*10/(AD-range/2)</p>"
IvPosTempGain,0x4000,9,VAR,INTEGER16,Service,rw,-32768,32767,0,1,see Description,"<p>Calibration done at maximum 85degC.</p>

       <p>A*10/(AD-range/2)</p>"
IvNegTempGain,0x4000,10,VAR,INTEGER16,Service,rw,-32768,32767,0,1,see Description,"<p>Calibration done at minimum -40degC.</p>

       <p>A*10/(AD-range/2)</p>"
IwGain,0x4000,11,VAR,UNSIGNED16,Service,rw,0,65535,,1,see Description,"<p>Calibration done at 25degC</p>

       <p>A*10/(AD-range/2)</p>"
IwPosTempGain,0x4000,12,VAR,INTEGER16,Service,rw,-32768,32767,0,1,see Description,"<p>Calibration done at maximum 85degC.</p>

       <p>A*10/(AD-range/2)</p>"
IwNegTempGain,0x4000,13,VAR,INTEGER16,Service,rw,-32768,32767,0,1,see Description,"<p>Calibration done at minimum -40degC.</p>

       <p>A*10/(AD-range/2)</p>"
IvOffset,0x4000,14,VAR,INTEGER16,Service,rw,-32768,32767,0,1,-,Current measurement offset in phase V.
IwOffset,0x4000,15,VAR,INTEGER16,Service,rw,-32768,32767,0,1,-,Current measurement offset in phase w.
LastSubIndex,0x4100,0,VAR,UNSIGNED8,Service,ro,0,255,0,1,-,Number of threads.
Times,0x4100,1,ARRAY,UNSIGNED16,Operator,ro,0,65535,0,1,us,"Array of thread execution times (windowed avrage). Unit [us]

        <OL> 

        <LI> Statemachine </LI>

        <LI> 50 hz </LI>

        <LI> Independent Supervision </LI>

        <LI> CAN </LI>

        <LI> Slow Application </LI>

        <LI> Fast Application </LI>

       </OL>"
LastSubIndex,0x4101,0,VAR,UNSIGNED8,Service,ro,0,255,0,,,Number of threads.
MaxTimes,0x4101,1,ARRAY,UNSIGNED16,Internal,rw,0,65535,0,1,us,"Array of maximum thread execution times. Unit [us]

        <OL> 

        <LI> Statemachine</LI>

        <LI> 50 Hz</LI>

        <LI> Independent Supervision</LI>

        <LI> CAN</LI>

        <LI> Slow Application</LI>

        <LI> Fast Application</LI>

        </OL>

        <p>Information on this topic can be found in the ""SWAD - Plasma 3.doc"" located in the ""documentation&#92;architecture_design"" folder.</p>"
LastSubIndex,0x4102,0,VAR,UNSIGNED8,Operator,ro,0,255,0,1,-,Numbers of entries.
WatchDogTest,0x4102,2,VAR,UNSIGNED16,Internal,rw,0,65535,0,1,-,If writing 1 the internal watchdog is no longer kicked at. This is only for testing the internal watchdog.
ResetsSincePowerOn,0x4102,3,VAR,UNSIGNED16,Internal,ro,0,65535,0,1,incs,Number of CPU resets.
InternalDebugModuleName,0x4102,5,VAR,VISIBLE_STRING,Internal,ro,,,,,,Internal Debug Module Name.
InternalDebugLineNumber,0x4102,6,VAR,UNSIGNED16,Internal,ro,0,65535,-,,,Internal Debug Line Number.
InternalDebugCount,0x4102,7,VAR,UNSIGNED16,Internal,ro,0,65535,-,,,Internal Debug Count.
BootInternalDebugModuleName,0x4102,8,VAR,VISIBLE_STRING,Internal,ro,,,,,,Internal Debug Module Name in Boot part.
BootInternalDebugLineNumber,0x4102,9,VAR,UNSIGNED16,Internal,ro,0,65535,-,,,Internal Debug Line Number in Boot part.
BootInternalDebugCount,0x4102,10,VAR,UNSIGNED16,Internal,ro,0,65535,-,,,Internal Debug Count in Boot part.
LastSubIndex,0x4103,0,VAR,UNSIGNED8,Service,ro,0,255,0,1,-,Number of threads.
StatemachineSlotMaxExecTimes,0x4103,1,ARRAY,UNSIGNED16,Internal,ro,0,65535,0,1,-,Keep track of which states generated max time in us for the state machine 500 Hz slots.
LastSubIndex,0x4104,0,VAR,UNSIGNED8,Operator,ro,0,255,7,1,-,Numbers of entries.
GpioPort,0x4104,1,ARRAY,UNSIGNED16,Operator,ro,0,65535,-,1,-,"Pin status on the GPIO ports of the MCU. The state is shown regardless if the pin is an input or an output. 

        It shows the unfiltered state of the pins at the instant this OD access is served. 

        The pins may toggle serveral times between the readings without being reflected by this method.

       <table id=""ET"">

        <tr id=""ETHead""><th>Subindex</th><th id=""ETHead"">MCU Port</th></tr>

        <tr id=""ETRow""><td>1</td>  <td id=""ETData"">GPIOA</td></tr>

        <tr id=""ETRow""><td>2</td>  <td id=""ETData"">GPIOB</td></tr>

        <tr id=""ETRow""><td>3</td>  <td id=""ETData"">GPIOC</td></tr>

        <tr id=""ETRow""><td>4</td>  <td id=""ETData"">GPIOD</td></tr>

        <tr id=""ETRow""><td>5</td>  <td id=""ETData"">GPIOE</td></tr>

        <tr id=""ETRow""><td>6</td>  <td id=""ETData"">GPIOF</td></tr>

        <tr id=""ETRow""><td>7</td>  <td id=""ETData"">GPIOG</td></tr>

       </table>"
LastSubIndex,0x4110,0,VAR,UNSIGNED8,Operator,ro,0,255,0,1,-,Numbers of entries.
ReceiveErrorCounter,0x4110,1,VAR,UNSIGNED8,Internal,ro,0,255,-,,-,"CAN error counter according to protocol. <br/>

       When the counter exceeds 127, the CAN controller enters passive state."
TransmitErrorCounter,0x4110,2,VAR,UNSIGNED8,Internal,ro,0,255,-,,-,CAN error counter according to protocol. <br/>
MaxReceiveErrorCounter,0x4110,3,VAR,UNSIGNED8,Internal,ro,0,255,-,,-,"Max value detected of ReceiveErrorCounter. <br/>

       This value is sampled periodically and may not reflect the actual max value."
MaxTransmitErrorCounter,0x4110,4,VAR,UNSIGNED8,Internal,ro,0,255,-,,-,"Max value detected of TransmitErrorCounter. <br/>

       This value is sampled periodically and may not reflect the actual max value."
LastSubIndex,0x4200,0,VAR,UNSIGNED8,Service,ro,0,255,0,1,-,Number of password levels.
Password,0x4200,1,ARRAY,UNSIGNED32,Operator,rw,0,4294967295,0,1,-,"<p>

        Enter password according to trable below to enable writing to indexes with password protection. 

        Reading an index returns a random number used for calculating the password that shall be entered.

        </p>

        <table id=""ET"">

          <tr id=""ETHead"">

           <th id=""ETHead"">Sub index</th>

           <th id=""ETHead"">Name</th>

           <th id=""ETHead"">Description</th>

          </tr>

          <tr id=""ETRow"">

            <td id=""ETData"">1</td>

            <td id=""ETData"">Password level: SERVICE</td>

            <td id=""ETData"">Clearing of the error log and the time counters, access to calibration parameters</td>

          </tr>

          <tr id=""ETRow"">

           <td id=""ETData"">2</td>

           <td id=""ETData"">Password level: SERVICE</td>

           <td id=""ETData"">Clearing of the error log and the time counters, access to calibration parameters</td>

          </tr>

          <tr id=""ETRow"">

            <td id=""ETData"">3</td>

            <td id=""ETData"">Password level: OEM</td>

            <td id=""ETData"">Setup parameters that has to be handled with care</td>

          </tr>

          <tr id=""ETRow"">

            <td id=""ETData"">4</td>

            <td id=""ETData"">Not Used</td>

            <td id=""ETData""></td>

          </tr>

          <tr id=""ETRow"">

            <td id=""ETData"">5</td>

            <td id=""ETData"">Not Used</td>

            <td id=""ETData""></td>

          </tr>

          <tr id=""ETRow"">

            <td id=""ETData"">6</td>

            <td id=""ETData"">Password level: INTERNAL</td>

            <td id=""ETData"">Internal parameters mainly for development purpose</td>

          </tr>

          <tr id=""ETRow"">

            <td id=""ETData"">7</td>

            <td id=""ETData"">Password level: ALL</td>

            <td id=""ETData"">All parameters are accessible</td>

          </tr>

        </table>"
LastSubIndex,0x5F00,0,VAR,UNSIGNED8,Operator,ro,0,255,0,1,-,Numbers of entries.
RevisionNumber,0x5F00,1,VAR,UNSIGNED32,Operator,ro,0,65535,0,1,see Description,"Subversion revision number of the Inmotion EVS CANopen Object Dictionary Specification.<br/> 

       See ""http://sthsv11/svn/vehicle/common_standards_and_specifications/trunk/EVS CANopen object dictionary specification.doc""."
LastSubIndex,0x5F01,0,VAR,UNSIGNED8,Operator,ro,0,255,0,1,-,Numbers of entries.
BootSwNameAndArticleNumber,0x5F01,1,VAR,VISIBLE_STRING,Operator,ro,-,-,-,1,-,"""ASCII"" according to ISO 8859-1.<br/>

        E.g. ""SW Boot 30MIPS 69Y20001A08""."
BootSwBuildTime,0x5F01,2,VAR,UNSIGNED32,Operator,ro,-,-,-,1,-,Not supported.
BootSwCheckSum,0x5F01,3,VAR,UNSIGNED16,Operator,ro,-,-,-,1,-,Not supported.
ApplicationSwArticleNumber,0x5F01,4,VAR,VISIBLE_STRING,Operator,ro,-,-,69GUS222C00x03,1,-,"""ASCII"" according to ISO 8859-1.<br/>

        E.g. ""69Y05483C04""."
ApplicationSwBuildTime,0x5F01,5,VAR,UNSIGNED32,Operator,ro,0,4294967295,1683815975,1,see Description,Number of seconds since 1970-01-01.
ApplicationSwCheckSum,0x5F01,6,VAR,UNSIGNED16,Operator,ro,0,65535,-,1,-,"CRC32 checksum of SW, stored last in flash."
ApplicationSwBuildDate,0x5F01,7,VAR,VISIBLE_STRING,Operator,ro,-,-,-,1,-,Date generated by compiler at compile time.
ApplicationSwSvnRevision,0x5F01,8,VAR,UNSIGNED16,Operator,ro,0,65535,173439U,1,-,Subversion revision. Data generated by compiler at compile time.
ApplicationSwSvnModifiedFiles,0x5F01,9,VAR,UNSIGNED16,Operator,ro,0,65535,0,1,-,No of modified files in current Subversion revision. Data generated by compiler at compile time.
CustomerSpecificHexNumber,0x5F01,10,VAR,UNSIGNED32,Operator,ro,0,4294967295,-,1,-,Customer Specific Number as Hex.
CustomerSpecificDecNumber,0x5F01,11,VAR,UNSIGNED32,Operator,ro,0,4294967295,-,1,-,Customer Specific Number as Decimal.
CustomerSpecificString,0x5F01,12,VAR,VISIBLE_STRING,Operator,ro,-,-,Stevens University,1,-,Customer Specific String.
SoftwareApplicationNumber,0x5F01,13,VAR,UNSIGNED16,Operator,ro,0,65535,222U,1,-,"Application number.<br/>

       e.g. 69Y05***C07, where *** is the application number."
SoftwareMajorVersion,0x5F01,14,VAR,UNSIGNED16,Operator,ro,0,65535,0u,1,-,"Application software major version.<br/>

       e.g. 69Y05002C**x01, where ** is the software major revision."
SoftwareMinorVersion,0x5F01,15,VAR,UNSIGNED16,Operator,ro,0,65535,3u,1,-,"Application software minor version.<br/>

       e.g. 69Y05002C01x**, where ** is the software minor revision."
LastSubIndex,0x5F02,0,VAR,UNSIGNED8,Operator,ro,0,255,0,1,-,Numbers of entries.
SwToHwCompatibilityNumber,0x5F02,1,VAR,UNSIGNED16,Operator,ro,0,65535,0,1,-,"A number that is increased every time a new hardware release also requires 

       a new software release. Used for example by the service tool to prevent 

       downloading of software in non-compatible hardware."
HwArticleNumber,0x5F02,2,VAR,VISIBLE_STRING,Operator,ro,-,-,-,1,-,"""ASCII"" according to ISO 8859-1. E.g. ""80Y05599CD04"".

        Were 80Y05599 come from SW and CD04 come from HW (EEPROM) in the example."
HwFileUsed,0x5F02,6,VAR,VISIBLE_STRING,Operator,ro,-,-,80G21501EC02,1,-,"The name of the HW file used. E.g. ""80Y05599CD04"". Stored in flash."
MCUFamily,0x5F02,8,VAR,VISIBLE_STRING,Operator,ro,-,-,STM32,1,-,"String defined by Inmotion to identify the MCU Family.<br/>

       Possible values: ""STM32"""
MCUUniqueId,0x5F02,9,VAR,VISIBLE_STRING,Operator,ro,-,-,-,1,-,Unique MCU ID. 96-bits in hexadecimal ascii-string.
MCUDeviceTypeId,0x5F02,10,VAR,UNSIGNED16,Operator,ro,-,-,-,1,-,"MCU Device (Type) Id. 12-bit. For F10x medium-density devices, the device ID is 0x410. For F2xx, the device ID is 0x411.

       See DBGMCU_IDCODE in MCU reference manual for further details."
MCURevisionId,0x5F02,11,VAR,UNSIGNED16,Operator,ro,-,-,-,1,-,MCU Revision. 16-bit. See DBGMCU_IDCODE in MCU reference manual for further details.
LastSubIndex,0x5F03,0,VAR,UNSIGNED8,Operator,ro,0,255,0,1,-,Numbers of entries.
TotalTimeHours,0x5F03,1,VAR,UNSIGNED32,Service,rw,0,4294967295,-,1,h,Total time that KEY voltage is on and not in sleep or standby mode. Writing to this sub-index sets the TotalTimeHours.
LastSubIndex,0x5F04,0,VAR,UNSIGNED8,Operator,ro,0,255,0,1,-,Numbers of entries.
Bitrate,0x5F04,1,VAR,UNSIGNED16,Service,rw,125,1000,500U,1,kbit/s,"125, 250, 400, 500 and 1000 kbit/s"
Pdo1Timeout,0x5F04,2,VAR,UNSIGNED16,Service,rw,0,8000,0U,1,ms,Setting the time to zero means no timeout.
Pdo2Timeout,0x5F04,3,VAR,UNSIGNED16,Service,rw,0,8000,0U,1,ms,Setting the time to zero means no timeout.
Pdo3Timeout,0x5F04,4,VAR,UNSIGNED16,Service,rw,0,8000,0U,1,ms,Setting the time to zero means no timeout.
Pdo4Timeout,0x5F04,5,VAR,UNSIGNED16,Service,rw,0,8000,0U,1,ms,Setting the time to zero means no timeout.
SyncTimeout,0x5F04,6,VAR,UNSIGNED16,Service,rw,0,8000,0U,1,ms,"Setting the time to zero means:

        <UL> 

        <LI> No sync timeouts will be generated </LI>

        <LI> Tx PDOs with transmission type 1-240 will be sent periodicaly when in CO_OPERATIONAL </LI>

        </UL>"
NodeId,0x5F04,7,VAR,UNSIGNED16,Service,rw,1,31,,1,-,"<p> NodeId used to calculate COB-id for SDO1 and PDO1-4.</p>

       <p>A change of CANopen Node Id is not effective until after a reset.</p>"
CanOpenState,0x5F04,8,VAR,UNSIGNED16,Service,ro,0,3,-,1,-,"CanOpen State:

        <UL> 

        <LI> 0 = CO_INIT </LI>

        <LI> 1 = CO_PRE_OPERATIONAL </LI>

        <LI> 2 = CO_STOPPED </LI>

        <LI> 3 = CO_SLEEP </LI>

        <LI> 4 = CO_STANDBY </LI>

        <LI> 5 = CO_EXIT_SLEEP </LI>

        <LI> 6 = CO_EXIT_STANDBY </LI>

        <LI> 7 = CO_OPERATIONAL </LI>

        </UL>"
NodeIdCanTalk,0x5F04,9,VAR,UNSIGNED16,Service,rw,1,31,,1,-,"<p> NodeId used to calculate COB-id for CANTalk. </p>

       <p> Normally same Id as NodeId used to calculate SDO1 and PDOs COB Id's. </p>"
NodeIdSDO2,0x5F04,10,VAR,UNSIGNED16,Service,rw,0,127,,1,-,"<p> NodeId used to calculate COB-id for SDO2.</p>

       <p> SDO2 is nonstandard but used when to allow two SDO masters to communicate 

       with one drive. Normally SDO2 COB Id = SDO1 COB Id + 32. </p>

       <p> Set to 0 to turn off SDO2. </p>

       <p>A change of CANopen Node Id is not effective until after a reset.</p>"
SdoTimeout,0x5F04,11,VAR,UNSIGNED16,Service,rw,0,8000,0U,1,ms,"<p> Sdo Timeout is used when no PDOs are active.</p>

       <p> If an Sdo timeout occurs when the drive will disable itself. </p>

       <p> Set to 0 to turn off timeout. </p>

       <p> Reset of unit is required to take effect. </p>"
LastSubIndex,0x5F10,0,VAR,UNSIGNED8,Operator,ro,0,255,0,1,-,Numbers of entries.
EnableWrite,0x5F10,1,VAR,UNSIGNED32,Internal,wo,-,-,-,1,-,Write key value to enable update of one of the ItemInformation strings. Written in production.
ItemSerialNumber,0x5F10,2,VAR,VISIBLE_STRING,Operator,rw,-,-,-,1,-,"""ASCII"" according to ISO 8859-1. <BR/>

       Write key values to EnableWrite to enable update of ItemSerialNumber once. Written in production. Max 15 characters long."
ItemType,0x5F10,3,VAR,VISIBLE_STRING,Operator,rw,-,-,-,1,-,"""ASCII"" according to ISO 8859-1. <BR/>

       Write key values to EnableWrite to enable update of ItemType once. Written in production. Max 17 characters long."
ItemNumber,0x5F10,4,VAR,VISIBLE_STRING,Operator,rw,-,-,-,1,-,"""ASCII"" according to ISO 8859-1. <BR/>

       Write key values to EnableWrite to enable update of ItemNumber once. Written in production. Max 17 characters long."
ItemProductionDate,0x5F10,5,VAR,UNSIGNED32,Internal,rw,0,4294967295,0,1,see Description,Number of seconds since 1970-01-01. Written in production.<br/>
ItemStatus,0x5F10,6,VAR,VISIBLE_STRING,Operator,rw,-,-,-,1,-,"""ASCII"" according to ISO 8859-1. <BR/>

       Write key values to EnableWrite to enable update of ItemStatus once. Written in production. Max 3 characters long."
CustomerItemNumber,0x5F10,8,VAR,VISIBLE_STRING,Operator,rw,-,-,-,1,-,"""ASCII"" according to ISO 8859-1. <BR/>

       Write key values to EnableWrite to enable update of CustomerItemNumber once. Written in production. Max 15 characters long."
